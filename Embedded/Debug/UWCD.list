
UWCD.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000045f4  08000198  08000198  00001198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003f0  0800478c  0800478c  0000578c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b7c  08004b7c  0000600c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08004b7c  08004b7c  00005b7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b84  08004b84  0000600c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b84  08004b84  00005b84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004b88  08004b88  00005b88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000000c  20000000  08004b8c  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000044d8  2000000c  08004b98  0000600c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200044e4  08004b98  000064e4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000600c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00009e75  00000000  00000000  0000603c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001a53  00000000  00000000  0000feb1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000007f8  00000000  00000000  00011908  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000627  00000000  00000000  00012100  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016b3b  00000000  00000000  00012727  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000a243  00000000  00000000  00029262  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00091a4a  00000000  00000000  000334a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000c4eef  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002284  00000000  00000000  000c4f34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005c  00000000  00000000  000c71b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	2000000c 	.word	0x2000000c
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08004774 	.word	0x08004774

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000010 	.word	0x20000010
 80001d4:	08004774 	.word	0x08004774

080001d8 <__aeabi_dmul>:
 80001d8:	b570      	push	{r4, r5, r6, lr}
 80001da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80001de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80001e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80001e6:	bf1d      	ittte	ne
 80001e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80001ec:	ea94 0f0c 	teqne	r4, ip
 80001f0:	ea95 0f0c 	teqne	r5, ip
 80001f4:	f000 f8de 	bleq	80003b4 <__aeabi_dmul+0x1dc>
 80001f8:	442c      	add	r4, r5
 80001fa:	ea81 0603 	eor.w	r6, r1, r3
 80001fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000202:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000206:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800020a:	bf18      	it	ne
 800020c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000210:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000214:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000218:	d038      	beq.n	800028c <__aeabi_dmul+0xb4>
 800021a:	fba0 ce02 	umull	ip, lr, r0, r2
 800021e:	f04f 0500 	mov.w	r5, #0
 8000222:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000226:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800022a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800022e:	f04f 0600 	mov.w	r6, #0
 8000232:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000236:	f09c 0f00 	teq	ip, #0
 800023a:	bf18      	it	ne
 800023c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000240:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000244:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000248:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800024c:	d204      	bcs.n	8000258 <__aeabi_dmul+0x80>
 800024e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000252:	416d      	adcs	r5, r5
 8000254:	eb46 0606 	adc.w	r6, r6, r6
 8000258:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800025c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000260:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000264:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000268:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800026c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000270:	bf88      	it	hi
 8000272:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000276:	d81e      	bhi.n	80002b6 <__aeabi_dmul+0xde>
 8000278:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	bd70      	pop	{r4, r5, r6, pc}
 800028c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000290:	ea46 0101 	orr.w	r1, r6, r1
 8000294:	ea40 0002 	orr.w	r0, r0, r2
 8000298:	ea81 0103 	eor.w	r1, r1, r3
 800029c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80002a0:	bfc2      	ittt	gt
 80002a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80002a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80002aa:	bd70      	popgt	{r4, r5, r6, pc}
 80002ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80002b0:	f04f 0e00 	mov.w	lr, #0
 80002b4:	3c01      	subs	r4, #1
 80002b6:	f300 80ab 	bgt.w	8000410 <__aeabi_dmul+0x238>
 80002ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80002be:	bfde      	ittt	le
 80002c0:	2000      	movle	r0, #0
 80002c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80002c6:	bd70      	pople	{r4, r5, r6, pc}
 80002c8:	f1c4 0400 	rsb	r4, r4, #0
 80002cc:	3c20      	subs	r4, #32
 80002ce:	da35      	bge.n	800033c <__aeabi_dmul+0x164>
 80002d0:	340c      	adds	r4, #12
 80002d2:	dc1b      	bgt.n	800030c <__aeabi_dmul+0x134>
 80002d4:	f104 0414 	add.w	r4, r4, #20
 80002d8:	f1c4 0520 	rsb	r5, r4, #32
 80002dc:	fa00 f305 	lsl.w	r3, r0, r5
 80002e0:	fa20 f004 	lsr.w	r0, r0, r4
 80002e4:	fa01 f205 	lsl.w	r2, r1, r5
 80002e8:	ea40 0002 	orr.w	r0, r0, r2
 80002ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80002f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80002f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80002f8:	fa21 f604 	lsr.w	r6, r1, r4
 80002fc:	eb42 0106 	adc.w	r1, r2, r6
 8000300:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000304:	bf08      	it	eq
 8000306:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800030a:	bd70      	pop	{r4, r5, r6, pc}
 800030c:	f1c4 040c 	rsb	r4, r4, #12
 8000310:	f1c4 0520 	rsb	r5, r4, #32
 8000314:	fa00 f304 	lsl.w	r3, r0, r4
 8000318:	fa20 f005 	lsr.w	r0, r0, r5
 800031c:	fa01 f204 	lsl.w	r2, r1, r4
 8000320:	ea40 0002 	orr.w	r0, r0, r2
 8000324:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000328:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000334:	bf08      	it	eq
 8000336:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800033a:	bd70      	pop	{r4, r5, r6, pc}
 800033c:	f1c4 0520 	rsb	r5, r4, #32
 8000340:	fa00 f205 	lsl.w	r2, r0, r5
 8000344:	ea4e 0e02 	orr.w	lr, lr, r2
 8000348:	fa20 f304 	lsr.w	r3, r0, r4
 800034c:	fa01 f205 	lsl.w	r2, r1, r5
 8000350:	ea43 0302 	orr.w	r3, r3, r2
 8000354:	fa21 f004 	lsr.w	r0, r1, r4
 8000358:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800035c:	fa21 f204 	lsr.w	r2, r1, r4
 8000360:	ea20 0002 	bic.w	r0, r0, r2
 8000364:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000368:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800036c:	bf08      	it	eq
 800036e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000372:	bd70      	pop	{r4, r5, r6, pc}
 8000374:	f094 0f00 	teq	r4, #0
 8000378:	d10f      	bne.n	800039a <__aeabi_dmul+0x1c2>
 800037a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800037e:	0040      	lsls	r0, r0, #1
 8000380:	eb41 0101 	adc.w	r1, r1, r1
 8000384:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000388:	bf08      	it	eq
 800038a:	3c01      	subeq	r4, #1
 800038c:	d0f7      	beq.n	800037e <__aeabi_dmul+0x1a6>
 800038e:	ea41 0106 	orr.w	r1, r1, r6
 8000392:	f095 0f00 	teq	r5, #0
 8000396:	bf18      	it	ne
 8000398:	4770      	bxne	lr
 800039a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800039e:	0052      	lsls	r2, r2, #1
 80003a0:	eb43 0303 	adc.w	r3, r3, r3
 80003a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80003a8:	bf08      	it	eq
 80003aa:	3d01      	subeq	r5, #1
 80003ac:	d0f7      	beq.n	800039e <__aeabi_dmul+0x1c6>
 80003ae:	ea43 0306 	orr.w	r3, r3, r6
 80003b2:	4770      	bx	lr
 80003b4:	ea94 0f0c 	teq	r4, ip
 80003b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80003bc:	bf18      	it	ne
 80003be:	ea95 0f0c 	teqne	r5, ip
 80003c2:	d00c      	beq.n	80003de <__aeabi_dmul+0x206>
 80003c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80003c8:	bf18      	it	ne
 80003ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80003ce:	d1d1      	bne.n	8000374 <__aeabi_dmul+0x19c>
 80003d0:	ea81 0103 	eor.w	r1, r1, r3
 80003d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80003d8:	f04f 0000 	mov.w	r0, #0
 80003dc:	bd70      	pop	{r4, r5, r6, pc}
 80003de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80003e2:	bf06      	itte	eq
 80003e4:	4610      	moveq	r0, r2
 80003e6:	4619      	moveq	r1, r3
 80003e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80003ec:	d019      	beq.n	8000422 <__aeabi_dmul+0x24a>
 80003ee:	ea94 0f0c 	teq	r4, ip
 80003f2:	d102      	bne.n	80003fa <__aeabi_dmul+0x222>
 80003f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80003f8:	d113      	bne.n	8000422 <__aeabi_dmul+0x24a>
 80003fa:	ea95 0f0c 	teq	r5, ip
 80003fe:	d105      	bne.n	800040c <__aeabi_dmul+0x234>
 8000400:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000404:	bf1c      	itt	ne
 8000406:	4610      	movne	r0, r2
 8000408:	4619      	movne	r1, r3
 800040a:	d10a      	bne.n	8000422 <__aeabi_dmul+0x24a>
 800040c:	ea81 0103 	eor.w	r1, r1, r3
 8000410:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000414:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000418:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800041c:	f04f 0000 	mov.w	r0, #0
 8000420:	bd70      	pop	{r4, r5, r6, pc}
 8000422:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000426:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800042a:	bd70      	pop	{r4, r5, r6, pc}

0800042c <__aeabi_drsub>:
 800042c:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000430:	e002      	b.n	8000438 <__adddf3>
 8000432:	bf00      	nop

08000434 <__aeabi_dsub>:
 8000434:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000438 <__adddf3>:
 8000438:	b530      	push	{r4, r5, lr}
 800043a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800043e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000442:	ea94 0f05 	teq	r4, r5
 8000446:	bf08      	it	eq
 8000448:	ea90 0f02 	teqeq	r0, r2
 800044c:	bf1f      	itttt	ne
 800044e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000452:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000456:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800045a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800045e:	f000 80e2 	beq.w	8000626 <__adddf3+0x1ee>
 8000462:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000466:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800046a:	bfb8      	it	lt
 800046c:	426d      	neglt	r5, r5
 800046e:	dd0c      	ble.n	800048a <__adddf3+0x52>
 8000470:	442c      	add	r4, r5
 8000472:	ea80 0202 	eor.w	r2, r0, r2
 8000476:	ea81 0303 	eor.w	r3, r1, r3
 800047a:	ea82 0000 	eor.w	r0, r2, r0
 800047e:	ea83 0101 	eor.w	r1, r3, r1
 8000482:	ea80 0202 	eor.w	r2, r0, r2
 8000486:	ea81 0303 	eor.w	r3, r1, r3
 800048a:	2d36      	cmp	r5, #54	@ 0x36
 800048c:	bf88      	it	hi
 800048e:	bd30      	pophi	{r4, r5, pc}
 8000490:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000494:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000498:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 800049c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80004a0:	d002      	beq.n	80004a8 <__adddf3+0x70>
 80004a2:	4240      	negs	r0, r0
 80004a4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004a8:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80004ac:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80004b0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80004b4:	d002      	beq.n	80004bc <__adddf3+0x84>
 80004b6:	4252      	negs	r2, r2
 80004b8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80004bc:	ea94 0f05 	teq	r4, r5
 80004c0:	f000 80a7 	beq.w	8000612 <__adddf3+0x1da>
 80004c4:	f1a4 0401 	sub.w	r4, r4, #1
 80004c8:	f1d5 0e20 	rsbs	lr, r5, #32
 80004cc:	db0d      	blt.n	80004ea <__adddf3+0xb2>
 80004ce:	fa02 fc0e 	lsl.w	ip, r2, lr
 80004d2:	fa22 f205 	lsr.w	r2, r2, r5
 80004d6:	1880      	adds	r0, r0, r2
 80004d8:	f141 0100 	adc.w	r1, r1, #0
 80004dc:	fa03 f20e 	lsl.w	r2, r3, lr
 80004e0:	1880      	adds	r0, r0, r2
 80004e2:	fa43 f305 	asr.w	r3, r3, r5
 80004e6:	4159      	adcs	r1, r3
 80004e8:	e00e      	b.n	8000508 <__adddf3+0xd0>
 80004ea:	f1a5 0520 	sub.w	r5, r5, #32
 80004ee:	f10e 0e20 	add.w	lr, lr, #32
 80004f2:	2a01      	cmp	r2, #1
 80004f4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80004f8:	bf28      	it	cs
 80004fa:	f04c 0c02 	orrcs.w	ip, ip, #2
 80004fe:	fa43 f305 	asr.w	r3, r3, r5
 8000502:	18c0      	adds	r0, r0, r3
 8000504:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	d507      	bpl.n	800051e <__adddf3+0xe6>
 800050e:	f04f 0e00 	mov.w	lr, #0
 8000512:	f1dc 0c00 	rsbs	ip, ip, #0
 8000516:	eb7e 0000 	sbcs.w	r0, lr, r0
 800051a:	eb6e 0101 	sbc.w	r1, lr, r1
 800051e:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000522:	d31b      	bcc.n	800055c <__adddf3+0x124>
 8000524:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000528:	d30c      	bcc.n	8000544 <__adddf3+0x10c>
 800052a:	0849      	lsrs	r1, r1, #1
 800052c:	ea5f 0030 	movs.w	r0, r0, rrx
 8000530:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000534:	f104 0401 	add.w	r4, r4, #1
 8000538:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800053c:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000540:	f080 809a 	bcs.w	8000678 <__adddf3+0x240>
 8000544:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000548:	bf08      	it	eq
 800054a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800054e:	f150 0000 	adcs.w	r0, r0, #0
 8000552:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000556:	ea41 0105 	orr.w	r1, r1, r5
 800055a:	bd30      	pop	{r4, r5, pc}
 800055c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000560:	4140      	adcs	r0, r0
 8000562:	eb41 0101 	adc.w	r1, r1, r1
 8000566:	3c01      	subs	r4, #1
 8000568:	bf28      	it	cs
 800056a:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800056e:	d2e9      	bcs.n	8000544 <__adddf3+0x10c>
 8000570:	f091 0f00 	teq	r1, #0
 8000574:	bf04      	itt	eq
 8000576:	4601      	moveq	r1, r0
 8000578:	2000      	moveq	r0, #0
 800057a:	fab1 f381 	clz	r3, r1
 800057e:	bf08      	it	eq
 8000580:	3320      	addeq	r3, #32
 8000582:	f1a3 030b 	sub.w	r3, r3, #11
 8000586:	f1b3 0220 	subs.w	r2, r3, #32
 800058a:	da0c      	bge.n	80005a6 <__adddf3+0x16e>
 800058c:	320c      	adds	r2, #12
 800058e:	dd08      	ble.n	80005a2 <__adddf3+0x16a>
 8000590:	f102 0c14 	add.w	ip, r2, #20
 8000594:	f1c2 020c 	rsb	r2, r2, #12
 8000598:	fa01 f00c 	lsl.w	r0, r1, ip
 800059c:	fa21 f102 	lsr.w	r1, r1, r2
 80005a0:	e00c      	b.n	80005bc <__adddf3+0x184>
 80005a2:	f102 0214 	add.w	r2, r2, #20
 80005a6:	bfd8      	it	le
 80005a8:	f1c2 0c20 	rsble	ip, r2, #32
 80005ac:	fa01 f102 	lsl.w	r1, r1, r2
 80005b0:	fa20 fc0c 	lsr.w	ip, r0, ip
 80005b4:	bfdc      	itt	le
 80005b6:	ea41 010c 	orrle.w	r1, r1, ip
 80005ba:	4090      	lslle	r0, r2
 80005bc:	1ae4      	subs	r4, r4, r3
 80005be:	bfa2      	ittt	ge
 80005c0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80005c4:	4329      	orrge	r1, r5
 80005c6:	bd30      	popge	{r4, r5, pc}
 80005c8:	ea6f 0404 	mvn.w	r4, r4
 80005cc:	3c1f      	subs	r4, #31
 80005ce:	da1c      	bge.n	800060a <__adddf3+0x1d2>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc0e      	bgt.n	80005f2 <__adddf3+0x1ba>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0220 	rsb	r2, r4, #32
 80005dc:	fa20 f004 	lsr.w	r0, r0, r4
 80005e0:	fa01 f302 	lsl.w	r3, r1, r2
 80005e4:	ea40 0003 	orr.w	r0, r0, r3
 80005e8:	fa21 f304 	lsr.w	r3, r1, r4
 80005ec:	ea45 0103 	orr.w	r1, r5, r3
 80005f0:	bd30      	pop	{r4, r5, pc}
 80005f2:	f1c4 040c 	rsb	r4, r4, #12
 80005f6:	f1c4 0220 	rsb	r2, r4, #32
 80005fa:	fa20 f002 	lsr.w	r0, r0, r2
 80005fe:	fa01 f304 	lsl.w	r3, r1, r4
 8000602:	ea40 0003 	orr.w	r0, r0, r3
 8000606:	4629      	mov	r1, r5
 8000608:	bd30      	pop	{r4, r5, pc}
 800060a:	fa21 f004 	lsr.w	r0, r1, r4
 800060e:	4629      	mov	r1, r5
 8000610:	bd30      	pop	{r4, r5, pc}
 8000612:	f094 0f00 	teq	r4, #0
 8000616:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800061a:	bf06      	itte	eq
 800061c:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000620:	3401      	addeq	r4, #1
 8000622:	3d01      	subne	r5, #1
 8000624:	e74e      	b.n	80004c4 <__adddf3+0x8c>
 8000626:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800062a:	bf18      	it	ne
 800062c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000630:	d029      	beq.n	8000686 <__adddf3+0x24e>
 8000632:	ea94 0f05 	teq	r4, r5
 8000636:	bf08      	it	eq
 8000638:	ea90 0f02 	teqeq	r0, r2
 800063c:	d005      	beq.n	800064a <__adddf3+0x212>
 800063e:	ea54 0c00 	orrs.w	ip, r4, r0
 8000642:	bf04      	itt	eq
 8000644:	4619      	moveq	r1, r3
 8000646:	4610      	moveq	r0, r2
 8000648:	bd30      	pop	{r4, r5, pc}
 800064a:	ea91 0f03 	teq	r1, r3
 800064e:	bf1e      	ittt	ne
 8000650:	2100      	movne	r1, #0
 8000652:	2000      	movne	r0, #0
 8000654:	bd30      	popne	{r4, r5, pc}
 8000656:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800065a:	d105      	bne.n	8000668 <__adddf3+0x230>
 800065c:	0040      	lsls	r0, r0, #1
 800065e:	4149      	adcs	r1, r1
 8000660:	bf28      	it	cs
 8000662:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000666:	bd30      	pop	{r4, r5, pc}
 8000668:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 800066c:	bf3c      	itt	cc
 800066e:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000672:	bd30      	popcc	{r4, r5, pc}
 8000674:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000678:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 800067c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000680:	f04f 0000 	mov.w	r0, #0
 8000684:	bd30      	pop	{r4, r5, pc}
 8000686:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800068a:	bf1a      	itte	ne
 800068c:	4619      	movne	r1, r3
 800068e:	4610      	movne	r0, r2
 8000690:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000694:	bf1c      	itt	ne
 8000696:	460b      	movne	r3, r1
 8000698:	4602      	movne	r2, r0
 800069a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800069e:	bf06      	itte	eq
 80006a0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80006a4:	ea91 0f03 	teqeq	r1, r3
 80006a8:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80006ac:	bd30      	pop	{r4, r5, pc}
 80006ae:	bf00      	nop

080006b0 <__aeabi_ui2d>:
 80006b0:	f090 0f00 	teq	r0, #0
 80006b4:	bf04      	itt	eq
 80006b6:	2100      	moveq	r1, #0
 80006b8:	4770      	bxeq	lr
 80006ba:	b530      	push	{r4, r5, lr}
 80006bc:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80006c0:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80006c4:	f04f 0500 	mov.w	r5, #0
 80006c8:	f04f 0100 	mov.w	r1, #0
 80006cc:	e750      	b.n	8000570 <__adddf3+0x138>
 80006ce:	bf00      	nop

080006d0 <__aeabi_i2d>:
 80006d0:	f090 0f00 	teq	r0, #0
 80006d4:	bf04      	itt	eq
 80006d6:	2100      	moveq	r1, #0
 80006d8:	4770      	bxeq	lr
 80006da:	b530      	push	{r4, r5, lr}
 80006dc:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80006e0:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80006e4:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80006e8:	bf48      	it	mi
 80006ea:	4240      	negmi	r0, r0
 80006ec:	f04f 0100 	mov.w	r1, #0
 80006f0:	e73e      	b.n	8000570 <__adddf3+0x138>
 80006f2:	bf00      	nop

080006f4 <__aeabi_f2d>:
 80006f4:	0042      	lsls	r2, r0, #1
 80006f6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80006fa:	ea4f 0131 	mov.w	r1, r1, rrx
 80006fe:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000702:	bf1f      	itttt	ne
 8000704:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 8000708:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 800070c:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000710:	4770      	bxne	lr
 8000712:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 8000716:	bf08      	it	eq
 8000718:	4770      	bxeq	lr
 800071a:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 800071e:	bf04      	itt	eq
 8000720:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000724:	4770      	bxeq	lr
 8000726:	b530      	push	{r4, r5, lr}
 8000728:	f44f 7460 	mov.w	r4, #896	@ 0x380
 800072c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000734:	e71c      	b.n	8000570 <__adddf3+0x138>
 8000736:	bf00      	nop

08000738 <__aeabi_ul2d>:
 8000738:	ea50 0201 	orrs.w	r2, r0, r1
 800073c:	bf08      	it	eq
 800073e:	4770      	bxeq	lr
 8000740:	b530      	push	{r4, r5, lr}
 8000742:	f04f 0500 	mov.w	r5, #0
 8000746:	e00a      	b.n	800075e <__aeabi_l2d+0x16>

08000748 <__aeabi_l2d>:
 8000748:	ea50 0201 	orrs.w	r2, r0, r1
 800074c:	bf08      	it	eq
 800074e:	4770      	bxeq	lr
 8000750:	b530      	push	{r4, r5, lr}
 8000752:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000756:	d502      	bpl.n	800075e <__aeabi_l2d+0x16>
 8000758:	4240      	negs	r0, r0
 800075a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800075e:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000762:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000766:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800076a:	f43f aed8 	beq.w	800051e <__adddf3+0xe6>
 800076e:	f04f 0203 	mov.w	r2, #3
 8000772:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000776:	bf18      	it	ne
 8000778:	3203      	addne	r2, #3
 800077a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800077e:	bf18      	it	ne
 8000780:	3203      	addne	r2, #3
 8000782:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000786:	f1c2 0320 	rsb	r3, r2, #32
 800078a:	fa00 fc03 	lsl.w	ip, r0, r3
 800078e:	fa20 f002 	lsr.w	r0, r0, r2
 8000792:	fa01 fe03 	lsl.w	lr, r1, r3
 8000796:	ea40 000e 	orr.w	r0, r0, lr
 800079a:	fa21 f102 	lsr.w	r1, r1, r2
 800079e:	4414      	add	r4, r2
 80007a0:	e6bd      	b.n	800051e <__adddf3+0xe6>
 80007a2:	bf00      	nop

080007a4 <__aeabi_d2f>:
 80007a4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80007a8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 80007ac:	bf24      	itt	cs
 80007ae:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 80007b2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 80007b6:	d90d      	bls.n	80007d4 <__aeabi_d2f+0x30>
 80007b8:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 80007bc:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80007c0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 80007c4:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 80007c8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80007cc:	bf08      	it	eq
 80007ce:	f020 0001 	biceq.w	r0, r0, #1
 80007d2:	4770      	bx	lr
 80007d4:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 80007d8:	d121      	bne.n	800081e <__aeabi_d2f+0x7a>
 80007da:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 80007de:	bfbc      	itt	lt
 80007e0:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 80007e4:	4770      	bxlt	lr
 80007e6:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80007ea:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80007ee:	f1c2 0218 	rsb	r2, r2, #24
 80007f2:	f1c2 0c20 	rsb	ip, r2, #32
 80007f6:	fa10 f30c 	lsls.w	r3, r0, ip
 80007fa:	fa20 f002 	lsr.w	r0, r0, r2
 80007fe:	bf18      	it	ne
 8000800:	f040 0001 	orrne.w	r0, r0, #1
 8000804:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000808:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 800080c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000810:	ea40 000c 	orr.w	r0, r0, ip
 8000814:	fa23 f302 	lsr.w	r3, r3, r2
 8000818:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800081c:	e7cc      	b.n	80007b8 <__aeabi_d2f+0x14>
 800081e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000822:	d107      	bne.n	8000834 <__aeabi_d2f+0x90>
 8000824:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000828:	bf1e      	ittt	ne
 800082a:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 800082e:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000832:	4770      	bxne	lr
 8000834:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000838:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 800083c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000840:	4770      	bx	lr
 8000842:	bf00      	nop

08000844 <__aeabi_uldivmod>:
 8000844:	b953      	cbnz	r3, 800085c <__aeabi_uldivmod+0x18>
 8000846:	b94a      	cbnz	r2, 800085c <__aeabi_uldivmod+0x18>
 8000848:	2900      	cmp	r1, #0
 800084a:	bf08      	it	eq
 800084c:	2800      	cmpeq	r0, #0
 800084e:	bf1c      	itt	ne
 8000850:	f04f 31ff 	movne.w	r1, #4294967295
 8000854:	f04f 30ff 	movne.w	r0, #4294967295
 8000858:	f000 b988 	b.w	8000b6c <__aeabi_idiv0>
 800085c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000860:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000864:	f000 f806 	bl	8000874 <__udivmoddi4>
 8000868:	f8dd e004 	ldr.w	lr, [sp, #4]
 800086c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000870:	b004      	add	sp, #16
 8000872:	4770      	bx	lr

08000874 <__udivmoddi4>:
 8000874:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000878:	9d08      	ldr	r5, [sp, #32]
 800087a:	468e      	mov	lr, r1
 800087c:	4604      	mov	r4, r0
 800087e:	4688      	mov	r8, r1
 8000880:	2b00      	cmp	r3, #0
 8000882:	d14a      	bne.n	800091a <__udivmoddi4+0xa6>
 8000884:	428a      	cmp	r2, r1
 8000886:	4617      	mov	r7, r2
 8000888:	d962      	bls.n	8000950 <__udivmoddi4+0xdc>
 800088a:	fab2 f682 	clz	r6, r2
 800088e:	b14e      	cbz	r6, 80008a4 <__udivmoddi4+0x30>
 8000890:	f1c6 0320 	rsb	r3, r6, #32
 8000894:	fa01 f806 	lsl.w	r8, r1, r6
 8000898:	fa20 f303 	lsr.w	r3, r0, r3
 800089c:	40b7      	lsls	r7, r6
 800089e:	ea43 0808 	orr.w	r8, r3, r8
 80008a2:	40b4      	lsls	r4, r6
 80008a4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80008a8:	fa1f fc87 	uxth.w	ip, r7
 80008ac:	fbb8 f1fe 	udiv	r1, r8, lr
 80008b0:	0c23      	lsrs	r3, r4, #16
 80008b2:	fb0e 8811 	mls	r8, lr, r1, r8
 80008b6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80008ba:	fb01 f20c 	mul.w	r2, r1, ip
 80008be:	429a      	cmp	r2, r3
 80008c0:	d909      	bls.n	80008d6 <__udivmoddi4+0x62>
 80008c2:	18fb      	adds	r3, r7, r3
 80008c4:	f101 30ff 	add.w	r0, r1, #4294967295
 80008c8:	f080 80ea 	bcs.w	8000aa0 <__udivmoddi4+0x22c>
 80008cc:	429a      	cmp	r2, r3
 80008ce:	f240 80e7 	bls.w	8000aa0 <__udivmoddi4+0x22c>
 80008d2:	3902      	subs	r1, #2
 80008d4:	443b      	add	r3, r7
 80008d6:	1a9a      	subs	r2, r3, r2
 80008d8:	b2a3      	uxth	r3, r4
 80008da:	fbb2 f0fe 	udiv	r0, r2, lr
 80008de:	fb0e 2210 	mls	r2, lr, r0, r2
 80008e2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80008e6:	fb00 fc0c 	mul.w	ip, r0, ip
 80008ea:	459c      	cmp	ip, r3
 80008ec:	d909      	bls.n	8000902 <__udivmoddi4+0x8e>
 80008ee:	18fb      	adds	r3, r7, r3
 80008f0:	f100 32ff 	add.w	r2, r0, #4294967295
 80008f4:	f080 80d6 	bcs.w	8000aa4 <__udivmoddi4+0x230>
 80008f8:	459c      	cmp	ip, r3
 80008fa:	f240 80d3 	bls.w	8000aa4 <__udivmoddi4+0x230>
 80008fe:	443b      	add	r3, r7
 8000900:	3802      	subs	r0, #2
 8000902:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000906:	eba3 030c 	sub.w	r3, r3, ip
 800090a:	2100      	movs	r1, #0
 800090c:	b11d      	cbz	r5, 8000916 <__udivmoddi4+0xa2>
 800090e:	40f3      	lsrs	r3, r6
 8000910:	2200      	movs	r2, #0
 8000912:	e9c5 3200 	strd	r3, r2, [r5]
 8000916:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800091a:	428b      	cmp	r3, r1
 800091c:	d905      	bls.n	800092a <__udivmoddi4+0xb6>
 800091e:	b10d      	cbz	r5, 8000924 <__udivmoddi4+0xb0>
 8000920:	e9c5 0100 	strd	r0, r1, [r5]
 8000924:	2100      	movs	r1, #0
 8000926:	4608      	mov	r0, r1
 8000928:	e7f5      	b.n	8000916 <__udivmoddi4+0xa2>
 800092a:	fab3 f183 	clz	r1, r3
 800092e:	2900      	cmp	r1, #0
 8000930:	d146      	bne.n	80009c0 <__udivmoddi4+0x14c>
 8000932:	4573      	cmp	r3, lr
 8000934:	d302      	bcc.n	800093c <__udivmoddi4+0xc8>
 8000936:	4282      	cmp	r2, r0
 8000938:	f200 8105 	bhi.w	8000b46 <__udivmoddi4+0x2d2>
 800093c:	1a84      	subs	r4, r0, r2
 800093e:	eb6e 0203 	sbc.w	r2, lr, r3
 8000942:	2001      	movs	r0, #1
 8000944:	4690      	mov	r8, r2
 8000946:	2d00      	cmp	r5, #0
 8000948:	d0e5      	beq.n	8000916 <__udivmoddi4+0xa2>
 800094a:	e9c5 4800 	strd	r4, r8, [r5]
 800094e:	e7e2      	b.n	8000916 <__udivmoddi4+0xa2>
 8000950:	2a00      	cmp	r2, #0
 8000952:	f000 8090 	beq.w	8000a76 <__udivmoddi4+0x202>
 8000956:	fab2 f682 	clz	r6, r2
 800095a:	2e00      	cmp	r6, #0
 800095c:	f040 80a4 	bne.w	8000aa8 <__udivmoddi4+0x234>
 8000960:	1a8a      	subs	r2, r1, r2
 8000962:	0c03      	lsrs	r3, r0, #16
 8000964:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000968:	b280      	uxth	r0, r0
 800096a:	b2bc      	uxth	r4, r7
 800096c:	2101      	movs	r1, #1
 800096e:	fbb2 fcfe 	udiv	ip, r2, lr
 8000972:	fb0e 221c 	mls	r2, lr, ip, r2
 8000976:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800097a:	fb04 f20c 	mul.w	r2, r4, ip
 800097e:	429a      	cmp	r2, r3
 8000980:	d907      	bls.n	8000992 <__udivmoddi4+0x11e>
 8000982:	18fb      	adds	r3, r7, r3
 8000984:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000988:	d202      	bcs.n	8000990 <__udivmoddi4+0x11c>
 800098a:	429a      	cmp	r2, r3
 800098c:	f200 80e0 	bhi.w	8000b50 <__udivmoddi4+0x2dc>
 8000990:	46c4      	mov	ip, r8
 8000992:	1a9b      	subs	r3, r3, r2
 8000994:	fbb3 f2fe 	udiv	r2, r3, lr
 8000998:	fb0e 3312 	mls	r3, lr, r2, r3
 800099c:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80009a0:	fb02 f404 	mul.w	r4, r2, r4
 80009a4:	429c      	cmp	r4, r3
 80009a6:	d907      	bls.n	80009b8 <__udivmoddi4+0x144>
 80009a8:	18fb      	adds	r3, r7, r3
 80009aa:	f102 30ff 	add.w	r0, r2, #4294967295
 80009ae:	d202      	bcs.n	80009b6 <__udivmoddi4+0x142>
 80009b0:	429c      	cmp	r4, r3
 80009b2:	f200 80ca 	bhi.w	8000b4a <__udivmoddi4+0x2d6>
 80009b6:	4602      	mov	r2, r0
 80009b8:	1b1b      	subs	r3, r3, r4
 80009ba:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80009be:	e7a5      	b.n	800090c <__udivmoddi4+0x98>
 80009c0:	f1c1 0620 	rsb	r6, r1, #32
 80009c4:	408b      	lsls	r3, r1
 80009c6:	fa22 f706 	lsr.w	r7, r2, r6
 80009ca:	431f      	orrs	r7, r3
 80009cc:	fa0e f401 	lsl.w	r4, lr, r1
 80009d0:	fa20 f306 	lsr.w	r3, r0, r6
 80009d4:	fa2e fe06 	lsr.w	lr, lr, r6
 80009d8:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80009dc:	4323      	orrs	r3, r4
 80009de:	fa00 f801 	lsl.w	r8, r0, r1
 80009e2:	fa1f fc87 	uxth.w	ip, r7
 80009e6:	fbbe f0f9 	udiv	r0, lr, r9
 80009ea:	0c1c      	lsrs	r4, r3, #16
 80009ec:	fb09 ee10 	mls	lr, r9, r0, lr
 80009f0:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80009f4:	fb00 fe0c 	mul.w	lr, r0, ip
 80009f8:	45a6      	cmp	lr, r4
 80009fa:	fa02 f201 	lsl.w	r2, r2, r1
 80009fe:	d909      	bls.n	8000a14 <__udivmoddi4+0x1a0>
 8000a00:	193c      	adds	r4, r7, r4
 8000a02:	f100 3aff 	add.w	sl, r0, #4294967295
 8000a06:	f080 809c 	bcs.w	8000b42 <__udivmoddi4+0x2ce>
 8000a0a:	45a6      	cmp	lr, r4
 8000a0c:	f240 8099 	bls.w	8000b42 <__udivmoddi4+0x2ce>
 8000a10:	3802      	subs	r0, #2
 8000a12:	443c      	add	r4, r7
 8000a14:	eba4 040e 	sub.w	r4, r4, lr
 8000a18:	fa1f fe83 	uxth.w	lr, r3
 8000a1c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000a20:	fb09 4413 	mls	r4, r9, r3, r4
 8000a24:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000a28:	fb03 fc0c 	mul.w	ip, r3, ip
 8000a2c:	45a4      	cmp	ip, r4
 8000a2e:	d908      	bls.n	8000a42 <__udivmoddi4+0x1ce>
 8000a30:	193c      	adds	r4, r7, r4
 8000a32:	f103 3eff 	add.w	lr, r3, #4294967295
 8000a36:	f080 8082 	bcs.w	8000b3e <__udivmoddi4+0x2ca>
 8000a3a:	45a4      	cmp	ip, r4
 8000a3c:	d97f      	bls.n	8000b3e <__udivmoddi4+0x2ca>
 8000a3e:	3b02      	subs	r3, #2
 8000a40:	443c      	add	r4, r7
 8000a42:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000a46:	eba4 040c 	sub.w	r4, r4, ip
 8000a4a:	fba0 ec02 	umull	lr, ip, r0, r2
 8000a4e:	4564      	cmp	r4, ip
 8000a50:	4673      	mov	r3, lr
 8000a52:	46e1      	mov	r9, ip
 8000a54:	d362      	bcc.n	8000b1c <__udivmoddi4+0x2a8>
 8000a56:	d05f      	beq.n	8000b18 <__udivmoddi4+0x2a4>
 8000a58:	b15d      	cbz	r5, 8000a72 <__udivmoddi4+0x1fe>
 8000a5a:	ebb8 0203 	subs.w	r2, r8, r3
 8000a5e:	eb64 0409 	sbc.w	r4, r4, r9
 8000a62:	fa04 f606 	lsl.w	r6, r4, r6
 8000a66:	fa22 f301 	lsr.w	r3, r2, r1
 8000a6a:	431e      	orrs	r6, r3
 8000a6c:	40cc      	lsrs	r4, r1
 8000a6e:	e9c5 6400 	strd	r6, r4, [r5]
 8000a72:	2100      	movs	r1, #0
 8000a74:	e74f      	b.n	8000916 <__udivmoddi4+0xa2>
 8000a76:	fbb1 fcf2 	udiv	ip, r1, r2
 8000a7a:	0c01      	lsrs	r1, r0, #16
 8000a7c:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000a80:	b280      	uxth	r0, r0
 8000a82:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000a86:	463b      	mov	r3, r7
 8000a88:	4638      	mov	r0, r7
 8000a8a:	463c      	mov	r4, r7
 8000a8c:	46b8      	mov	r8, r7
 8000a8e:	46be      	mov	lr, r7
 8000a90:	2620      	movs	r6, #32
 8000a92:	fbb1 f1f7 	udiv	r1, r1, r7
 8000a96:	eba2 0208 	sub.w	r2, r2, r8
 8000a9a:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000a9e:	e766      	b.n	800096e <__udivmoddi4+0xfa>
 8000aa0:	4601      	mov	r1, r0
 8000aa2:	e718      	b.n	80008d6 <__udivmoddi4+0x62>
 8000aa4:	4610      	mov	r0, r2
 8000aa6:	e72c      	b.n	8000902 <__udivmoddi4+0x8e>
 8000aa8:	f1c6 0220 	rsb	r2, r6, #32
 8000aac:	fa2e f302 	lsr.w	r3, lr, r2
 8000ab0:	40b7      	lsls	r7, r6
 8000ab2:	40b1      	lsls	r1, r6
 8000ab4:	fa20 f202 	lsr.w	r2, r0, r2
 8000ab8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000abc:	430a      	orrs	r2, r1
 8000abe:	fbb3 f8fe 	udiv	r8, r3, lr
 8000ac2:	b2bc      	uxth	r4, r7
 8000ac4:	fb0e 3318 	mls	r3, lr, r8, r3
 8000ac8:	0c11      	lsrs	r1, r2, #16
 8000aca:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ace:	fb08 f904 	mul.w	r9, r8, r4
 8000ad2:	40b0      	lsls	r0, r6
 8000ad4:	4589      	cmp	r9, r1
 8000ad6:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000ada:	b280      	uxth	r0, r0
 8000adc:	d93e      	bls.n	8000b5c <__udivmoddi4+0x2e8>
 8000ade:	1879      	adds	r1, r7, r1
 8000ae0:	f108 3cff 	add.w	ip, r8, #4294967295
 8000ae4:	d201      	bcs.n	8000aea <__udivmoddi4+0x276>
 8000ae6:	4589      	cmp	r9, r1
 8000ae8:	d81f      	bhi.n	8000b2a <__udivmoddi4+0x2b6>
 8000aea:	eba1 0109 	sub.w	r1, r1, r9
 8000aee:	fbb1 f9fe 	udiv	r9, r1, lr
 8000af2:	fb09 f804 	mul.w	r8, r9, r4
 8000af6:	fb0e 1119 	mls	r1, lr, r9, r1
 8000afa:	b292      	uxth	r2, r2
 8000afc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b00:	4542      	cmp	r2, r8
 8000b02:	d229      	bcs.n	8000b58 <__udivmoddi4+0x2e4>
 8000b04:	18ba      	adds	r2, r7, r2
 8000b06:	f109 31ff 	add.w	r1, r9, #4294967295
 8000b0a:	d2c4      	bcs.n	8000a96 <__udivmoddi4+0x222>
 8000b0c:	4542      	cmp	r2, r8
 8000b0e:	d2c2      	bcs.n	8000a96 <__udivmoddi4+0x222>
 8000b10:	f1a9 0102 	sub.w	r1, r9, #2
 8000b14:	443a      	add	r2, r7
 8000b16:	e7be      	b.n	8000a96 <__udivmoddi4+0x222>
 8000b18:	45f0      	cmp	r8, lr
 8000b1a:	d29d      	bcs.n	8000a58 <__udivmoddi4+0x1e4>
 8000b1c:	ebbe 0302 	subs.w	r3, lr, r2
 8000b20:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000b24:	3801      	subs	r0, #1
 8000b26:	46e1      	mov	r9, ip
 8000b28:	e796      	b.n	8000a58 <__udivmoddi4+0x1e4>
 8000b2a:	eba7 0909 	sub.w	r9, r7, r9
 8000b2e:	4449      	add	r1, r9
 8000b30:	f1a8 0c02 	sub.w	ip, r8, #2
 8000b34:	fbb1 f9fe 	udiv	r9, r1, lr
 8000b38:	fb09 f804 	mul.w	r8, r9, r4
 8000b3c:	e7db      	b.n	8000af6 <__udivmoddi4+0x282>
 8000b3e:	4673      	mov	r3, lr
 8000b40:	e77f      	b.n	8000a42 <__udivmoddi4+0x1ce>
 8000b42:	4650      	mov	r0, sl
 8000b44:	e766      	b.n	8000a14 <__udivmoddi4+0x1a0>
 8000b46:	4608      	mov	r0, r1
 8000b48:	e6fd      	b.n	8000946 <__udivmoddi4+0xd2>
 8000b4a:	443b      	add	r3, r7
 8000b4c:	3a02      	subs	r2, #2
 8000b4e:	e733      	b.n	80009b8 <__udivmoddi4+0x144>
 8000b50:	f1ac 0c02 	sub.w	ip, ip, #2
 8000b54:	443b      	add	r3, r7
 8000b56:	e71c      	b.n	8000992 <__udivmoddi4+0x11e>
 8000b58:	4649      	mov	r1, r9
 8000b5a:	e79c      	b.n	8000a96 <__udivmoddi4+0x222>
 8000b5c:	eba1 0109 	sub.w	r1, r1, r9
 8000b60:	46c4      	mov	ip, r8
 8000b62:	fbb1 f9fe 	udiv	r9, r1, lr
 8000b66:	fb09 f804 	mul.w	r8, r9, r4
 8000b6a:	e7c4      	b.n	8000af6 <__udivmoddi4+0x282>

08000b6c <__aeabi_idiv0>:
 8000b6c:	4770      	bx	lr
 8000b6e:	bf00      	nop

08000b70 <OnFrameReceived>:
}
*/


void OnFrameReceived(UartProtocol* proto, uint16_t cmd, uint16_t len, uint8_t* payload)
{
 8000b70:	b580      	push	{r7, lr}
 8000b72:	b098      	sub	sp, #96	@ 0x60
 8000b74:	af02      	add	r7, sp, #8
 8000b76:	60f8      	str	r0, [r7, #12]
 8000b78:	607b      	str	r3, [r7, #4]
 8000b7a:	460b      	mov	r3, r1
 8000b7c:	817b      	strh	r3, [r7, #10]
 8000b7e:	4613      	mov	r3, r2
 8000b80:	813b      	strh	r3, [r7, #8]
    if (cmd == CMD_QPSK_MOD_DEMOD) {
 8000b82:	897b      	ldrh	r3, [r7, #10]
 8000b84:	f241 0210 	movw	r2, #4112	@ 0x1010
 8000b88:	4293      	cmp	r3, r2
 8000b8a:	d152      	bne.n	8000c32 <OnFrameReceived+0xc2>
        QpskRingBuffer_Init(&tx_ringbuf);
 8000b8c:	482b      	ldr	r0, [pc, #172]	@ (8000c3c <OnFrameReceived+0xcc>)
 8000b8e:	f000 fdc3 	bl	8001718 <QpskRingBuffer_Init>
        QpskRingBuffer_Init(&rx_ringbuf);
 8000b92:	482b      	ldr	r0, [pc, #172]	@ (8000c40 <OnFrameReceived+0xd0>)
 8000b94:	f000 fdc0 	bl	8001718 <QpskRingBuffer_Init>
        QpskModem_Modulate(&huart2, &modem, payload, len);
 8000b98:	893b      	ldrh	r3, [r7, #8]
 8000b9a:	687a      	ldr	r2, [r7, #4]
 8000b9c:	4929      	ldr	r1, [pc, #164]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000b9e:	482a      	ldr	r0, [pc, #168]	@ (8000c48 <OnFrameReceived+0xd8>)
 8000ba0:	f000 faa2 	bl	80010e8 <QpskModem_Modulate>
        QpskModem_SymbolsToIQ(&modem);
 8000ba4:	4827      	ldr	r0, [pc, #156]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000ba6:	f000 fccf 	bl	8001548 <QpskModem_SymbolsToIQ>
        QpskModem_GenerateSignal(&modem, &tx_ringbuf, 1.0f);
 8000baa:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8000bae:	4923      	ldr	r1, [pc, #140]	@ (8000c3c <OnFrameReceived+0xcc>)
 8000bb0:	4824      	ldr	r0, [pc, #144]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000bb2:	f000 fd07 	bl	80015c4 <QpskModem_GenerateSignal>
        Qpsk_SimulateReception(&tx_ringbuf, &rx_ringbuf);
 8000bb6:	4922      	ldr	r1, [pc, #136]	@ (8000c40 <OnFrameReceived+0xd0>)
 8000bb8:	4820      	ldr	r0, [pc, #128]	@ (8000c3c <OnFrameReceived+0xcc>)
 8000bba:	f000 fe65 	bl	8001888 <Qpsk_SimulateReception>

        uint8_t data_out[QPSK_MAX_SYMBOLS/4];
        uint16_t len_out = 0;
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	f8a7 3054 	strh.w	r3, [r7, #84]	@ 0x54
        QpskModem_Demodulate(&huart2, &modem, &rx_ringbuf, data_out, &len_out);
 8000bc4:	f107 0214 	add.w	r2, r7, #20
 8000bc8:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8000bcc:	9300      	str	r3, [sp, #0]
 8000bce:	4613      	mov	r3, r2
 8000bd0:	4a1b      	ldr	r2, [pc, #108]	@ (8000c40 <OnFrameReceived+0xd0>)
 8000bd2:	491c      	ldr	r1, [pc, #112]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000bd4:	481c      	ldr	r0, [pc, #112]	@ (8000c48 <OnFrameReceived+0xd8>)
 8000bd6:	f000 faef 	bl	80011b8 <QpskModem_Demodulate>

        // Prépare les symboles pour la transmission optique
        for (uint16_t i = 0; i < modem.num_symbols; ++i)
 8000bda:	2300      	movs	r3, #0
 8000bdc:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
 8000be0:	e00c      	b.n	8000bfc <OnFrameReceived+0x8c>
            qpsk_symbols[i] = modem.symbols[i];
 8000be2:	f8b7 2056 	ldrh.w	r2, [r7, #86]	@ 0x56
 8000be6:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 8000bea:	4916      	ldr	r1, [pc, #88]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000bec:	5c89      	ldrb	r1, [r1, r2]
 8000bee:	4a17      	ldr	r2, [pc, #92]	@ (8000c4c <OnFrameReceived+0xdc>)
 8000bf0:	54d1      	strb	r1, [r2, r3]
        for (uint16_t i = 0; i < modem.num_symbols; ++i)
 8000bf2:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 8000bf6:	3301      	adds	r3, #1
 8000bf8:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
 8000bfc:	4b11      	ldr	r3, [pc, #68]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000bfe:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 8000c02:	f8b7 2056 	ldrh.w	r2, [r7, #86]	@ 0x56
 8000c06:	429a      	cmp	r2, r3
 8000c08:	d3eb      	bcc.n	8000be2 <OnFrameReceived+0x72>
        qpsk_num_symbols = modem.num_symbols;
 8000c0a:	4b0e      	ldr	r3, [pc, #56]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000c0c:	f8b3 2100 	ldrh.w	r2, [r3, #256]	@ 0x100
 8000c10:	4b0f      	ldr	r3, [pc, #60]	@ (8000c50 <OnFrameReceived+0xe0>)
 8000c12:	801a      	strh	r2, [r3, #0]
        qpsk_symbol_idx = 0;
 8000c14:	4b0f      	ldr	r3, [pc, #60]	@ (8000c54 <OnFrameReceived+0xe4>)
 8000c16:	2200      	movs	r2, #0
 8000c18:	801a      	strh	r2, [r3, #0]
        qpsk_transmitting = 1; // Drapeau pour démarrer la transmission optique
 8000c1a:	4b0f      	ldr	r3, [pc, #60]	@ (8000c58 <OnFrameReceived+0xe8>)
 8000c1c:	2201      	movs	r2, #1
 8000c1e:	701a      	strb	r2, [r3, #0]

        UartProtocol_SendFrame(&huart2, CMD_QPSK_RESULT, len_out, data_out);
 8000c20:	f8b7 2054 	ldrh.w	r2, [r7, #84]	@ 0x54
 8000c24:	f107 0314 	add.w	r3, r7, #20
 8000c28:	f249 0110 	movw	r1, #36880	@ 0x9010
 8000c2c:	4806      	ldr	r0, [pc, #24]	@ (8000c48 <OnFrameReceived+0xd8>)
 8000c2e:	f001 f873 	bl	8001d18 <UartProtocol_SendFrame>
    }
}
 8000c32:	bf00      	nop
 8000c34:	3758      	adds	r7, #88	@ 0x58
 8000c36:	46bd      	mov	sp, r7
 8000c38:	bd80      	pop	{r7, pc}
 8000c3a:	bf00      	nop
 8000c3c:	200003c8 	.word	0x200003c8
 8000c40:	200023d0 	.word	0x200023d0
 8000c44:	200000b8 	.word	0x200000b8
 8000c48:	20000070 	.word	0x20000070
 8000c4c:	200043d8 	.word	0x200043d8
 8000c50:	200044d8 	.word	0x200044d8
 8000c54:	200044da 	.word	0x200044da
 8000c58:	200044dc 	.word	0x200044dc

08000c5c <send_led_preamble.0>:
  }*/

  uint32_t last_symbol_tick = 0;
  const uint32_t symbol_duration_ms = 1000; // Ajuste selon la caméra

  void send_led_preamble(uint32_t symbol_duration_ms) {
 8000c5c:	b580      	push	{r7, lr}
 8000c5e:	b084      	sub	sp, #16
 8000c60:	af00      	add	r7, sp, #0
 8000c62:	6078      	str	r0, [r7, #4]
 8000c64:	f8c7 c000 	str.w	ip, [r7]
      // Ex : 8 symboles alternés
      for (int i = 0; i < 8; ++i) {
 8000c68:	2300      	movs	r3, #0
 8000c6a:	60fb      	str	r3, [r7, #12]
 8000c6c:	e030      	b.n	8000cd0 <send_led_preamble.0+0x74>
          uint8_t left = (i % 2 == 0) ? 1 : 0;
 8000c6e:	68fb      	ldr	r3, [r7, #12]
 8000c70:	f003 0301 	and.w	r3, r3, #1
 8000c74:	2b00      	cmp	r3, #0
 8000c76:	bf0c      	ite	eq
 8000c78:	2301      	moveq	r3, #1
 8000c7a:	2300      	movne	r3, #0
 8000c7c:	b2db      	uxtb	r3, r3
 8000c7e:	72fb      	strb	r3, [r7, #11]
          uint8_t right = (i % 2 == 1) ? 1 : 0;
 8000c80:	68fb      	ldr	r3, [r7, #12]
 8000c82:	2b00      	cmp	r3, #0
 8000c84:	f003 0301 	and.w	r3, r3, #1
 8000c88:	bfb8      	it	lt
 8000c8a:	425b      	neglt	r3, r3
 8000c8c:	2b01      	cmp	r3, #1
 8000c8e:	bf0c      	ite	eq
 8000c90:	2301      	moveq	r3, #1
 8000c92:	2300      	movne	r3, #0
 8000c94:	b2db      	uxtb	r3, r3
 8000c96:	72bb      	strb	r3, [r7, #10]
          HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, left ? GPIO_PIN_SET : GPIO_PIN_RESET);   // LED_A
 8000c98:	7afb      	ldrb	r3, [r7, #11]
 8000c9a:	2b00      	cmp	r3, #0
 8000c9c:	bf14      	ite	ne
 8000c9e:	2301      	movne	r3, #1
 8000ca0:	2300      	moveq	r3, #0
 8000ca2:	b2db      	uxtb	r3, r3
 8000ca4:	461a      	mov	r2, r3
 8000ca6:	2120      	movs	r1, #32
 8000ca8:	4812      	ldr	r0, [pc, #72]	@ (8000cf4 <send_led_preamble.0+0x98>)
 8000caa:	f001 feaf 	bl	8002a0c <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, right ? GPIO_PIN_SET : GPIO_PIN_RESET);  // LED_B
 8000cae:	7abb      	ldrb	r3, [r7, #10]
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	bf14      	ite	ne
 8000cb4:	2301      	movne	r3, #1
 8000cb6:	2300      	moveq	r3, #0
 8000cb8:	b2db      	uxtb	r3, r3
 8000cba:	461a      	mov	r2, r3
 8000cbc:	2140      	movs	r1, #64	@ 0x40
 8000cbe:	480d      	ldr	r0, [pc, #52]	@ (8000cf4 <send_led_preamble.0+0x98>)
 8000cc0:	f001 fea4 	bl	8002a0c <HAL_GPIO_WritePin>
          HAL_Delay(symbol_duration_ms); // ou utilise ton timer pour la précision
 8000cc4:	6878      	ldr	r0, [r7, #4]
 8000cc6:	f001 f9a1 	bl	800200c <HAL_Delay>
      for (int i = 0; i < 8; ++i) {
 8000cca:	68fb      	ldr	r3, [r7, #12]
 8000ccc:	3301      	adds	r3, #1
 8000cce:	60fb      	str	r3, [r7, #12]
 8000cd0:	68fb      	ldr	r3, [r7, #12]
 8000cd2:	2b07      	cmp	r3, #7
 8000cd4:	ddcb      	ble.n	8000c6e <send_led_preamble.0+0x12>
      }
      // Éteindre les LEDs à la fin du préambule
      HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	2120      	movs	r1, #32
 8000cda:	4806      	ldr	r0, [pc, #24]	@ (8000cf4 <send_led_preamble.0+0x98>)
 8000cdc:	f001 fe96 	bl	8002a0c <HAL_GPIO_WritePin>
      HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	2140      	movs	r1, #64	@ 0x40
 8000ce4:	4803      	ldr	r0, [pc, #12]	@ (8000cf4 <send_led_preamble.0+0x98>)
 8000ce6:	f001 fe91 	bl	8002a0c <HAL_GPIO_WritePin>
  }
 8000cea:	bf00      	nop
 8000cec:	3710      	adds	r7, #16
 8000cee:	46bd      	mov	sp, r7
 8000cf0:	bd80      	pop	{r7, pc}
 8000cf2:	bf00      	nop
 8000cf4:	40020000 	.word	0x40020000

08000cf8 <main>:
{
 8000cf8:	b580      	push	{r7, lr}
 8000cfa:	b0ca      	sub	sp, #296	@ 0x128
 8000cfc:	af00      	add	r7, sp, #0
int main(void)
 8000cfe:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000d02:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118
  HAL_Init();
 8000d06:	f001 f90f 	bl	8001f28 <HAL_Init>
  SystemClock_Config();
 8000d0a:	f000 f8ab 	bl	8000e64 <SystemClock_Config>
  MX_GPIO_Init();
 8000d0e:	f000 f983 	bl	8001018 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000d12:	f000 f957 	bl	8000fc4 <MX_USART2_UART_Init>
  MX_ADC1_Init();
 8000d16:	f000 f903 	bl	8000f20 <MX_ADC1_Init>
  UartProtocol_Init(&proto, OnFrameReceived);
 8000d1a:	f107 0308 	add.w	r3, r7, #8
 8000d1e:	4947      	ldr	r1, [pc, #284]	@ (8000e3c <main+0x144>)
 8000d20:	4618      	mov	r0, r3
 8000d22:	f000 ff10 	bl	8001b46 <UartProtocol_Init>
  QpskModem_Init(&modem, 16, 40000.0f, 640000.0f);
 8000d26:	eddf 0a46 	vldr	s1, [pc, #280]	@ 8000e40 <main+0x148>
 8000d2a:	ed9f 0a46 	vldr	s0, [pc, #280]	@ 8000e44 <main+0x14c>
 8000d2e:	2110      	movs	r1, #16
 8000d30:	4845      	ldr	r0, [pc, #276]	@ (8000e48 <main+0x150>)
 8000d32:	f000 f9bd 	bl	80010b0 <QpskModem_Init>
  uint32_t last_symbol_tick = 0;
 8000d36:	2300      	movs	r3, #0
 8000d38:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
  const uint32_t symbol_duration_ms = 1000; // Ajuste selon la caméra
 8000d3c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000d40:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120

  while (1)
  {
      if (HAL_UART_Receive(&huart2, &c, 1, 10) == HAL_OK) {
 8000d44:	1df9      	adds	r1, r7, #7
 8000d46:	230a      	movs	r3, #10
 8000d48:	2201      	movs	r2, #1
 8000d4a:	4840      	ldr	r0, [pc, #256]	@ (8000e4c <main+0x154>)
 8000d4c:	f002 fbab 	bl	80034a6 <HAL_UART_Receive>
 8000d50:	4603      	mov	r3, r0
 8000d52:	2b00      	cmp	r3, #0
 8000d54:	d10a      	bne.n	8000d6c <main+0x74>
          UartProtocol_ParseByte(&proto, c);
 8000d56:	f507 7394 	add.w	r3, r7, #296	@ 0x128
 8000d5a:	f2a3 1321 	subw	r3, r3, #289	@ 0x121
 8000d5e:	781a      	ldrb	r2, [r3, #0]
 8000d60:	f107 0308 	add.w	r3, r7, #8
 8000d64:	4611      	mov	r1, r2
 8000d66:	4618      	mov	r0, r3
 8000d68:	f000 ff0e 	bl	8001b88 <UartProtocol_ParseByte>
      }

      // Transmission QPSK optique
      if (qpsk_transmitting && (HAL_GetTick() - last_symbol_tick >= symbol_duration_ms)) {
 8000d6c:	4b38      	ldr	r3, [pc, #224]	@ (8000e50 <main+0x158>)
 8000d6e:	781b      	ldrb	r3, [r3, #0]
 8000d70:	b2db      	uxtb	r3, r3
 8000d72:	2b00      	cmp	r3, #0
 8000d74:	d0e6      	beq.n	8000d44 <main+0x4c>
 8000d76:	f001 f93d 	bl	8001ff4 <HAL_GetTick>
 8000d7a:	4602      	mov	r2, r0
 8000d7c:	f8d7 3124 	ldr.w	r3, [r7, #292]	@ 0x124
 8000d80:	1ad3      	subs	r3, r2, r3
 8000d82:	f8d7 2120 	ldr.w	r2, [r7, #288]	@ 0x120
 8000d86:	429a      	cmp	r2, r3
 8000d88:	d8dc      	bhi.n	8000d44 <main+0x4c>
          if (qpsk_symbol_idx == 0) {
 8000d8a:	4b32      	ldr	r3, [pc, #200]	@ (8000e54 <main+0x15c>)
 8000d8c:	881b      	ldrh	r3, [r3, #0]
 8000d8e:	b29b      	uxth	r3, r3
 8000d90:	2b00      	cmp	r3, #0
 8000d92:	d106      	bne.n	8000da2 <main+0xaa>
              // Juste avant de commencer la transmission QPSK, envoie le préambule
              send_led_preamble(symbol_duration_ms);
 8000d94:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 8000d98:	469c      	mov	ip, r3
 8000d9a:	f8d7 0120 	ldr.w	r0, [r7, #288]	@ 0x120
 8000d9e:	f7ff ff5d 	bl	8000c5c <send_led_preamble.0>
          }

          if (qpsk_symbol_idx < qpsk_num_symbols) {
 8000da2:	4b2c      	ldr	r3, [pc, #176]	@ (8000e54 <main+0x15c>)
 8000da4:	881b      	ldrh	r3, [r3, #0]
 8000da6:	b29a      	uxth	r2, r3
 8000da8:	4b2b      	ldr	r3, [pc, #172]	@ (8000e58 <main+0x160>)
 8000daa:	881b      	ldrh	r3, [r3, #0]
 8000dac:	b29b      	uxth	r3, r3
 8000dae:	429a      	cmp	r2, r3
 8000db0:	d236      	bcs.n	8000e20 <main+0x128>
              uint8_t symbol = qpsk_symbols[qpsk_symbol_idx++];
 8000db2:	4b28      	ldr	r3, [pc, #160]	@ (8000e54 <main+0x15c>)
 8000db4:	881b      	ldrh	r3, [r3, #0]
 8000db6:	b29b      	uxth	r3, r3
 8000db8:	1c5a      	adds	r2, r3, #1
 8000dba:	b291      	uxth	r1, r2
 8000dbc:	4a25      	ldr	r2, [pc, #148]	@ (8000e54 <main+0x15c>)
 8000dbe:	8011      	strh	r1, [r2, #0]
 8000dc0:	461a      	mov	r2, r3
 8000dc2:	4b26      	ldr	r3, [pc, #152]	@ (8000e5c <main+0x164>)
 8000dc4:	5c9b      	ldrb	r3, [r3, r2]
 8000dc6:	f887 311f 	strb.w	r3, [r7, #287]	@ 0x11f
              uint8_t bit0 = (symbol >> 1) & 0x01; // MSB
 8000dca:	f897 311f 	ldrb.w	r3, [r7, #287]	@ 0x11f
 8000dce:	085b      	lsrs	r3, r3, #1
 8000dd0:	b2db      	uxtb	r3, r3
 8000dd2:	f003 0301 	and.w	r3, r3, #1
 8000dd6:	f887 311e 	strb.w	r3, [r7, #286]	@ 0x11e
              uint8_t bit1 = symbol & 0x01;        // LSB
 8000dda:	f897 311f 	ldrb.w	r3, [r7, #287]	@ 0x11f
 8000dde:	f003 0301 	and.w	r3, r3, #1
 8000de2:	f887 311d 	strb.w	r3, [r7, #285]	@ 0x11d
              HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, bit0 ? GPIO_PIN_SET : GPIO_PIN_RESET); // LED_A
 8000de6:	f897 311e 	ldrb.w	r3, [r7, #286]	@ 0x11e
 8000dea:	2b00      	cmp	r3, #0
 8000dec:	bf14      	ite	ne
 8000dee:	2301      	movne	r3, #1
 8000df0:	2300      	moveq	r3, #0
 8000df2:	b2db      	uxtb	r3, r3
 8000df4:	461a      	mov	r2, r3
 8000df6:	2120      	movs	r1, #32
 8000df8:	4819      	ldr	r0, [pc, #100]	@ (8000e60 <main+0x168>)
 8000dfa:	f001 fe07 	bl	8002a0c <HAL_GPIO_WritePin>
              HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, bit1 ? GPIO_PIN_SET : GPIO_PIN_RESET); // LED_B
 8000dfe:	f897 311d 	ldrb.w	r3, [r7, #285]	@ 0x11d
 8000e02:	2b00      	cmp	r3, #0
 8000e04:	bf14      	ite	ne
 8000e06:	2301      	movne	r3, #1
 8000e08:	2300      	moveq	r3, #0
 8000e0a:	b2db      	uxtb	r3, r3
 8000e0c:	461a      	mov	r2, r3
 8000e0e:	2140      	movs	r1, #64	@ 0x40
 8000e10:	4813      	ldr	r0, [pc, #76]	@ (8000e60 <main+0x168>)
 8000e12:	f001 fdfb 	bl	8002a0c <HAL_GPIO_WritePin>
              last_symbol_tick = HAL_GetTick();
 8000e16:	f001 f8ed 	bl	8001ff4 <HAL_GetTick>
 8000e1a:	f8c7 0124 	str.w	r0, [r7, #292]	@ 0x124
 8000e1e:	e791      	b.n	8000d44 <main+0x4c>
          } else {
              HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8000e20:	2200      	movs	r2, #0
 8000e22:	2120      	movs	r1, #32
 8000e24:	480e      	ldr	r0, [pc, #56]	@ (8000e60 <main+0x168>)
 8000e26:	f001 fdf1 	bl	8002a0c <HAL_GPIO_WritePin>
              HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
 8000e2a:	2200      	movs	r2, #0
 8000e2c:	2140      	movs	r1, #64	@ 0x40
 8000e2e:	480c      	ldr	r0, [pc, #48]	@ (8000e60 <main+0x168>)
 8000e30:	f001 fdec 	bl	8002a0c <HAL_GPIO_WritePin>
              qpsk_transmitting = 0;
 8000e34:	4b06      	ldr	r3, [pc, #24]	@ (8000e50 <main+0x158>)
 8000e36:	2200      	movs	r2, #0
 8000e38:	701a      	strb	r2, [r3, #0]
      if (HAL_UART_Receive(&huart2, &c, 1, 10) == HAL_OK) {
 8000e3a:	e783      	b.n	8000d44 <main+0x4c>
 8000e3c:	08000b71 	.word	0x08000b71
 8000e40:	491c4000 	.word	0x491c4000
 8000e44:	471c4000 	.word	0x471c4000
 8000e48:	200000b8 	.word	0x200000b8
 8000e4c:	20000070 	.word	0x20000070
 8000e50:	200044dc 	.word	0x200044dc
 8000e54:	200044da 	.word	0x200044da
 8000e58:	200044d8 	.word	0x200044d8
 8000e5c:	200043d8 	.word	0x200043d8
 8000e60:	40020000 	.word	0x40020000

08000e64 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000e64:	b580      	push	{r7, lr}
 8000e66:	b094      	sub	sp, #80	@ 0x50
 8000e68:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000e6a:	f107 0320 	add.w	r3, r7, #32
 8000e6e:	2230      	movs	r2, #48	@ 0x30
 8000e70:	2100      	movs	r1, #0
 8000e72:	4618      	mov	r0, r3
 8000e74:	f002 fede 	bl	8003c34 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000e78:	f107 030c 	add.w	r3, r7, #12
 8000e7c:	2200      	movs	r2, #0
 8000e7e:	601a      	str	r2, [r3, #0]
 8000e80:	605a      	str	r2, [r3, #4]
 8000e82:	609a      	str	r2, [r3, #8]
 8000e84:	60da      	str	r2, [r3, #12]
 8000e86:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000e88:	2300      	movs	r3, #0
 8000e8a:	60bb      	str	r3, [r7, #8]
 8000e8c:	4b22      	ldr	r3, [pc, #136]	@ (8000f18 <SystemClock_Config+0xb4>)
 8000e8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e90:	4a21      	ldr	r2, [pc, #132]	@ (8000f18 <SystemClock_Config+0xb4>)
 8000e92:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000e96:	6413      	str	r3, [r2, #64]	@ 0x40
 8000e98:	4b1f      	ldr	r3, [pc, #124]	@ (8000f18 <SystemClock_Config+0xb4>)
 8000e9a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e9c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000ea0:	60bb      	str	r3, [r7, #8]
 8000ea2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	607b      	str	r3, [r7, #4]
 8000ea8:	4b1c      	ldr	r3, [pc, #112]	@ (8000f1c <SystemClock_Config+0xb8>)
 8000eaa:	681b      	ldr	r3, [r3, #0]
 8000eac:	4a1b      	ldr	r2, [pc, #108]	@ (8000f1c <SystemClock_Config+0xb8>)
 8000eae:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000eb2:	6013      	str	r3, [r2, #0]
 8000eb4:	4b19      	ldr	r3, [pc, #100]	@ (8000f1c <SystemClock_Config+0xb8>)
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000ebc:	607b      	str	r3, [r7, #4]
 8000ebe:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000ec0:	2302      	movs	r3, #2
 8000ec2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000ec4:	2301      	movs	r3, #1
 8000ec6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000ec8:	2310      	movs	r3, #16
 8000eca:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000ecc:	2300      	movs	r3, #0
 8000ece:	63bb      	str	r3, [r7, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ed0:	f107 0320 	add.w	r3, r7, #32
 8000ed4:	4618      	mov	r0, r3
 8000ed6:	f001 fdb3 	bl	8002a40 <HAL_RCC_OscConfig>
 8000eda:	4603      	mov	r3, r0
 8000edc:	2b00      	cmp	r3, #0
 8000ede:	d001      	beq.n	8000ee4 <SystemClock_Config+0x80>
  {
    Error_Handler();
 8000ee0:	f000 f8e0 	bl	80010a4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000ee4:	230f      	movs	r3, #15
 8000ee6:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000ee8:	2300      	movs	r3, #0
 8000eea:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000eec:	2300      	movs	r3, #0
 8000eee:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000ef0:	2300      	movs	r3, #0
 8000ef2:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000ef4:	2300      	movs	r3, #0
 8000ef6:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000ef8:	f107 030c 	add.w	r3, r7, #12
 8000efc:	2100      	movs	r1, #0
 8000efe:	4618      	mov	r0, r3
 8000f00:	f002 f816 	bl	8002f30 <HAL_RCC_ClockConfig>
 8000f04:	4603      	mov	r3, r0
 8000f06:	2b00      	cmp	r3, #0
 8000f08:	d001      	beq.n	8000f0e <SystemClock_Config+0xaa>
  {
    Error_Handler();
 8000f0a:	f000 f8cb 	bl	80010a4 <Error_Handler>
  }
}
 8000f0e:	bf00      	nop
 8000f10:	3750      	adds	r7, #80	@ 0x50
 8000f12:	46bd      	mov	sp, r7
 8000f14:	bd80      	pop	{r7, pc}
 8000f16:	bf00      	nop
 8000f18:	40023800 	.word	0x40023800
 8000f1c:	40007000 	.word	0x40007000

08000f20 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000f20:	b580      	push	{r7, lr}
 8000f22:	b084      	sub	sp, #16
 8000f24:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000f26:	463b      	mov	r3, r7
 8000f28:	2200      	movs	r2, #0
 8000f2a:	601a      	str	r2, [r3, #0]
 8000f2c:	605a      	str	r2, [r3, #4]
 8000f2e:	609a      	str	r2, [r3, #8]
 8000f30:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000f32:	4b21      	ldr	r3, [pc, #132]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f34:	4a21      	ldr	r2, [pc, #132]	@ (8000fbc <MX_ADC1_Init+0x9c>)
 8000f36:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8000f38:	4b1f      	ldr	r3, [pc, #124]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f3a:	2200      	movs	r2, #0
 8000f3c:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000f3e:	4b1e      	ldr	r3, [pc, #120]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f40:	2200      	movs	r2, #0
 8000f42:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000f44:	4b1c      	ldr	r3, [pc, #112]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f46:	2200      	movs	r2, #0
 8000f48:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000f4a:	4b1b      	ldr	r3, [pc, #108]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f4c:	2200      	movs	r2, #0
 8000f4e:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000f50:	4b19      	ldr	r3, [pc, #100]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f52:	2200      	movs	r2, #0
 8000f54:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000f58:	4b17      	ldr	r3, [pc, #92]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000f5e:	4b16      	ldr	r3, [pc, #88]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f60:	4a17      	ldr	r2, [pc, #92]	@ (8000fc0 <MX_ADC1_Init+0xa0>)
 8000f62:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000f64:	4b14      	ldr	r3, [pc, #80]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f66:	2200      	movs	r2, #0
 8000f68:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000f6a:	4b13      	ldr	r3, [pc, #76]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f6c:	2201      	movs	r2, #1
 8000f6e:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000f70:	4b11      	ldr	r3, [pc, #68]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f72:	2200      	movs	r2, #0
 8000f74:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000f78:	4b0f      	ldr	r3, [pc, #60]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f7a:	2201      	movs	r2, #1
 8000f7c:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000f7e:	480e      	ldr	r0, [pc, #56]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000f80:	f001 f868 	bl	8002054 <HAL_ADC_Init>
 8000f84:	4603      	mov	r3, r0
 8000f86:	2b00      	cmp	r3, #0
 8000f88:	d001      	beq.n	8000f8e <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 8000f8a:	f000 f88b 	bl	80010a4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000f8e:	2300      	movs	r3, #0
 8000f90:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000f92:	2301      	movs	r3, #1
 8000f94:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000f96:	2300      	movs	r3, #0
 8000f98:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000f9a:	463b      	mov	r3, r7
 8000f9c:	4619      	mov	r1, r3
 8000f9e:	4806      	ldr	r0, [pc, #24]	@ (8000fb8 <MX_ADC1_Init+0x98>)
 8000fa0:	f001 f89c 	bl	80020dc <HAL_ADC_ConfigChannel>
 8000fa4:	4603      	mov	r3, r0
 8000fa6:	2b00      	cmp	r3, #0
 8000fa8:	d001      	beq.n	8000fae <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 8000faa:	f000 f87b 	bl	80010a4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000fae:	bf00      	nop
 8000fb0:	3710      	adds	r7, #16
 8000fb2:	46bd      	mov	sp, r7
 8000fb4:	bd80      	pop	{r7, pc}
 8000fb6:	bf00      	nop
 8000fb8:	20000028 	.word	0x20000028
 8000fbc:	40012000 	.word	0x40012000
 8000fc0:	0f000001 	.word	0x0f000001

08000fc4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000fc4:	b580      	push	{r7, lr}
 8000fc6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000fc8:	4b11      	ldr	r3, [pc, #68]	@ (8001010 <MX_USART2_UART_Init+0x4c>)
 8000fca:	4a12      	ldr	r2, [pc, #72]	@ (8001014 <MX_USART2_UART_Init+0x50>)
 8000fcc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000fce:	4b10      	ldr	r3, [pc, #64]	@ (8001010 <MX_USART2_UART_Init+0x4c>)
 8000fd0:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000fd4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000fd6:	4b0e      	ldr	r3, [pc, #56]	@ (8001010 <MX_USART2_UART_Init+0x4c>)
 8000fd8:	2200      	movs	r2, #0
 8000fda:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000fdc:	4b0c      	ldr	r3, [pc, #48]	@ (8001010 <MX_USART2_UART_Init+0x4c>)
 8000fde:	2200      	movs	r2, #0
 8000fe0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000fe2:	4b0b      	ldr	r3, [pc, #44]	@ (8001010 <MX_USART2_UART_Init+0x4c>)
 8000fe4:	2200      	movs	r2, #0
 8000fe6:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000fe8:	4b09      	ldr	r3, [pc, #36]	@ (8001010 <MX_USART2_UART_Init+0x4c>)
 8000fea:	220c      	movs	r2, #12
 8000fec:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000fee:	4b08      	ldr	r3, [pc, #32]	@ (8001010 <MX_USART2_UART_Init+0x4c>)
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000ff4:	4b06      	ldr	r3, [pc, #24]	@ (8001010 <MX_USART2_UART_Init+0x4c>)
 8000ff6:	2200      	movs	r2, #0
 8000ff8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000ffa:	4805      	ldr	r0, [pc, #20]	@ (8001010 <MX_USART2_UART_Init+0x4c>)
 8000ffc:	f002 f978 	bl	80032f0 <HAL_UART_Init>
 8001000:	4603      	mov	r3, r0
 8001002:	2b00      	cmp	r3, #0
 8001004:	d001      	beq.n	800100a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8001006:	f000 f84d 	bl	80010a4 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800100a:	bf00      	nop
 800100c:	bd80      	pop	{r7, pc}
 800100e:	bf00      	nop
 8001010:	20000070 	.word	0x20000070
 8001014:	40004400 	.word	0x40004400

08001018 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001018:	b580      	push	{r7, lr}
 800101a:	b088      	sub	sp, #32
 800101c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MX_GPIO_Init_1 */
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 800101e:	f107 030c 	add.w	r3, r7, #12
 8001022:	2200      	movs	r2, #0
 8001024:	601a      	str	r2, [r3, #0]
 8001026:	605a      	str	r2, [r3, #4]
 8001028:	609a      	str	r2, [r3, #8]
 800102a:	60da      	str	r2, [r3, #12]
 800102c:	611a      	str	r2, [r3, #16]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 800102e:	2300      	movs	r3, #0
 8001030:	60bb      	str	r3, [r7, #8]
 8001032:	4b1a      	ldr	r3, [pc, #104]	@ (800109c <MX_GPIO_Init+0x84>)
 8001034:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001036:	4a19      	ldr	r2, [pc, #100]	@ (800109c <MX_GPIO_Init+0x84>)
 8001038:	f043 0301 	orr.w	r3, r3, #1
 800103c:	6313      	str	r3, [r2, #48]	@ 0x30
 800103e:	4b17      	ldr	r3, [pc, #92]	@ (800109c <MX_GPIO_Init+0x84>)
 8001040:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001042:	f003 0301 	and.w	r3, r3, #1
 8001046:	60bb      	str	r3, [r7, #8]
 8001048:	68bb      	ldr	r3, [r7, #8]
	GPIO_InitStruct.Pin = GPIO_PIN_5;
 800104a:	2320      	movs	r3, #32
 800104c:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800104e:	2301      	movs	r3, #1
 8001050:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001052:	2300      	movs	r3, #0
 8001054:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001056:	2300      	movs	r3, #0
 8001058:	61bb      	str	r3, [r7, #24]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800105a:	f107 030c 	add.w	r3, r7, #12
 800105e:	4619      	mov	r1, r3
 8001060:	480f      	ldr	r0, [pc, #60]	@ (80010a0 <MX_GPIO_Init+0x88>)
 8001062:	f001 fb4f 	bl	8002704 <HAL_GPIO_Init>


	GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001066:	2340      	movs	r3, #64	@ 0x40
 8001068:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800106a:	f107 030c 	add.w	r3, r7, #12
 800106e:	4619      	mov	r1, r3
 8001070:	480b      	ldr	r0, [pc, #44]	@ (80010a0 <MX_GPIO_Init+0x88>)
 8001072:	f001 fb47 	bl	8002704 <HAL_GPIO_Init>
  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001076:	2300      	movs	r3, #0
 8001078:	607b      	str	r3, [r7, #4]
 800107a:	4b08      	ldr	r3, [pc, #32]	@ (800109c <MX_GPIO_Init+0x84>)
 800107c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800107e:	4a07      	ldr	r2, [pc, #28]	@ (800109c <MX_GPIO_Init+0x84>)
 8001080:	f043 0301 	orr.w	r3, r3, #1
 8001084:	6313      	str	r3, [r2, #48]	@ 0x30
 8001086:	4b05      	ldr	r3, [pc, #20]	@ (800109c <MX_GPIO_Init+0x84>)
 8001088:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800108a:	f003 0301 	and.w	r3, r3, #1
 800108e:	607b      	str	r3, [r7, #4]
 8001090:	687b      	ldr	r3, [r7, #4]

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8001092:	bf00      	nop
 8001094:	3720      	adds	r7, #32
 8001096:	46bd      	mov	sp, r7
 8001098:	bd80      	pop	{r7, pc}
 800109a:	bf00      	nop
 800109c:	40023800 	.word	0x40023800
 80010a0:	40020000 	.word	0x40020000

080010a4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80010a4:	b480      	push	{r7}
 80010a6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80010a8:	b672      	cpsid	i
}
 80010aa:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80010ac:	bf00      	nop
 80010ae:	e7fd      	b.n	80010ac <Error_Handler+0x8>

080010b0 <QpskModem_Init>:
static const float PI = 3.14159265358979323846f;
//static const float QPSK_PHASE[4] = { PI/4, 3*PI/4, 5*PI/4, 7*PI/4 };

//QPSK modulation Functions

void QpskModem_Init(QpskModem* modem, uint16_t sample_per_symbol, float f0, float fs){
 80010b0:	b480      	push	{r7}
 80010b2:	b085      	sub	sp, #20
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	60f8      	str	r0, [r7, #12]
 80010b8:	460b      	mov	r3, r1
 80010ba:	ed87 0a01 	vstr	s0, [r7, #4]
 80010be:	edc7 0a00 	vstr	s1, [r7]
 80010c2:	817b      	strh	r3, [r7, #10]
	modem->samples_per_symbol = sample_per_symbol;
 80010c4:	68fb      	ldr	r3, [r7, #12]
 80010c6:	897a      	ldrh	r2, [r7, #10]
 80010c8:	f8a3 2304 	strh.w	r2, [r3, #772]	@ 0x304
	modem->f0 = f0;
 80010cc:	68fb      	ldr	r3, [r7, #12]
 80010ce:	687a      	ldr	r2, [r7, #4]
 80010d0:	f8c3 2308 	str.w	r2, [r3, #776]	@ 0x308
	modem->fs = fs;
 80010d4:	68fb      	ldr	r3, [r7, #12]
 80010d6:	683a      	ldr	r2, [r7, #0]
 80010d8:	f8c3 230c 	str.w	r2, [r3, #780]	@ 0x30c
}
 80010dc:	bf00      	nop
 80010de:	3714      	adds	r7, #20
 80010e0:	46bd      	mov	sp, r7
 80010e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e6:	4770      	bx	lr

080010e8 <QpskModem_Modulate>:
			modem->symbols[idx++] = (byte >> b) & 0x03;
		}
	}
}*/

void QpskModem_Modulate(UART_HandleTypeDef* huart2, QpskModem* modem, const uint8_t* data, uint16_t len){
 80010e8:	b580      	push	{r7, lr}
 80010ea:	b088      	sub	sp, #32
 80010ec:	af00      	add	r7, sp, #0
 80010ee:	60f8      	str	r0, [r7, #12]
 80010f0:	60b9      	str	r1, [r7, #8]
 80010f2:	607a      	str	r2, [r7, #4]
 80010f4:	807b      	strh	r3, [r7, #2]
    modem->num_symbols = len*4;
 80010f6:	887b      	ldrh	r3, [r7, #2]
 80010f8:	009b      	lsls	r3, r3, #2
 80010fa:	b29a      	uxth	r2, r3
 80010fc:	68bb      	ldr	r3, [r7, #8]
 80010fe:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
    uint16_t idx = 0;
 8001102:	2300      	movs	r3, #0
 8001104:	83fb      	strh	r3, [r7, #30]
    for (uint16_t i =0 ; i < len ; i++){
 8001106:	2300      	movs	r3, #0
 8001108:	83bb      	strh	r3, [r7, #28]
 800110a:	e04a      	b.n	80011a2 <QpskModem_Modulate+0xba>
        uint8_t byte = data[i];
 800110c:	8bbb      	ldrh	r3, [r7, #28]
 800110e:	687a      	ldr	r2, [r7, #4]
 8001110:	4413      	add	r3, r2
 8001112:	781b      	ldrb	r3, [r3, #0]
 8001114:	757b      	strb	r3, [r7, #21]
        for(int b=6; b>= 0 ; b-=2){
 8001116:	2306      	movs	r3, #6
 8001118:	61bb      	str	r3, [r7, #24]
 800111a:	e03c      	b.n	8001196 <QpskModem_Modulate+0xae>
            uint8_t symbol = (byte >> b) & 0x03;
 800111c:	7d7a      	ldrb	r2, [r7, #21]
 800111e:	69bb      	ldr	r3, [r7, #24]
 8001120:	fa42 f303 	asr.w	r3, r2, r3
 8001124:	b2db      	uxtb	r3, r3
 8001126:	f003 0303 	and.w	r3, r3, #3
 800112a:	753b      	strb	r3, [r7, #20]
            modem->symbols[idx++] = symbol;
 800112c:	8bfb      	ldrh	r3, [r7, #30]
 800112e:	1c5a      	adds	r2, r3, #1
 8001130:	83fa      	strh	r2, [r7, #30]
 8001132:	4619      	mov	r1, r3
 8001134:	68bb      	ldr	r3, [r7, #8]
 8001136:	7d3a      	ldrb	r2, [r7, #20]
 8001138:	545a      	strb	r2, [r3, r1]

           //Sending the TX IQ Constellation
            int8_t i_val, q_val;
            switch(symbol) {
 800113a:	7d3b      	ldrb	r3, [r7, #20]
 800113c:	2b03      	cmp	r3, #3
 800113e:	d81f      	bhi.n	8001180 <QpskModem_Modulate+0x98>
 8001140:	a201      	add	r2, pc, #4	@ (adr r2, 8001148 <QpskModem_Modulate+0x60>)
 8001142:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001146:	bf00      	nop
 8001148:	08001159 	.word	0x08001159
 800114c:	08001163 	.word	0x08001163
 8001150:	0800116d 	.word	0x0800116d
 8001154:	08001177 	.word	0x08001177
                case 0: i_val =  127; q_val =  127; break; // 00
 8001158:	237f      	movs	r3, #127	@ 0x7f
 800115a:	75fb      	strb	r3, [r7, #23]
 800115c:	237f      	movs	r3, #127	@ 0x7f
 800115e:	75bb      	strb	r3, [r7, #22]
 8001160:	e00e      	b.n	8001180 <QpskModem_Modulate+0x98>
                case 1: i_val = -127; q_val =  127; break; // 01
 8001162:	2381      	movs	r3, #129	@ 0x81
 8001164:	75fb      	strb	r3, [r7, #23]
 8001166:	237f      	movs	r3, #127	@ 0x7f
 8001168:	75bb      	strb	r3, [r7, #22]
 800116a:	e009      	b.n	8001180 <QpskModem_Modulate+0x98>
                case 2: i_val = -127; q_val = -127; break; // 10
 800116c:	2381      	movs	r3, #129	@ 0x81
 800116e:	75fb      	strb	r3, [r7, #23]
 8001170:	2381      	movs	r3, #129	@ 0x81
 8001172:	75bb      	strb	r3, [r7, #22]
 8001174:	e004      	b.n	8001180 <QpskModem_Modulate+0x98>
                case 3: i_val =  127; q_val = -127; break; // 11
 8001176:	237f      	movs	r3, #127	@ 0x7f
 8001178:	75fb      	strb	r3, [r7, #23]
 800117a:	2381      	movs	r3, #129	@ 0x81
 800117c:	75bb      	strb	r3, [r7, #22]
 800117e:	bf00      	nop
            }
            SendIQFrame(huart2, i_val, q_val);
 8001180:	f997 2016 	ldrsb.w	r2, [r7, #22]
 8001184:	f997 3017 	ldrsb.w	r3, [r7, #23]
 8001188:	4619      	mov	r1, r3
 800118a:	68f8      	ldr	r0, [r7, #12]
 800118c:	f000 fe88 	bl	8001ea0 <SendIQFrame>
        for(int b=6; b>= 0 ; b-=2){
 8001190:	69bb      	ldr	r3, [r7, #24]
 8001192:	3b02      	subs	r3, #2
 8001194:	61bb      	str	r3, [r7, #24]
 8001196:	69bb      	ldr	r3, [r7, #24]
 8001198:	2b00      	cmp	r3, #0
 800119a:	dabf      	bge.n	800111c <QpskModem_Modulate+0x34>
    for (uint16_t i =0 ; i < len ; i++){
 800119c:	8bbb      	ldrh	r3, [r7, #28]
 800119e:	3301      	adds	r3, #1
 80011a0:	83bb      	strh	r3, [r7, #28]
 80011a2:	8bba      	ldrh	r2, [r7, #28]
 80011a4:	887b      	ldrh	r3, [r7, #2]
 80011a6:	429a      	cmp	r2, r3
 80011a8:	d3b0      	bcc.n	800110c <QpskModem_Modulate+0x24>
        }
    }
}
 80011aa:	bf00      	nop
 80011ac:	bf00      	nop
 80011ae:	3720      	adds	r7, #32
 80011b0:	46bd      	mov	sp, r7
 80011b2:	bd80      	pop	{r7, pc}
 80011b4:	0000      	movs	r0, r0
	...

080011b8 <QpskModem_Demodulate>:


void QpskModem_Demodulate(UART_HandleTypeDef* huart2,QpskModem* modem, QpskRingBuffer* rxbuf, uint8_t* data_out, uint16_t* len_out) {
 80011b8:	b5b0      	push	{r4, r5, r7, lr}
 80011ba:	b0d0      	sub	sp, #320	@ 0x140
 80011bc:	af00      	add	r7, sp, #0
 80011be:	f507 74a0 	add.w	r4, r7, #320	@ 0x140
 80011c2:	f5a4 749a 	sub.w	r4, r4, #308	@ 0x134
 80011c6:	6020      	str	r0, [r4, #0]
 80011c8:	f507 70a0 	add.w	r0, r7, #320	@ 0x140
 80011cc:	f5a0 709c 	sub.w	r0, r0, #312	@ 0x138
 80011d0:	6001      	str	r1, [r0, #0]
 80011d2:	f507 71a0 	add.w	r1, r7, #320	@ 0x140
 80011d6:	f5a1 719e 	sub.w	r1, r1, #316	@ 0x13c
 80011da:	600a      	str	r2, [r1, #0]
 80011dc:	f507 72a0 	add.w	r2, r7, #320	@ 0x140
 80011e0:	f5a2 72a0 	sub.w	r2, r2, #320	@ 0x140
 80011e4:	6013      	str	r3, [r2, #0]
    uint16_t nb_symbols = 0;
 80011e6:	2300      	movs	r3, #0
 80011e8:	f8a7 313e 	strh.w	r3, [r7, #318]	@ 0x13e
    uint8_t symbols[QPSK_MAX_SYMBOLS];
    uint32_t global_sample = 0;
 80011ec:	2300      	movs	r3, #0
 80011ee:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
    for (uint16_t s = 0; s < QPSK_MAX_SYMBOLS; s++) {
 80011f2:	2300      	movs	r3, #0
 80011f4:	f8a7 3136 	strh.w	r3, [r7, #310]	@ 0x136
 80011f8:	e13e      	b.n	8001478 <QpskModem_Demodulate+0x2c0>
        if (QpskRingBuffer_Available(rxbuf) < modem->samples_per_symbol)
 80011fa:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80011fe:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8001202:	6818      	ldr	r0, [r3, #0]
 8001204:	f000 fb17 	bl	8001836 <QpskRingBuffer_Available>
 8001208:	4602      	mov	r2, r0
 800120a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 800120e:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	f8b3 3304 	ldrh.w	r3, [r3, #772]	@ 0x304
 8001218:	429a      	cmp	r2, r3
 800121a:	f0c0 8133 	bcc.w	8001484 <QpskModem_Demodulate+0x2cc>
            break;
        float I = 0.0f, Q = 0.0f;
 800121e:	f04f 0300 	mov.w	r3, #0
 8001222:	f8c7 3130 	str.w	r3, [r7, #304]	@ 0x130
 8001226:	f04f 0300 	mov.w	r3, #0
 800122a:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
        for (uint16_t n = 0; n < modem->samples_per_symbol; n++, global_sample++) {
 800122e:	2300      	movs	r3, #0
 8001230:	f8a7 312a 	strh.w	r3, [r7, #298]	@ 0x12a
 8001234:	e098      	b.n	8001368 <QpskModem_Demodulate+0x1b0>
            float t = (float)global_sample / modem->fs;
 8001236:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 800123a:	ee07 3a90 	vmov	s15, r3
 800123e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8001242:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001246:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	ed93 7ac3 	vldr	s14, [r3, #780]	@ 0x30c
 8001250:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001254:	edc7 7a48 	vstr	s15, [r7, #288]	@ 0x120
            float ref_cos = cosf(2 * M_PI * modem->f0 * t);
 8001258:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 800125c:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8001260:	681b      	ldr	r3, [r3, #0]
 8001262:	f8d3 3308 	ldr.w	r3, [r3, #776]	@ 0x308
 8001266:	4618      	mov	r0, r3
 8001268:	f7ff fa44 	bl	80006f4 <__aeabi_f2d>
 800126c:	a3b4      	add	r3, pc, #720	@ (adr r3, 8001540 <QpskModem_Demodulate+0x388>)
 800126e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001272:	f7fe ffb1 	bl	80001d8 <__aeabi_dmul>
 8001276:	4602      	mov	r2, r0
 8001278:	460b      	mov	r3, r1
 800127a:	4614      	mov	r4, r2
 800127c:	461d      	mov	r5, r3
 800127e:	f8d7 0120 	ldr.w	r0, [r7, #288]	@ 0x120
 8001282:	f7ff fa37 	bl	80006f4 <__aeabi_f2d>
 8001286:	4602      	mov	r2, r0
 8001288:	460b      	mov	r3, r1
 800128a:	4620      	mov	r0, r4
 800128c:	4629      	mov	r1, r5
 800128e:	f7fe ffa3 	bl	80001d8 <__aeabi_dmul>
 8001292:	4602      	mov	r2, r0
 8001294:	460b      	mov	r3, r1
 8001296:	4610      	mov	r0, r2
 8001298:	4619      	mov	r1, r3
 800129a:	f7ff fa83 	bl	80007a4 <__aeabi_d2f>
 800129e:	4603      	mov	r3, r0
 80012a0:	ee00 3a10 	vmov	s0, r3
 80012a4:	f002 fcf2 	bl	8003c8c <cosf>
 80012a8:	ed87 0a47 	vstr	s0, [r7, #284]	@ 0x11c
            float ref_sin = sinf(2 * M_PI * modem->f0 * t);
 80012ac:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80012b0:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 80012b4:	681b      	ldr	r3, [r3, #0]
 80012b6:	f8d3 3308 	ldr.w	r3, [r3, #776]	@ 0x308
 80012ba:	4618      	mov	r0, r3
 80012bc:	f7ff fa1a 	bl	80006f4 <__aeabi_f2d>
 80012c0:	a39f      	add	r3, pc, #636	@ (adr r3, 8001540 <QpskModem_Demodulate+0x388>)
 80012c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012c6:	f7fe ff87 	bl	80001d8 <__aeabi_dmul>
 80012ca:	4602      	mov	r2, r0
 80012cc:	460b      	mov	r3, r1
 80012ce:	4614      	mov	r4, r2
 80012d0:	461d      	mov	r5, r3
 80012d2:	f8d7 0120 	ldr.w	r0, [r7, #288]	@ 0x120
 80012d6:	f7ff fa0d 	bl	80006f4 <__aeabi_f2d>
 80012da:	4602      	mov	r2, r0
 80012dc:	460b      	mov	r3, r1
 80012de:	4620      	mov	r0, r4
 80012e0:	4629      	mov	r1, r5
 80012e2:	f7fe ff79 	bl	80001d8 <__aeabi_dmul>
 80012e6:	4602      	mov	r2, r0
 80012e8:	460b      	mov	r3, r1
 80012ea:	4610      	mov	r0, r2
 80012ec:	4619      	mov	r1, r3
 80012ee:	f7ff fa59 	bl	80007a4 <__aeabi_d2f>
 80012f2:	4603      	mov	r3, r0
 80012f4:	ee00 3a10 	vmov	s0, r3
 80012f8:	f002 fd0c 	bl	8003d14 <sinf>
 80012fc:	ed87 0a46 	vstr	s0, [r7, #280]	@ 0x118
            int16_t sample = QpskRingBuffer_Get(rxbuf);
 8001300:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001304:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8001308:	6818      	ldr	r0, [r3, #0]
 800130a:	f000 fa6f 	bl	80017ec <QpskRingBuffer_Get>
 800130e:	4603      	mov	r3, r0
 8001310:	f8a7 3116 	strh.w	r3, [r7, #278]	@ 0x116
            I += sample * ref_cos;
 8001314:	f9b7 3116 	ldrsh.w	r3, [r7, #278]	@ 0x116
 8001318:	ee07 3a90 	vmov	s15, r3
 800131c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001320:	edd7 7a47 	vldr	s15, [r7, #284]	@ 0x11c
 8001324:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001328:	ed97 7a4c 	vldr	s14, [r7, #304]	@ 0x130
 800132c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001330:	edc7 7a4c 	vstr	s15, [r7, #304]	@ 0x130
            Q += sample * ref_sin;
 8001334:	f9b7 3116 	ldrsh.w	r3, [r7, #278]	@ 0x116
 8001338:	ee07 3a90 	vmov	s15, r3
 800133c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001340:	edd7 7a46 	vldr	s15, [r7, #280]	@ 0x118
 8001344:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001348:	ed97 7a4b 	vldr	s14, [r7, #300]	@ 0x12c
 800134c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001350:	edc7 7a4b 	vstr	s15, [r7, #300]	@ 0x12c
        for (uint16_t n = 0; n < modem->samples_per_symbol; n++, global_sample++) {
 8001354:	f8b7 312a 	ldrh.w	r3, [r7, #298]	@ 0x12a
 8001358:	3301      	adds	r3, #1
 800135a:	f8a7 312a 	strh.w	r3, [r7, #298]	@ 0x12a
 800135e:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001362:	3301      	adds	r3, #1
 8001364:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
 8001368:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 800136c:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8001370:	681b      	ldr	r3, [r3, #0]
 8001372:	f8b3 3304 	ldrh.w	r3, [r3, #772]	@ 0x304
 8001376:	f8b7 212a 	ldrh.w	r2, [r7, #298]	@ 0x12a
 800137a:	429a      	cmp	r2, r3
 800137c:	f4ff af5b 	bcc.w	8001236 <QpskModem_Demodulate+0x7e>
        }

        uint8_t i_val, q_val;
        uint8_t payload[3];
        payload[0] = 'R';
 8001380:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001384:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 8001388:	2252      	movs	r2, #82	@ 0x52
 800138a:	701a      	strb	r2, [r3, #0]
        payload[1] = (uint8_t)i_val;
 800138c:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001390:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 8001394:	f897 2125 	ldrb.w	r2, [r7, #293]	@ 0x125
 8001398:	705a      	strb	r2, [r3, #1]
        payload[2] = (uint8_t)q_val;
 800139a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 800139e:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80013a2:	f897 2124 	ldrb.w	r2, [r7, #292]	@ 0x124
 80013a6:	709a      	strb	r2, [r3, #2]
        UartProtocol_SendFrame(huart2, 0x55AA, 3, payload);
 80013a8:	f107 0310 	add.w	r3, r7, #16
 80013ac:	f507 72a0 	add.w	r2, r7, #320	@ 0x140
 80013b0:	f5a2 709a 	sub.w	r0, r2, #308	@ 0x134
 80013b4:	2203      	movs	r2, #3
 80013b6:	f245 51aa 	movw	r1, #21930	@ 0x55aa
 80013ba:	6800      	ldr	r0, [r0, #0]
 80013bc:	f000 fcac 	bl	8001d18 <UartProtocol_SendFrame>

        uint8_t symbol = 0;
 80013c0:	2300      	movs	r3, #0
 80013c2:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
        if (I >= 0 && Q >= 0) symbol = 0;
 80013c6:	edd7 7a4c 	vldr	s15, [r7, #304]	@ 0x130
 80013ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80013ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013d2:	db0a      	blt.n	80013ea <QpskModem_Demodulate+0x232>
 80013d4:	edd7 7a4b 	vldr	s15, [r7, #300]	@ 0x12c
 80013d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80013dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013e0:	db03      	blt.n	80013ea <QpskModem_Demodulate+0x232>
 80013e2:	2300      	movs	r3, #0
 80013e4:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
 80013e8:	e034      	b.n	8001454 <QpskModem_Demodulate+0x29c>
        else if (I < 0 && Q >= 0) symbol = 1;
 80013ea:	edd7 7a4c 	vldr	s15, [r7, #304]	@ 0x130
 80013ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80013f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013f6:	d50a      	bpl.n	800140e <QpskModem_Demodulate+0x256>
 80013f8:	edd7 7a4b 	vldr	s15, [r7, #300]	@ 0x12c
 80013fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001400:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001404:	db03      	blt.n	800140e <QpskModem_Demodulate+0x256>
 8001406:	2301      	movs	r3, #1
 8001408:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
 800140c:	e022      	b.n	8001454 <QpskModem_Demodulate+0x29c>
        else if (I < 0 && Q < 0) symbol = 2;
 800140e:	edd7 7a4c 	vldr	s15, [r7, #304]	@ 0x130
 8001412:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800141a:	d50a      	bpl.n	8001432 <QpskModem_Demodulate+0x27a>
 800141c:	edd7 7a4b 	vldr	s15, [r7, #300]	@ 0x12c
 8001420:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001424:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001428:	d503      	bpl.n	8001432 <QpskModem_Demodulate+0x27a>
 800142a:	2302      	movs	r3, #2
 800142c:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
 8001430:	e010      	b.n	8001454 <QpskModem_Demodulate+0x29c>
        else if (I >= 0 && Q < 0) symbol = 3;
 8001432:	edd7 7a4c 	vldr	s15, [r7, #304]	@ 0x130
 8001436:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800143a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800143e:	db09      	blt.n	8001454 <QpskModem_Demodulate+0x29c>
 8001440:	edd7 7a4b 	vldr	s15, [r7, #300]	@ 0x12c
 8001444:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800144c:	d502      	bpl.n	8001454 <QpskModem_Demodulate+0x29c>
 800144e:	2303      	movs	r3, #3
 8001450:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
        symbols[nb_symbols++] = symbol;
 8001454:	f8b7 313e 	ldrh.w	r3, [r7, #318]	@ 0x13e
 8001458:	1c5a      	adds	r2, r3, #1
 800145a:	f8a7 213e 	strh.w	r2, [r7, #318]	@ 0x13e
 800145e:	4619      	mov	r1, r3
 8001460:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001464:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8001468:	f897 2129 	ldrb.w	r2, [r7, #297]	@ 0x129
 800146c:	545a      	strb	r2, [r3, r1]
    for (uint16_t s = 0; s < QPSK_MAX_SYMBOLS; s++) {
 800146e:	f8b7 3136 	ldrh.w	r3, [r7, #310]	@ 0x136
 8001472:	3301      	adds	r3, #1
 8001474:	f8a7 3136 	strh.w	r3, [r7, #310]	@ 0x136
 8001478:	f8b7 3136 	ldrh.w	r3, [r7, #310]	@ 0x136
 800147c:	2bff      	cmp	r3, #255	@ 0xff
 800147e:	f67f aebc 	bls.w	80011fa <QpskModem_Demodulate+0x42>
 8001482:	e000      	b.n	8001486 <QpskModem_Demodulate+0x2ce>
            break;
 8001484:	bf00      	nop
    }
    *len_out = nb_symbols / 4;
 8001486:	f8b7 313e 	ldrh.w	r3, [r7, #318]	@ 0x13e
 800148a:	089b      	lsrs	r3, r3, #2
 800148c:	b29a      	uxth	r2, r3
 800148e:	f8d7 3150 	ldr.w	r3, [r7, #336]	@ 0x150
 8001492:	801a      	strh	r2, [r3, #0]
    for (uint16_t i = 0; i < *len_out; i++) {
 8001494:	2300      	movs	r3, #0
 8001496:	f8a7 3126 	strh.w	r3, [r7, #294]	@ 0x126
 800149a:	e041      	b.n	8001520 <QpskModem_Demodulate+0x368>
        data_out[i] = (symbols[i*4+0] << 6) | (symbols[i*4+1] << 4) | (symbols[i*4+2] << 2) | (symbols[i*4+3]);
 800149c:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 80014a0:	009b      	lsls	r3, r3, #2
 80014a2:	f507 72a0 	add.w	r2, r7, #320	@ 0x140
 80014a6:	f5a2 7296 	sub.w	r2, r2, #300	@ 0x12c
 80014aa:	5cd3      	ldrb	r3, [r2, r3]
 80014ac:	b25b      	sxtb	r3, r3
 80014ae:	019b      	lsls	r3, r3, #6
 80014b0:	b25a      	sxtb	r2, r3
 80014b2:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 80014b6:	009b      	lsls	r3, r3, #2
 80014b8:	3301      	adds	r3, #1
 80014ba:	f507 71a0 	add.w	r1, r7, #320	@ 0x140
 80014be:	f5a1 7196 	sub.w	r1, r1, #300	@ 0x12c
 80014c2:	5ccb      	ldrb	r3, [r1, r3]
 80014c4:	b25b      	sxtb	r3, r3
 80014c6:	011b      	lsls	r3, r3, #4
 80014c8:	b25b      	sxtb	r3, r3
 80014ca:	4313      	orrs	r3, r2
 80014cc:	b25a      	sxtb	r2, r3
 80014ce:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 80014d2:	009b      	lsls	r3, r3, #2
 80014d4:	3302      	adds	r3, #2
 80014d6:	f507 71a0 	add.w	r1, r7, #320	@ 0x140
 80014da:	f5a1 7196 	sub.w	r1, r1, #300	@ 0x12c
 80014de:	5ccb      	ldrb	r3, [r1, r3]
 80014e0:	b25b      	sxtb	r3, r3
 80014e2:	009b      	lsls	r3, r3, #2
 80014e4:	b25b      	sxtb	r3, r3
 80014e6:	4313      	orrs	r3, r2
 80014e8:	b25a      	sxtb	r2, r3
 80014ea:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 80014ee:	009b      	lsls	r3, r3, #2
 80014f0:	3303      	adds	r3, #3
 80014f2:	f507 71a0 	add.w	r1, r7, #320	@ 0x140
 80014f6:	f5a1 7196 	sub.w	r1, r1, #300	@ 0x12c
 80014fa:	5ccb      	ldrb	r3, [r1, r3]
 80014fc:	b25b      	sxtb	r3, r3
 80014fe:	4313      	orrs	r3, r2
 8001500:	b259      	sxtb	r1, r3
 8001502:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 8001506:	f507 72a0 	add.w	r2, r7, #320	@ 0x140
 800150a:	f5a2 72a0 	sub.w	r2, r2, #320	@ 0x140
 800150e:	6812      	ldr	r2, [r2, #0]
 8001510:	4413      	add	r3, r2
 8001512:	b2ca      	uxtb	r2, r1
 8001514:	701a      	strb	r2, [r3, #0]
    for (uint16_t i = 0; i < *len_out; i++) {
 8001516:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 800151a:	3301      	adds	r3, #1
 800151c:	f8a7 3126 	strh.w	r3, [r7, #294]	@ 0x126
 8001520:	f8d7 3150 	ldr.w	r3, [r7, #336]	@ 0x150
 8001524:	881b      	ldrh	r3, [r3, #0]
 8001526:	f8b7 2126 	ldrh.w	r2, [r7, #294]	@ 0x126
 800152a:	429a      	cmp	r2, r3
 800152c:	d3b6      	bcc.n	800149c <QpskModem_Demodulate+0x2e4>
    }
}
 800152e:	bf00      	nop
 8001530:	bf00      	nop
 8001532:	f507 77a0 	add.w	r7, r7, #320	@ 0x140
 8001536:	46bd      	mov	sp, r7
 8001538:	bdb0      	pop	{r4, r5, r7, pc}
 800153a:	bf00      	nop
 800153c:	f3af 8000 	nop.w
 8001540:	54442d18 	.word	0x54442d18
 8001544:	401921fb 	.word	0x401921fb

08001548 <QpskModem_SymbolsToIQ>:


void QpskModem_SymbolsToIQ(QpskModem* modem){
 8001548:	b480      	push	{r7}
 800154a:	b085      	sub	sp, #20
 800154c:	af00      	add	r7, sp, #0
 800154e:	6078      	str	r0, [r7, #4]
	for (uint16_t i=0; i < modem ->num_symbols; i++){
 8001550:	2300      	movs	r3, #0
 8001552:	81fb      	strh	r3, [r7, #14]
 8001554:	e01d      	b.n	8001592 <QpskModem_SymbolsToIQ+0x4a>
		modem->iq[2*i] = QPSK_I[modem->symbols[i]];
 8001556:	89fb      	ldrh	r3, [r7, #14]
 8001558:	687a      	ldr	r2, [r7, #4]
 800155a:	5cd3      	ldrb	r3, [r2, r3]
 800155c:	4619      	mov	r1, r3
 800155e:	89fb      	ldrh	r3, [r7, #14]
 8001560:	005b      	lsls	r3, r3, #1
 8001562:	4a16      	ldr	r2, [pc, #88]	@ (80015bc <QpskModem_SymbolsToIQ+0x74>)
 8001564:	5651      	ldrsb	r1, [r2, r1]
 8001566:	687a      	ldr	r2, [r7, #4]
 8001568:	4413      	add	r3, r2
 800156a:	460a      	mov	r2, r1
 800156c:	f883 2102 	strb.w	r2, [r3, #258]	@ 0x102
		modem->iq[2*i+1] = QPSK_Q[modem->symbols[i]];
 8001570:	89fb      	ldrh	r3, [r7, #14]
 8001572:	687a      	ldr	r2, [r7, #4]
 8001574:	5cd3      	ldrb	r3, [r2, r3]
 8001576:	4619      	mov	r1, r3
 8001578:	89fb      	ldrh	r3, [r7, #14]
 800157a:	005b      	lsls	r3, r3, #1
 800157c:	3301      	adds	r3, #1
 800157e:	4a10      	ldr	r2, [pc, #64]	@ (80015c0 <QpskModem_SymbolsToIQ+0x78>)
 8001580:	5651      	ldrsb	r1, [r2, r1]
 8001582:	687a      	ldr	r2, [r7, #4]
 8001584:	4413      	add	r3, r2
 8001586:	460a      	mov	r2, r1
 8001588:	f883 2102 	strb.w	r2, [r3, #258]	@ 0x102
	for (uint16_t i=0; i < modem ->num_symbols; i++){
 800158c:	89fb      	ldrh	r3, [r7, #14]
 800158e:	3301      	adds	r3, #1
 8001590:	81fb      	strh	r3, [r7, #14]
 8001592:	687b      	ldr	r3, [r7, #4]
 8001594:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 8001598:	89fa      	ldrh	r2, [r7, #14]
 800159a:	429a      	cmp	r2, r3
 800159c:	d3db      	bcc.n	8001556 <QpskModem_SymbolsToIQ+0xe>
	}
	modem->num_iq = modem->num_symbols*2;
 800159e:	687b      	ldr	r3, [r7, #4]
 80015a0:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80015a4:	005b      	lsls	r3, r3, #1
 80015a6:	b29a      	uxth	r2, r3
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	f8a3 2302 	strh.w	r2, [r3, #770]	@ 0x302
}
 80015ae:	bf00      	nop
 80015b0:	3714      	adds	r7, #20
 80015b2:	46bd      	mov	sp, r7
 80015b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015b8:	4770      	bx	lr
 80015ba:	bf00      	nop
 80015bc:	0800478c 	.word	0x0800478c
 80015c0:	08004790 	.word	0x08004790

080015c4 <QpskModem_GenerateSignal>:

void QpskModem_GenerateSignal(QpskModem* modem, QpskRingBuffer* txbuf, float amplitude) {
 80015c4:	b580      	push	{r7, lr}
 80015c6:	ed2d 8b02 	vpush	{d8}
 80015ca:	b08a      	sub	sp, #40	@ 0x28
 80015cc:	af00      	add	r7, sp, #0
 80015ce:	60f8      	str	r0, [r7, #12]
 80015d0:	60b9      	str	r1, [r7, #8]
 80015d2:	ed87 0a01 	vstr	s0, [r7, #4]
    uint32_t global_sample = 0;
 80015d6:	2300      	movs	r3, #0
 80015d8:	627b      	str	r3, [r7, #36]	@ 0x24
    for (uint16_t s = 0; s < modem->num_symbols; s++) {
 80015da:	2300      	movs	r3, #0
 80015dc:	847b      	strh	r3, [r7, #34]	@ 0x22
 80015de:	e082      	b.n	80016e6 <QpskModem_GenerateSignal+0x122>
        float I = QPSK_I[modem->symbols[s]] / 127.0f;
 80015e0:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 80015e2:	68fa      	ldr	r2, [r7, #12]
 80015e4:	5cd3      	ldrb	r3, [r2, r3]
 80015e6:	461a      	mov	r2, r3
 80015e8:	4b46      	ldr	r3, [pc, #280]	@ (8001704 <QpskModem_GenerateSignal+0x140>)
 80015ea:	569b      	ldrsb	r3, [r3, r2]
 80015ec:	ee07 3a90 	vmov	s15, r3
 80015f0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80015f4:	eddf 6a44 	vldr	s13, [pc, #272]	@ 8001708 <QpskModem_GenerateSignal+0x144>
 80015f8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80015fc:	edc7 7a07 	vstr	s15, [r7, #28]
        float Q = QPSK_Q[modem->symbols[s]] / 127.0f;
 8001600:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8001602:	68fa      	ldr	r2, [r7, #12]
 8001604:	5cd3      	ldrb	r3, [r2, r3]
 8001606:	461a      	mov	r2, r3
 8001608:	4b40      	ldr	r3, [pc, #256]	@ (800170c <QpskModem_GenerateSignal+0x148>)
 800160a:	569b      	ldrsb	r3, [r3, r2]
 800160c:	ee07 3a90 	vmov	s15, r3
 8001610:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001614:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 8001708 <QpskModem_GenerateSignal+0x144>
 8001618:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800161c:	edc7 7a06 	vstr	s15, [r7, #24]
        for (uint16_t n = 0; n < modem->samples_per_symbol; n++, global_sample++) {
 8001620:	2300      	movs	r3, #0
 8001622:	843b      	strh	r3, [r7, #32]
 8001624:	e056      	b.n	80016d4 <QpskModem_GenerateSignal+0x110>
            float t = (float)global_sample / modem->fs;
 8001626:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001628:	ee07 3a90 	vmov	s15, r3
 800162c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8001630:	68fb      	ldr	r3, [r7, #12]
 8001632:	ed93 7ac3 	vldr	s14, [r3, #780]	@ 0x30c
 8001636:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800163a:	edc7 7a05 	vstr	s15, [r7, #20]
            float sample = amplitude * (I * cosf(2 * PI * modem->f0 * t) + Q * sinf(2 * PI * modem->f0 * t));
 800163e:	eddf 7a34 	vldr	s15, [pc, #208]	@ 8001710 <QpskModem_GenerateSignal+0x14c>
 8001642:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8001646:	68fb      	ldr	r3, [r7, #12]
 8001648:	edd3 7ac2 	vldr	s15, [r3, #776]	@ 0x308
 800164c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001650:	edd7 7a05 	vldr	s15, [r7, #20]
 8001654:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001658:	eeb0 0a67 	vmov.f32	s0, s15
 800165c:	f002 fb16 	bl	8003c8c <cosf>
 8001660:	eeb0 7a40 	vmov.f32	s14, s0
 8001664:	edd7 7a07 	vldr	s15, [r7, #28]
 8001668:	ee27 8a27 	vmul.f32	s16, s14, s15
 800166c:	eddf 7a28 	vldr	s15, [pc, #160]	@ 8001710 <QpskModem_GenerateSignal+0x14c>
 8001670:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8001674:	68fb      	ldr	r3, [r7, #12]
 8001676:	edd3 7ac2 	vldr	s15, [r3, #776]	@ 0x308
 800167a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800167e:	edd7 7a05 	vldr	s15, [r7, #20]
 8001682:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001686:	eeb0 0a67 	vmov.f32	s0, s15
 800168a:	f002 fb43 	bl	8003d14 <sinf>
 800168e:	eeb0 7a40 	vmov.f32	s14, s0
 8001692:	edd7 7a06 	vldr	s15, [r7, #24]
 8001696:	ee67 7a27 	vmul.f32	s15, s14, s15
 800169a:	ee78 7a27 	vadd.f32	s15, s16, s15
 800169e:	ed97 7a01 	vldr	s14, [r7, #4]
 80016a2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80016a6:	edc7 7a04 	vstr	s15, [r7, #16]
            QpskRingBuffer_Put(txbuf, (int16_t)(sample * 2047.0f));
 80016aa:	edd7 7a04 	vldr	s15, [r7, #16]
 80016ae:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8001714 <QpskModem_GenerateSignal+0x150>
 80016b2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80016ba:	ee17 3a90 	vmov	r3, s15
 80016be:	b21b      	sxth	r3, r3
 80016c0:	4619      	mov	r1, r3
 80016c2:	68b8      	ldr	r0, [r7, #8]
 80016c4:	f000 f86f 	bl	80017a6 <QpskRingBuffer_Put>
        for (uint16_t n = 0; n < modem->samples_per_symbol; n++, global_sample++) {
 80016c8:	8c3b      	ldrh	r3, [r7, #32]
 80016ca:	3301      	adds	r3, #1
 80016cc:	843b      	strh	r3, [r7, #32]
 80016ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016d0:	3301      	adds	r3, #1
 80016d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80016d4:	68fb      	ldr	r3, [r7, #12]
 80016d6:	f8b3 3304 	ldrh.w	r3, [r3, #772]	@ 0x304
 80016da:	8c3a      	ldrh	r2, [r7, #32]
 80016dc:	429a      	cmp	r2, r3
 80016de:	d3a2      	bcc.n	8001626 <QpskModem_GenerateSignal+0x62>
    for (uint16_t s = 0; s < modem->num_symbols; s++) {
 80016e0:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 80016e2:	3301      	adds	r3, #1
 80016e4:	847b      	strh	r3, [r7, #34]	@ 0x22
 80016e6:	68fb      	ldr	r3, [r7, #12]
 80016e8:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80016ec:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 80016ee:	429a      	cmp	r2, r3
 80016f0:	f4ff af76 	bcc.w	80015e0 <QpskModem_GenerateSignal+0x1c>
        }
    }
}
 80016f4:	bf00      	nop
 80016f6:	bf00      	nop
 80016f8:	3728      	adds	r7, #40	@ 0x28
 80016fa:	46bd      	mov	sp, r7
 80016fc:	ecbd 8b02 	vpop	{d8}
 8001700:	bd80      	pop	{r7, pc}
 8001702:	bf00      	nop
 8001704:	0800478c 	.word	0x0800478c
 8001708:	42fe0000 	.word	0x42fe0000
 800170c:	08004790 	.word	0x08004790
 8001710:	40490fdb 	.word	0x40490fdb
 8001714:	44ffe000 	.word	0x44ffe000

08001718 <QpskRingBuffer_Init>:

//Buffer Functions

void QpskRingBuffer_Init(QpskRingBuffer* rb){
 8001718:	b480      	push	{r7}
 800171a:	b083      	sub	sp, #12
 800171c:	af00      	add	r7, sp, #0
 800171e:	6078      	str	r0, [r7, #4]
	rb->head = 0;
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001726:	461a      	mov	r2, r3
 8001728:	2300      	movs	r3, #0
 800172a:	6013      	str	r3, [r2, #0]
	rb->tail = 0;
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001732:	461a      	mov	r2, r3
 8001734:	2300      	movs	r3, #0
 8001736:	6053      	str	r3, [r2, #4]
}
 8001738:	bf00      	nop
 800173a:	370c      	adds	r7, #12
 800173c:	46bd      	mov	sp, r7
 800173e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001742:	4770      	bx	lr

08001744 <QpskRingBuffer_IsFull>:

uint8_t QpskRingBuffer_IsFull(const QpskRingBuffer* rb){
 8001744:	b480      	push	{r7}
 8001746:	b083      	sub	sp, #12
 8001748:	af00      	add	r7, sp, #0
 800174a:	6078      	str	r0, [r7, #4]
	return ((rb->head + 1) % QPSK_RINGBUF_SIZE) == rb->tail;
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001752:	681b      	ldr	r3, [r3, #0]
 8001754:	3301      	adds	r3, #1
 8001756:	f3c3 020b 	ubfx	r2, r3, #0, #12
 800175a:	687b      	ldr	r3, [r7, #4]
 800175c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001760:	685b      	ldr	r3, [r3, #4]
 8001762:	429a      	cmp	r2, r3
 8001764:	bf0c      	ite	eq
 8001766:	2301      	moveq	r3, #1
 8001768:	2300      	movne	r3, #0
 800176a:	b2db      	uxtb	r3, r3
}
 800176c:	4618      	mov	r0, r3
 800176e:	370c      	adds	r7, #12
 8001770:	46bd      	mov	sp, r7
 8001772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001776:	4770      	bx	lr

08001778 <QpskRingBuffer_IsEmpty>:

uint8_t QpskRingBuffer_IsEmpty(const QpskRingBuffer* rb){
 8001778:	b480      	push	{r7}
 800177a:	b083      	sub	sp, #12
 800177c:	af00      	add	r7, sp, #0
 800177e:	6078      	str	r0, [r7, #4]
	return rb->head == rb->tail;
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001786:	681a      	ldr	r2, [r3, #0]
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800178e:	685b      	ldr	r3, [r3, #4]
 8001790:	429a      	cmp	r2, r3
 8001792:	bf0c      	ite	eq
 8001794:	2301      	moveq	r3, #1
 8001796:	2300      	movne	r3, #0
 8001798:	b2db      	uxtb	r3, r3
}
 800179a:	4618      	mov	r0, r3
 800179c:	370c      	adds	r7, #12
 800179e:	46bd      	mov	sp, r7
 80017a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a4:	4770      	bx	lr

080017a6 <QpskRingBuffer_Put>:

void QpskRingBuffer_Put(QpskRingBuffer* rb, int16_t value) {
 80017a6:	b580      	push	{r7, lr}
 80017a8:	b082      	sub	sp, #8
 80017aa:	af00      	add	r7, sp, #0
 80017ac:	6078      	str	r0, [r7, #4]
 80017ae:	460b      	mov	r3, r1
 80017b0:	807b      	strh	r3, [r7, #2]
    if (!QpskRingBuffer_IsFull(rb)) {
 80017b2:	6878      	ldr	r0, [r7, #4]
 80017b4:	f7ff ffc6 	bl	8001744 <QpskRingBuffer_IsFull>
 80017b8:	4603      	mov	r3, r0
 80017ba:	2b00      	cmp	r3, #0
 80017bc:	d112      	bne.n	80017e4 <QpskRingBuffer_Put+0x3e>
        rb->buf[rb->head] = value;
 80017be:	687b      	ldr	r3, [r7, #4]
 80017c0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80017c4:	681a      	ldr	r2, [r3, #0]
 80017c6:	687b      	ldr	r3, [r7, #4]
 80017c8:	8879      	ldrh	r1, [r7, #2]
 80017ca:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
        rb->head = (rb->head + 1) % QPSK_RINGBUF_SIZE;
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80017d4:	681b      	ldr	r3, [r3, #0]
 80017d6:	3301      	adds	r3, #1
 80017d8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80017dc:	687a      	ldr	r2, [r7, #4]
 80017de:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 80017e2:	6013      	str	r3, [r2, #0]
    }
}
 80017e4:	bf00      	nop
 80017e6:	3708      	adds	r7, #8
 80017e8:	46bd      	mov	sp, r7
 80017ea:	bd80      	pop	{r7, pc}

080017ec <QpskRingBuffer_Get>:

int16_t QpskRingBuffer_Get(QpskRingBuffer* rb) {
 80017ec:	b580      	push	{r7, lr}
 80017ee:	b084      	sub	sp, #16
 80017f0:	af00      	add	r7, sp, #0
 80017f2:	6078      	str	r0, [r7, #4]
    int16_t val = 0;
 80017f4:	2300      	movs	r3, #0
 80017f6:	81fb      	strh	r3, [r7, #14]
    if (!QpskRingBuffer_IsEmpty(rb)) {
 80017f8:	6878      	ldr	r0, [r7, #4]
 80017fa:	f7ff ffbd 	bl	8001778 <QpskRingBuffer_IsEmpty>
 80017fe:	4603      	mov	r3, r0
 8001800:	2b00      	cmp	r3, #0
 8001802:	d112      	bne.n	800182a <QpskRingBuffer_Get+0x3e>
        val = rb->buf[rb->tail];
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800180a:	685a      	ldr	r2, [r3, #4]
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8001812:	81fb      	strh	r3, [r7, #14]
        rb->tail = (rb->tail + 1) % QPSK_RINGBUF_SIZE;
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800181a:	685b      	ldr	r3, [r3, #4]
 800181c:	3301      	adds	r3, #1
 800181e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001822:	687a      	ldr	r2, [r7, #4]
 8001824:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 8001828:	6053      	str	r3, [r2, #4]
    }
    return val;
 800182a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
}
 800182e:	4618      	mov	r0, r3
 8001830:	3710      	adds	r7, #16
 8001832:	46bd      	mov	sp, r7
 8001834:	bd80      	pop	{r7, pc}

08001836 <QpskRingBuffer_Available>:

uint32_t QpskRingBuffer_Available(const QpskRingBuffer* rb) {
 8001836:	b480      	push	{r7}
 8001838:	b083      	sub	sp, #12
 800183a:	af00      	add	r7, sp, #0
 800183c:	6078      	str	r0, [r7, #4]
    // Returns the number of elements currently in the buffer
    if (rb->head >= rb->tail)
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001844:	681a      	ldr	r2, [r3, #0]
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800184c:	685b      	ldr	r3, [r3, #4]
 800184e:	429a      	cmp	r2, r3
 8001850:	d309      	bcc.n	8001866 <QpskRingBuffer_Available+0x30>
        return rb->head - rb->tail;
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001858:	681a      	ldr	r2, [r3, #0]
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001860:	685b      	ldr	r3, [r3, #4]
 8001862:	1ad3      	subs	r3, r2, r3
 8001864:	e00a      	b.n	800187c <QpskRingBuffer_Available+0x46>
    else
        return QPSK_RINGBUF_SIZE - (rb->tail - rb->head);
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800186c:	681a      	ldr	r2, [r3, #0]
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001874:	685b      	ldr	r3, [r3, #4]
 8001876:	1ad3      	subs	r3, r2, r3
 8001878:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
}
 800187c:	4618      	mov	r0, r3
 800187e:	370c      	adds	r7, #12
 8001880:	46bd      	mov	sp, r7
 8001882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001886:	4770      	bx	lr

08001888 <Qpsk_SimulateReception>:

// TESTS FUNCTION

void Qpsk_SimulateReception(QpskRingBuffer* txbuf, QpskRingBuffer* rxbuf) {
 8001888:	b580      	push	{r7, lr}
 800188a:	b084      	sub	sp, #16
 800188c:	af00      	add	r7, sp, #0
 800188e:	6078      	str	r0, [r7, #4]
 8001890:	6039      	str	r1, [r7, #0]
    while (!QpskRingBuffer_IsEmpty(txbuf) && !QpskRingBuffer_IsFull(rxbuf)) {
 8001892:	e00a      	b.n	80018aa <Qpsk_SimulateReception+0x22>
        int16_t val = QpskRingBuffer_Get(txbuf);
 8001894:	6878      	ldr	r0, [r7, #4]
 8001896:	f7ff ffa9 	bl	80017ec <QpskRingBuffer_Get>
 800189a:	4603      	mov	r3, r0
 800189c:	81fb      	strh	r3, [r7, #14]
        QpskRingBuffer_Put(rxbuf, val);
 800189e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80018a2:	4619      	mov	r1, r3
 80018a4:	6838      	ldr	r0, [r7, #0]
 80018a6:	f7ff ff7e 	bl	80017a6 <QpskRingBuffer_Put>
    while (!QpskRingBuffer_IsEmpty(txbuf) && !QpskRingBuffer_IsFull(rxbuf)) {
 80018aa:	6878      	ldr	r0, [r7, #4]
 80018ac:	f7ff ff64 	bl	8001778 <QpskRingBuffer_IsEmpty>
 80018b0:	4603      	mov	r3, r0
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d105      	bne.n	80018c2 <Qpsk_SimulateReception+0x3a>
 80018b6:	6838      	ldr	r0, [r7, #0]
 80018b8:	f7ff ff44 	bl	8001744 <QpskRingBuffer_IsFull>
 80018bc:	4603      	mov	r3, r0
 80018be:	2b00      	cmp	r3, #0
 80018c0:	d0e8      	beq.n	8001894 <Qpsk_SimulateReception+0xc>
    }
}
 80018c2:	bf00      	nop
 80018c4:	3710      	adds	r7, #16
 80018c6:	46bd      	mov	sp, r7
 80018c8:	bd80      	pop	{r7, pc}
	...

080018cc <HAL_MspInit>:
 80018cc:	b480      	push	{r7}
 80018ce:	b083      	sub	sp, #12
 80018d0:	af00      	add	r7, sp, #0
 80018d2:	2300      	movs	r3, #0
 80018d4:	607b      	str	r3, [r7, #4]
 80018d6:	4b10      	ldr	r3, [pc, #64]	@ (8001918 <HAL_MspInit+0x4c>)
 80018d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018da:	4a0f      	ldr	r2, [pc, #60]	@ (8001918 <HAL_MspInit+0x4c>)
 80018dc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80018e0:	6453      	str	r3, [r2, #68]	@ 0x44
 80018e2:	4b0d      	ldr	r3, [pc, #52]	@ (8001918 <HAL_MspInit+0x4c>)
 80018e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018e6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80018ea:	607b      	str	r3, [r7, #4]
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	2300      	movs	r3, #0
 80018f0:	603b      	str	r3, [r7, #0]
 80018f2:	4b09      	ldr	r3, [pc, #36]	@ (8001918 <HAL_MspInit+0x4c>)
 80018f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018f6:	4a08      	ldr	r2, [pc, #32]	@ (8001918 <HAL_MspInit+0x4c>)
 80018f8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80018fc:	6413      	str	r3, [r2, #64]	@ 0x40
 80018fe:	4b06      	ldr	r3, [pc, #24]	@ (8001918 <HAL_MspInit+0x4c>)
 8001900:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001902:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001906:	603b      	str	r3, [r7, #0]
 8001908:	683b      	ldr	r3, [r7, #0]
 800190a:	bf00      	nop
 800190c:	370c      	adds	r7, #12
 800190e:	46bd      	mov	sp, r7
 8001910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001914:	4770      	bx	lr
 8001916:	bf00      	nop
 8001918:	40023800 	.word	0x40023800

0800191c <HAL_ADC_MspInit>:
 800191c:	b580      	push	{r7, lr}
 800191e:	b08a      	sub	sp, #40	@ 0x28
 8001920:	af00      	add	r7, sp, #0
 8001922:	6078      	str	r0, [r7, #4]
 8001924:	f107 0314 	add.w	r3, r7, #20
 8001928:	2200      	movs	r2, #0
 800192a:	601a      	str	r2, [r3, #0]
 800192c:	605a      	str	r2, [r3, #4]
 800192e:	609a      	str	r2, [r3, #8]
 8001930:	60da      	str	r2, [r3, #12]
 8001932:	611a      	str	r2, [r3, #16]
 8001934:	687b      	ldr	r3, [r7, #4]
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	4a17      	ldr	r2, [pc, #92]	@ (8001998 <HAL_ADC_MspInit+0x7c>)
 800193a:	4293      	cmp	r3, r2
 800193c:	d127      	bne.n	800198e <HAL_ADC_MspInit+0x72>
 800193e:	2300      	movs	r3, #0
 8001940:	613b      	str	r3, [r7, #16]
 8001942:	4b16      	ldr	r3, [pc, #88]	@ (800199c <HAL_ADC_MspInit+0x80>)
 8001944:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001946:	4a15      	ldr	r2, [pc, #84]	@ (800199c <HAL_ADC_MspInit+0x80>)
 8001948:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800194c:	6453      	str	r3, [r2, #68]	@ 0x44
 800194e:	4b13      	ldr	r3, [pc, #76]	@ (800199c <HAL_ADC_MspInit+0x80>)
 8001950:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001952:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001956:	613b      	str	r3, [r7, #16]
 8001958:	693b      	ldr	r3, [r7, #16]
 800195a:	2300      	movs	r3, #0
 800195c:	60fb      	str	r3, [r7, #12]
 800195e:	4b0f      	ldr	r3, [pc, #60]	@ (800199c <HAL_ADC_MspInit+0x80>)
 8001960:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001962:	4a0e      	ldr	r2, [pc, #56]	@ (800199c <HAL_ADC_MspInit+0x80>)
 8001964:	f043 0301 	orr.w	r3, r3, #1
 8001968:	6313      	str	r3, [r2, #48]	@ 0x30
 800196a:	4b0c      	ldr	r3, [pc, #48]	@ (800199c <HAL_ADC_MspInit+0x80>)
 800196c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800196e:	f003 0301 	and.w	r3, r3, #1
 8001972:	60fb      	str	r3, [r7, #12]
 8001974:	68fb      	ldr	r3, [r7, #12]
 8001976:	2301      	movs	r3, #1
 8001978:	617b      	str	r3, [r7, #20]
 800197a:	2303      	movs	r3, #3
 800197c:	61bb      	str	r3, [r7, #24]
 800197e:	2300      	movs	r3, #0
 8001980:	61fb      	str	r3, [r7, #28]
 8001982:	f107 0314 	add.w	r3, r7, #20
 8001986:	4619      	mov	r1, r3
 8001988:	4805      	ldr	r0, [pc, #20]	@ (80019a0 <HAL_ADC_MspInit+0x84>)
 800198a:	f000 febb 	bl	8002704 <HAL_GPIO_Init>
 800198e:	bf00      	nop
 8001990:	3728      	adds	r7, #40	@ 0x28
 8001992:	46bd      	mov	sp, r7
 8001994:	bd80      	pop	{r7, pc}
 8001996:	bf00      	nop
 8001998:	40012000 	.word	0x40012000
 800199c:	40023800 	.word	0x40023800
 80019a0:	40020000 	.word	0x40020000

080019a4 <HAL_UART_MspInit>:
 80019a4:	b580      	push	{r7, lr}
 80019a6:	b08a      	sub	sp, #40	@ 0x28
 80019a8:	af00      	add	r7, sp, #0
 80019aa:	6078      	str	r0, [r7, #4]
 80019ac:	f107 0314 	add.w	r3, r7, #20
 80019b0:	2200      	movs	r2, #0
 80019b2:	601a      	str	r2, [r3, #0]
 80019b4:	605a      	str	r2, [r3, #4]
 80019b6:	609a      	str	r2, [r3, #8]
 80019b8:	60da      	str	r2, [r3, #12]
 80019ba:	611a      	str	r2, [r3, #16]
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	681b      	ldr	r3, [r3, #0]
 80019c0:	4a19      	ldr	r2, [pc, #100]	@ (8001a28 <HAL_UART_MspInit+0x84>)
 80019c2:	4293      	cmp	r3, r2
 80019c4:	d12b      	bne.n	8001a1e <HAL_UART_MspInit+0x7a>
 80019c6:	2300      	movs	r3, #0
 80019c8:	613b      	str	r3, [r7, #16]
 80019ca:	4b18      	ldr	r3, [pc, #96]	@ (8001a2c <HAL_UART_MspInit+0x88>)
 80019cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019ce:	4a17      	ldr	r2, [pc, #92]	@ (8001a2c <HAL_UART_MspInit+0x88>)
 80019d0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80019d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80019d6:	4b15      	ldr	r3, [pc, #84]	@ (8001a2c <HAL_UART_MspInit+0x88>)
 80019d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019da:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80019de:	613b      	str	r3, [r7, #16]
 80019e0:	693b      	ldr	r3, [r7, #16]
 80019e2:	2300      	movs	r3, #0
 80019e4:	60fb      	str	r3, [r7, #12]
 80019e6:	4b11      	ldr	r3, [pc, #68]	@ (8001a2c <HAL_UART_MspInit+0x88>)
 80019e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019ea:	4a10      	ldr	r2, [pc, #64]	@ (8001a2c <HAL_UART_MspInit+0x88>)
 80019ec:	f043 0301 	orr.w	r3, r3, #1
 80019f0:	6313      	str	r3, [r2, #48]	@ 0x30
 80019f2:	4b0e      	ldr	r3, [pc, #56]	@ (8001a2c <HAL_UART_MspInit+0x88>)
 80019f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019f6:	f003 0301 	and.w	r3, r3, #1
 80019fa:	60fb      	str	r3, [r7, #12]
 80019fc:	68fb      	ldr	r3, [r7, #12]
 80019fe:	230c      	movs	r3, #12
 8001a00:	617b      	str	r3, [r7, #20]
 8001a02:	2302      	movs	r3, #2
 8001a04:	61bb      	str	r3, [r7, #24]
 8001a06:	2300      	movs	r3, #0
 8001a08:	61fb      	str	r3, [r7, #28]
 8001a0a:	2303      	movs	r3, #3
 8001a0c:	623b      	str	r3, [r7, #32]
 8001a0e:	2307      	movs	r3, #7
 8001a10:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a12:	f107 0314 	add.w	r3, r7, #20
 8001a16:	4619      	mov	r1, r3
 8001a18:	4805      	ldr	r0, [pc, #20]	@ (8001a30 <HAL_UART_MspInit+0x8c>)
 8001a1a:	f000 fe73 	bl	8002704 <HAL_GPIO_Init>
 8001a1e:	bf00      	nop
 8001a20:	3728      	adds	r7, #40	@ 0x28
 8001a22:	46bd      	mov	sp, r7
 8001a24:	bd80      	pop	{r7, pc}
 8001a26:	bf00      	nop
 8001a28:	40004400 	.word	0x40004400
 8001a2c:	40023800 	.word	0x40023800
 8001a30:	40020000 	.word	0x40020000

08001a34 <NMI_Handler>:
 8001a34:	b480      	push	{r7}
 8001a36:	af00      	add	r7, sp, #0
 8001a38:	bf00      	nop
 8001a3a:	e7fd      	b.n	8001a38 <NMI_Handler+0x4>

08001a3c <HardFault_Handler>:
 8001a3c:	b480      	push	{r7}
 8001a3e:	af00      	add	r7, sp, #0
 8001a40:	bf00      	nop
 8001a42:	e7fd      	b.n	8001a40 <HardFault_Handler+0x4>

08001a44 <MemManage_Handler>:
 8001a44:	b480      	push	{r7}
 8001a46:	af00      	add	r7, sp, #0
 8001a48:	bf00      	nop
 8001a4a:	e7fd      	b.n	8001a48 <MemManage_Handler+0x4>

08001a4c <BusFault_Handler>:
 8001a4c:	b480      	push	{r7}
 8001a4e:	af00      	add	r7, sp, #0
 8001a50:	bf00      	nop
 8001a52:	e7fd      	b.n	8001a50 <BusFault_Handler+0x4>

08001a54 <UsageFault_Handler>:
 8001a54:	b480      	push	{r7}
 8001a56:	af00      	add	r7, sp, #0
 8001a58:	bf00      	nop
 8001a5a:	e7fd      	b.n	8001a58 <UsageFault_Handler+0x4>

08001a5c <SVC_Handler>:
 8001a5c:	b480      	push	{r7}
 8001a5e:	af00      	add	r7, sp, #0
 8001a60:	bf00      	nop
 8001a62:	46bd      	mov	sp, r7
 8001a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a68:	4770      	bx	lr

08001a6a <DebugMon_Handler>:
 8001a6a:	b480      	push	{r7}
 8001a6c:	af00      	add	r7, sp, #0
 8001a6e:	bf00      	nop
 8001a70:	46bd      	mov	sp, r7
 8001a72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a76:	4770      	bx	lr

08001a78 <PendSV_Handler>:
 8001a78:	b480      	push	{r7}
 8001a7a:	af00      	add	r7, sp, #0
 8001a7c:	bf00      	nop
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a84:	4770      	bx	lr

08001a86 <SysTick_Handler>:
 8001a86:	b580      	push	{r7, lr}
 8001a88:	af00      	add	r7, sp, #0
 8001a8a:	f000 fa9f 	bl	8001fcc <HAL_IncTick>
 8001a8e:	bf00      	nop
 8001a90:	bd80      	pop	{r7, pc}
	...

08001a94 <SystemInit>:
 8001a94:	b480      	push	{r7}
 8001a96:	af00      	add	r7, sp, #0
 8001a98:	4b06      	ldr	r3, [pc, #24]	@ (8001ab4 <SystemInit+0x20>)
 8001a9a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001a9e:	4a05      	ldr	r2, [pc, #20]	@ (8001ab4 <SystemInit+0x20>)
 8001aa0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001aa4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001aa8:	bf00      	nop
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ab0:	4770      	bx	lr
 8001ab2:	bf00      	nop
 8001ab4:	e000ed00 	.word	0xe000ed00

08001ab8 <CalcChecksum>:

#include "uart_protocol.h"
#include "stm32f4xx_hal.h"
#include "CMD.h"

static uint8_t CalcChecksum(uint16_t cmd, uint16_t len, uint8_t* payload) {
 8001ab8:	b480      	push	{r7}
 8001aba:	b085      	sub	sp, #20
 8001abc:	af00      	add	r7, sp, #0
 8001abe:	4603      	mov	r3, r0
 8001ac0:	603a      	str	r2, [r7, #0]
 8001ac2:	80fb      	strh	r3, [r7, #6]
 8001ac4:	460b      	mov	r3, r1
 8001ac6:	80bb      	strh	r3, [r7, #4]
    uint8_t cs = 0;
 8001ac8:	2300      	movs	r3, #0
 8001aca:	73fb      	strb	r3, [r7, #15]
    cs ^= 0xFE;
 8001acc:	7bfb      	ldrb	r3, [r7, #15]
 8001ace:	f083 0301 	eor.w	r3, r3, #1
 8001ad2:	43db      	mvns	r3, r3
 8001ad4:	73fb      	strb	r3, [r7, #15]
    cs ^= (cmd >> 8) & 0xFF;
 8001ad6:	88fb      	ldrh	r3, [r7, #6]
 8001ad8:	0a1b      	lsrs	r3, r3, #8
 8001ada:	b29b      	uxth	r3, r3
 8001adc:	b25a      	sxtb	r2, r3
 8001ade:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ae2:	4053      	eors	r3, r2
 8001ae4:	b25b      	sxtb	r3, r3
 8001ae6:	73fb      	strb	r3, [r7, #15]
    cs ^= (cmd >> 0) & 0xFF;
 8001ae8:	88fb      	ldrh	r3, [r7, #6]
 8001aea:	b25a      	sxtb	r2, r3
 8001aec:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001af0:	4053      	eors	r3, r2
 8001af2:	b25b      	sxtb	r3, r3
 8001af4:	73fb      	strb	r3, [r7, #15]
    cs ^= (len >> 8) & 0xFF;
 8001af6:	88bb      	ldrh	r3, [r7, #4]
 8001af8:	0a1b      	lsrs	r3, r3, #8
 8001afa:	b29b      	uxth	r3, r3
 8001afc:	b25a      	sxtb	r2, r3
 8001afe:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b02:	4053      	eors	r3, r2
 8001b04:	b25b      	sxtb	r3, r3
 8001b06:	73fb      	strb	r3, [r7, #15]
    cs ^= (len >> 0) & 0xFF;
 8001b08:	88bb      	ldrh	r3, [r7, #4]
 8001b0a:	b25a      	sxtb	r2, r3
 8001b0c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b10:	4053      	eors	r3, r2
 8001b12:	b25b      	sxtb	r3, r3
 8001b14:	73fb      	strb	r3, [r7, #15]
    for (uint16_t i = 0; i < len; i++) {
 8001b16:	2300      	movs	r3, #0
 8001b18:	81bb      	strh	r3, [r7, #12]
 8001b1a:	e009      	b.n	8001b30 <CalcChecksum+0x78>
        cs ^= payload[i];
 8001b1c:	89bb      	ldrh	r3, [r7, #12]
 8001b1e:	683a      	ldr	r2, [r7, #0]
 8001b20:	4413      	add	r3, r2
 8001b22:	781a      	ldrb	r2, [r3, #0]
 8001b24:	7bfb      	ldrb	r3, [r7, #15]
 8001b26:	4053      	eors	r3, r2
 8001b28:	73fb      	strb	r3, [r7, #15]
    for (uint16_t i = 0; i < len; i++) {
 8001b2a:	89bb      	ldrh	r3, [r7, #12]
 8001b2c:	3301      	adds	r3, #1
 8001b2e:	81bb      	strh	r3, [r7, #12]
 8001b30:	89ba      	ldrh	r2, [r7, #12]
 8001b32:	88bb      	ldrh	r3, [r7, #4]
 8001b34:	429a      	cmp	r2, r3
 8001b36:	d3f1      	bcc.n	8001b1c <CalcChecksum+0x64>
    }
    return cs;
 8001b38:	7bfb      	ldrb	r3, [r7, #15]
}
 8001b3a:	4618      	mov	r0, r3
 8001b3c:	3714      	adds	r7, #20
 8001b3e:	46bd      	mov	sp, r7
 8001b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b44:	4770      	bx	lr

08001b46 <UartProtocol_Init>:

void UartProtocol_Init(UartProtocol* proto, FrameReceivedCallback cb) {
 8001b46:	b480      	push	{r7}
 8001b48:	b083      	sub	sp, #12
 8001b4a:	af00      	add	r7, sp, #0
 8001b4c:	6078      	str	r0, [r7, #4]
 8001b4e:	6039      	str	r1, [r7, #0]
    proto->rx_state = WAIT_SOF;
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	2200      	movs	r2, #0
 8001b54:	701a      	strb	r2, [r3, #0]
    proto->rx_cmd = 0;
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	2200      	movs	r2, #0
 8001b5a:	805a      	strh	r2, [r3, #2]
    proto->rx_len = 0;
 8001b5c:	687b      	ldr	r3, [r7, #4]
 8001b5e:	2200      	movs	r2, #0
 8001b60:	809a      	strh	r2, [r3, #4]
    proto->rx_payload_idx = 0;
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	2200      	movs	r2, #0
 8001b66:	80da      	strh	r2, [r3, #6]
    proto->rx_checksum = 0;
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	2200      	movs	r2, #0
 8001b6c:	721a      	strb	r2, [r3, #8]
    proto->rx_calc_checksum = 0;
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	2200      	movs	r2, #0
 8001b72:	725a      	strb	r2, [r3, #9]
    proto->onFrameReceived = cb;
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	683a      	ldr	r2, [r7, #0]
 8001b78:	f8c3 210c 	str.w	r2, [r3, #268]	@ 0x10c
}
 8001b7c:	bf00      	nop
 8001b7e:	370c      	adds	r7, #12
 8001b80:	46bd      	mov	sp, r7
 8001b82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b86:	4770      	bx	lr

08001b88 <UartProtocol_ParseByte>:

void UartProtocol_ParseByte(UartProtocol* proto, uint8_t c) {
 8001b88:	b590      	push	{r4, r7, lr}
 8001b8a:	b083      	sub	sp, #12
 8001b8c:	af00      	add	r7, sp, #0
 8001b8e:	6078      	str	r0, [r7, #4]
 8001b90:	460b      	mov	r3, r1
 8001b92:	70fb      	strb	r3, [r7, #3]
    switch(proto->rx_state) {
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	781b      	ldrb	r3, [r3, #0]
 8001b98:	2b06      	cmp	r3, #6
 8001b9a:	f200 80b1 	bhi.w	8001d00 <UartProtocol_ParseByte+0x178>
 8001b9e:	a201      	add	r2, pc, #4	@ (adr r2, 8001ba4 <UartProtocol_ParseByte+0x1c>)
 8001ba0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001ba4:	08001bc1 	.word	0x08001bc1
 8001ba8:	08001bd7 	.word	0x08001bd7
 8001bac:	08001bf9 	.word	0x08001bf9
 8001bb0:	08001c1f 	.word	0x08001c1f
 8001bb4:	08001c41 	.word	0x08001c41
 8001bb8:	08001c8f 	.word	0x08001c8f
 8001bbc:	08001cc7 	.word	0x08001cc7
        case WAIT_SOF:
            if (c == 0xFE) {
 8001bc0:	78fb      	ldrb	r3, [r7, #3]
 8001bc2:	2bfe      	cmp	r3, #254	@ 0xfe
 8001bc4:	f040 80a0 	bne.w	8001d08 <UartProtocol_ParseByte+0x180>
                proto->rx_state = READ_CMD_MSB;
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	2201      	movs	r2, #1
 8001bcc:	701a      	strb	r2, [r3, #0]
                proto->rx_calc_checksum = 0xFE;
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	22fe      	movs	r2, #254	@ 0xfe
 8001bd2:	725a      	strb	r2, [r3, #9]
            }
            break;
 8001bd4:	e098      	b.n	8001d08 <UartProtocol_ParseByte+0x180>
        case READ_CMD_MSB:
            proto->rx_cmd = ((uint16_t)c) << 8;
 8001bd6:	78fb      	ldrb	r3, [r7, #3]
 8001bd8:	b29b      	uxth	r3, r3
 8001bda:	021b      	lsls	r3, r3, #8
 8001bdc:	b29a      	uxth	r2, r3
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	805a      	strh	r2, [r3, #2]
            proto->rx_calc_checksum ^= c;
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	7a5a      	ldrb	r2, [r3, #9]
 8001be6:	78fb      	ldrb	r3, [r7, #3]
 8001be8:	4053      	eors	r3, r2
 8001bea:	b2da      	uxtb	r2, r3
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	725a      	strb	r2, [r3, #9]
            proto->rx_state = READ_CMD_LSB;
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	2202      	movs	r2, #2
 8001bf4:	701a      	strb	r2, [r3, #0]
            break;
 8001bf6:	e08a      	b.n	8001d0e <UartProtocol_ParseByte+0x186>
        case READ_CMD_LSB:
            proto->rx_cmd |= c;
 8001bf8:	687b      	ldr	r3, [r7, #4]
 8001bfa:	885a      	ldrh	r2, [r3, #2]
 8001bfc:	78fb      	ldrb	r3, [r7, #3]
 8001bfe:	b29b      	uxth	r3, r3
 8001c00:	4313      	orrs	r3, r2
 8001c02:	b29a      	uxth	r2, r3
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	805a      	strh	r2, [r3, #2]
            proto->rx_calc_checksum ^= c;
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	7a5a      	ldrb	r2, [r3, #9]
 8001c0c:	78fb      	ldrb	r3, [r7, #3]
 8001c0e:	4053      	eors	r3, r2
 8001c10:	b2da      	uxtb	r2, r3
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	725a      	strb	r2, [r3, #9]
            proto->rx_state = READ_LEN_MSB;
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	2203      	movs	r2, #3
 8001c1a:	701a      	strb	r2, [r3, #0]
            break;
 8001c1c:	e077      	b.n	8001d0e <UartProtocol_ParseByte+0x186>
        case READ_LEN_MSB:
            proto->rx_len = ((uint16_t)c) << 8;
 8001c1e:	78fb      	ldrb	r3, [r7, #3]
 8001c20:	b29b      	uxth	r3, r3
 8001c22:	021b      	lsls	r3, r3, #8
 8001c24:	b29a      	uxth	r2, r3
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	809a      	strh	r2, [r3, #4]
            proto->rx_calc_checksum ^= c;
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	7a5a      	ldrb	r2, [r3, #9]
 8001c2e:	78fb      	ldrb	r3, [r7, #3]
 8001c30:	4053      	eors	r3, r2
 8001c32:	b2da      	uxtb	r2, r3
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	725a      	strb	r2, [r3, #9]
            proto->rx_state = READ_LEN_LSB;
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	2204      	movs	r2, #4
 8001c3c:	701a      	strb	r2, [r3, #0]
            break;
 8001c3e:	e066      	b.n	8001d0e <UartProtocol_ParseByte+0x186>
        case READ_LEN_LSB:
            proto->rx_len |= c;
 8001c40:	687b      	ldr	r3, [r7, #4]
 8001c42:	889a      	ldrh	r2, [r3, #4]
 8001c44:	78fb      	ldrb	r3, [r7, #3]
 8001c46:	b29b      	uxth	r3, r3
 8001c48:	4313      	orrs	r3, r2
 8001c4a:	b29a      	uxth	r2, r3
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	809a      	strh	r2, [r3, #4]
            proto->rx_calc_checksum ^= c;
 8001c50:	687b      	ldr	r3, [r7, #4]
 8001c52:	7a5a      	ldrb	r2, [r3, #9]
 8001c54:	78fb      	ldrb	r3, [r7, #3]
 8001c56:	4053      	eors	r3, r2
 8001c58:	b2da      	uxtb	r2, r3
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	725a      	strb	r2, [r3, #9]
            if (proto->rx_len > FRAME_MAX_PAYLOAD) {
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	889b      	ldrh	r3, [r3, #4]
 8001c62:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001c66:	d903      	bls.n	8001c70 <UartProtocol_ParseByte+0xe8>
                proto->rx_state = WAIT_SOF;
 8001c68:	687b      	ldr	r3, [r7, #4]
 8001c6a:	2200      	movs	r2, #0
 8001c6c:	701a      	strb	r2, [r3, #0]
                proto->rx_state = READ_CHECKSUM;
            } else {
                proto->rx_payload_idx = 0;
                proto->rx_state = READ_PAYLOAD;
            }
            break;
 8001c6e:	e04e      	b.n	8001d0e <UartProtocol_ParseByte+0x186>
            } else if (proto->rx_len == 0) {
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	889b      	ldrh	r3, [r3, #4]
 8001c74:	2b00      	cmp	r3, #0
 8001c76:	d103      	bne.n	8001c80 <UartProtocol_ParseByte+0xf8>
                proto->rx_state = READ_CHECKSUM;
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	2206      	movs	r2, #6
 8001c7c:	701a      	strb	r2, [r3, #0]
            break;
 8001c7e:	e046      	b.n	8001d0e <UartProtocol_ParseByte+0x186>
                proto->rx_payload_idx = 0;
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	2200      	movs	r2, #0
 8001c84:	80da      	strh	r2, [r3, #6]
                proto->rx_state = READ_PAYLOAD;
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	2205      	movs	r2, #5
 8001c8a:	701a      	strb	r2, [r3, #0]
            break;
 8001c8c:	e03f      	b.n	8001d0e <UartProtocol_ParseByte+0x186>
        case READ_PAYLOAD:
            proto->frame_payload[proto->rx_payload_idx++] = c;
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	88db      	ldrh	r3, [r3, #6]
 8001c92:	1c5a      	adds	r2, r3, #1
 8001c94:	b291      	uxth	r1, r2
 8001c96:	687a      	ldr	r2, [r7, #4]
 8001c98:	80d1      	strh	r1, [r2, #6]
 8001c9a:	461a      	mov	r2, r3
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	4413      	add	r3, r2
 8001ca0:	78fa      	ldrb	r2, [r7, #3]
 8001ca2:	729a      	strb	r2, [r3, #10]
            proto->rx_calc_checksum ^= c;
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	7a5a      	ldrb	r2, [r3, #9]
 8001ca8:	78fb      	ldrb	r3, [r7, #3]
 8001caa:	4053      	eors	r3, r2
 8001cac:	b2da      	uxtb	r2, r3
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	725a      	strb	r2, [r3, #9]
            if (proto->rx_payload_idx >= proto->rx_len) {
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	88da      	ldrh	r2, [r3, #6]
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	889b      	ldrh	r3, [r3, #4]
 8001cba:	429a      	cmp	r2, r3
 8001cbc:	d326      	bcc.n	8001d0c <UartProtocol_ParseByte+0x184>
                proto->rx_state = READ_CHECKSUM;
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	2206      	movs	r2, #6
 8001cc2:	701a      	strb	r2, [r3, #0]
            }
            break;
 8001cc4:	e022      	b.n	8001d0c <UartProtocol_ParseByte+0x184>
        case READ_CHECKSUM:
            proto->rx_checksum = c;
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	78fa      	ldrb	r2, [r7, #3]
 8001cca:	721a      	strb	r2, [r3, #8]
            if (proto->rx_checksum == proto->rx_calc_checksum && proto->onFrameReceived) {
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	7a1a      	ldrb	r2, [r3, #8]
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	7a5b      	ldrb	r3, [r3, #9]
 8001cd4:	429a      	cmp	r2, r3
 8001cd6:	d10f      	bne.n	8001cf8 <UartProtocol_ParseByte+0x170>
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	f8d3 310c 	ldr.w	r3, [r3, #268]	@ 0x10c
 8001cde:	2b00      	cmp	r3, #0
 8001ce0:	d00a      	beq.n	8001cf8 <UartProtocol_ParseByte+0x170>
                proto->onFrameReceived(proto, proto->rx_cmd, proto->rx_len, proto->frame_payload);
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	f8d3 410c 	ldr.w	r4, [r3, #268]	@ 0x10c
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	8859      	ldrh	r1, [r3, #2]
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	889a      	ldrh	r2, [r3, #4]
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	330a      	adds	r3, #10
 8001cf4:	6878      	ldr	r0, [r7, #4]
 8001cf6:	47a0      	blx	r4
            }
            proto->rx_state = WAIT_SOF;
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	2200      	movs	r2, #0
 8001cfc:	701a      	strb	r2, [r3, #0]
            break;
 8001cfe:	e006      	b.n	8001d0e <UartProtocol_ParseByte+0x186>
        default:
            proto->rx_state = WAIT_SOF;
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	2200      	movs	r2, #0
 8001d04:	701a      	strb	r2, [r3, #0]
            break;
 8001d06:	e002      	b.n	8001d0e <UartProtocol_ParseByte+0x186>
            break;
 8001d08:	bf00      	nop
 8001d0a:	e000      	b.n	8001d0e <UartProtocol_ParseByte+0x186>
            break;
 8001d0c:	bf00      	nop
    }
}
 8001d0e:	bf00      	nop
 8001d10:	370c      	adds	r7, #12
 8001d12:	46bd      	mov	sp, r7
 8001d14:	bd90      	pop	{r4, r7, pc}
 8001d16:	bf00      	nop

08001d18 <UartProtocol_SendFrame>:

void UartProtocol_SendFrame(UART_HandleTypeDef* huart, uint16_t cmd, uint16_t len, uint8_t* payload) {
 8001d18:	b590      	push	{r4, r7, lr}
 8001d1a:	b0c9      	sub	sp, #292	@ 0x124
 8001d1c:	af00      	add	r7, sp, #0
 8001d1e:	f507 7490 	add.w	r4, r7, #288	@ 0x120
 8001d22:	f5a4 748a 	sub.w	r4, r4, #276	@ 0x114
 8001d26:	6020      	str	r0, [r4, #0]
 8001d28:	4608      	mov	r0, r1
 8001d2a:	4611      	mov	r1, r2
 8001d2c:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d30:	f5a2 728e 	sub.w	r2, r2, #284	@ 0x11c
 8001d34:	6013      	str	r3, [r2, #0]
 8001d36:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001d3a:	f5a3 738b 	sub.w	r3, r3, #278	@ 0x116
 8001d3e:	4602      	mov	r2, r0
 8001d40:	801a      	strh	r2, [r3, #0]
 8001d42:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001d46:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001d4a:	460a      	mov	r2, r1
 8001d4c:	801a      	strh	r2, [r3, #0]
    uint8_t tx_buf[6 + FRAME_MAX_PAYLOAD];
    int pos = 0;
 8001d4e:	2300      	movs	r3, #0
 8001d50:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
    tx_buf[pos++] = 0xFE;
 8001d54:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001d58:	1c5a      	adds	r2, r3, #1
 8001d5a:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001d5e:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d62:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001d66:	21fe      	movs	r1, #254	@ 0xfe
 8001d68:	54d1      	strb	r1, [r2, r3]
    tx_buf[pos++] = (cmd >> 8) & 0xFF;
 8001d6a:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001d6e:	f5a3 738b 	sub.w	r3, r3, #278	@ 0x116
 8001d72:	881b      	ldrh	r3, [r3, #0]
 8001d74:	0a1b      	lsrs	r3, r3, #8
 8001d76:	b299      	uxth	r1, r3
 8001d78:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001d7c:	1c5a      	adds	r2, r3, #1
 8001d7e:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001d82:	b2c9      	uxtb	r1, r1
 8001d84:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d88:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001d8c:	54d1      	strb	r1, [r2, r3]
    tx_buf[pos++] = (cmd >> 0) & 0xFF;
 8001d8e:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001d92:	1c5a      	adds	r2, r3, #1
 8001d94:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001d98:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d9c:	f5a2 728b 	sub.w	r2, r2, #278	@ 0x116
 8001da0:	8812      	ldrh	r2, [r2, #0]
 8001da2:	b2d1      	uxtb	r1, r2
 8001da4:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001da8:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001dac:	54d1      	strb	r1, [r2, r3]
    tx_buf[pos++] = (len >> 8) & 0xFF;
 8001dae:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001db2:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001db6:	881b      	ldrh	r3, [r3, #0]
 8001db8:	0a1b      	lsrs	r3, r3, #8
 8001dba:	b299      	uxth	r1, r3
 8001dbc:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001dc0:	1c5a      	adds	r2, r3, #1
 8001dc2:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001dc6:	b2c9      	uxtb	r1, r1
 8001dc8:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001dcc:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001dd0:	54d1      	strb	r1, [r2, r3]
    tx_buf[pos++] = (len >> 0) & 0xFF;
 8001dd2:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001dd6:	1c5a      	adds	r2, r3, #1
 8001dd8:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001ddc:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001de0:	f5a2 728c 	sub.w	r2, r2, #280	@ 0x118
 8001de4:	8812      	ldrh	r2, [r2, #0]
 8001de6:	b2d1      	uxtb	r1, r2
 8001de8:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001dec:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001df0:	54d1      	strb	r1, [r2, r3]
    for (int i = 0; i < len; i++) {
 8001df2:	2300      	movs	r3, #0
 8001df4:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118
 8001df8:	e017      	b.n	8001e2a <UartProtocol_SendFrame+0x112>
        tx_buf[pos++] = payload[i];
 8001dfa:	f8d7 3118 	ldr.w	r3, [r7, #280]	@ 0x118
 8001dfe:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001e02:	f5a2 728e 	sub.w	r2, r2, #284	@ 0x11c
 8001e06:	6812      	ldr	r2, [r2, #0]
 8001e08:	441a      	add	r2, r3
 8001e0a:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001e0e:	1c59      	adds	r1, r3, #1
 8001e10:	f8c7 111c 	str.w	r1, [r7, #284]	@ 0x11c
 8001e14:	7811      	ldrb	r1, [r2, #0]
 8001e16:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001e1a:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001e1e:	54d1      	strb	r1, [r2, r3]
    for (int i = 0; i < len; i++) {
 8001e20:	f8d7 3118 	ldr.w	r3, [r7, #280]	@ 0x118
 8001e24:	3301      	adds	r3, #1
 8001e26:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118
 8001e2a:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001e2e:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001e32:	881b      	ldrh	r3, [r3, #0]
 8001e34:	f8d7 2118 	ldr.w	r2, [r7, #280]	@ 0x118
 8001e38:	429a      	cmp	r2, r3
 8001e3a:	dbde      	blt.n	8001dfa <UartProtocol_SendFrame+0xe2>
    }
    uint8_t cs = CalcChecksum(cmd, len, payload);
 8001e3c:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001e40:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 8001e44:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001e48:	f5a2 728c 	sub.w	r2, r2, #280	@ 0x118
 8001e4c:	8811      	ldrh	r1, [r2, #0]
 8001e4e:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001e52:	f5a2 728b 	sub.w	r2, r2, #278	@ 0x116
 8001e56:	8810      	ldrh	r0, [r2, #0]
 8001e58:	681a      	ldr	r2, [r3, #0]
 8001e5a:	f7ff fe2d 	bl	8001ab8 <CalcChecksum>
 8001e5e:	4603      	mov	r3, r0
 8001e60:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
    tx_buf[pos++] = cs;
 8001e64:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001e68:	1c5a      	adds	r2, r3, #1
 8001e6a:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001e6e:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001e72:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001e76:	f897 1117 	ldrb.w	r1, [r7, #279]	@ 0x117
 8001e7a:	54d1      	strb	r1, [r2, r3]
    HAL_UART_Transmit(huart, tx_buf, pos, 100);
 8001e7c:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001e80:	b29a      	uxth	r2, r3
 8001e82:	f107 0110 	add.w	r1, r7, #16
 8001e86:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001e8a:	f5a3 708a 	sub.w	r0, r3, #276	@ 0x114
 8001e8e:	2364      	movs	r3, #100	@ 0x64
 8001e90:	6800      	ldr	r0, [r0, #0]
 8001e92:	f001 fa7d 	bl	8003390 <HAL_UART_Transmit>
}
 8001e96:	bf00      	nop
 8001e98:	f507 7792 	add.w	r7, r7, #292	@ 0x124
 8001e9c:	46bd      	mov	sp, r7
 8001e9e:	bd90      	pop	{r4, r7, pc}

08001ea0 <SendIQFrame>:
    uint8_t cs = CalcChecksum(cmd, len, payload);
    out_buf[pos++] = cs;
    return pos;
}

void SendIQFrame(UART_HandleTypeDef* huart, int8_t i, int8_t q) {
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	b084      	sub	sp, #16
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	6078      	str	r0, [r7, #4]
 8001ea8:	460b      	mov	r3, r1
 8001eaa:	70fb      	strb	r3, [r7, #3]
 8001eac:	4613      	mov	r3, r2
 8001eae:	70bb      	strb	r3, [r7, #2]
    uint8_t payload[3];
    payload[0] = 'T'; // Pour TX
 8001eb0:	2354      	movs	r3, #84	@ 0x54
 8001eb2:	733b      	strb	r3, [r7, #12]
    payload[1] = (uint8_t)i;
 8001eb4:	78fb      	ldrb	r3, [r7, #3]
 8001eb6:	737b      	strb	r3, [r7, #13]
    payload[2] = (uint8_t)q;
 8001eb8:	78bb      	ldrb	r3, [r7, #2]
 8001eba:	73bb      	strb	r3, [r7, #14]
    UartProtocol_SendFrame(huart, CMD_IQ_DATA, 3, payload);
 8001ebc:	f107 030c 	add.w	r3, r7, #12
 8001ec0:	2203      	movs	r2, #3
 8001ec2:	f245 51aa 	movw	r1, #21930	@ 0x55aa
 8001ec6:	6878      	ldr	r0, [r7, #4]
 8001ec8:	f7ff ff26 	bl	8001d18 <UartProtocol_SendFrame>
}
 8001ecc:	bf00      	nop
 8001ece:	3710      	adds	r7, #16
 8001ed0:	46bd      	mov	sp, r7
 8001ed2:	bd80      	pop	{r7, pc}

08001ed4 <Reset_Handler>:
 8001ed4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001f0c <LoopFillZerobss+0xe>
 8001ed8:	f7ff fddc 	bl	8001a94 <SystemInit>
 8001edc:	480c      	ldr	r0, [pc, #48]	@ (8001f10 <LoopFillZerobss+0x12>)
 8001ede:	490d      	ldr	r1, [pc, #52]	@ (8001f14 <LoopFillZerobss+0x16>)
 8001ee0:	4a0d      	ldr	r2, [pc, #52]	@ (8001f18 <LoopFillZerobss+0x1a>)
 8001ee2:	2300      	movs	r3, #0
 8001ee4:	e002      	b.n	8001eec <LoopCopyDataInit>

08001ee6 <CopyDataInit>:
 8001ee6:	58d4      	ldr	r4, [r2, r3]
 8001ee8:	50c4      	str	r4, [r0, r3]
 8001eea:	3304      	adds	r3, #4

08001eec <LoopCopyDataInit>:
 8001eec:	18c4      	adds	r4, r0, r3
 8001eee:	428c      	cmp	r4, r1
 8001ef0:	d3f9      	bcc.n	8001ee6 <CopyDataInit>
 8001ef2:	4a0a      	ldr	r2, [pc, #40]	@ (8001f1c <LoopFillZerobss+0x1e>)
 8001ef4:	4c0a      	ldr	r4, [pc, #40]	@ (8001f20 <LoopFillZerobss+0x22>)
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	e001      	b.n	8001efe <LoopFillZerobss>

08001efa <FillZerobss>:
 8001efa:	6013      	str	r3, [r2, #0]
 8001efc:	3204      	adds	r2, #4

08001efe <LoopFillZerobss>:
 8001efe:	42a2      	cmp	r2, r4
 8001f00:	d3fb      	bcc.n	8001efa <FillZerobss>
 8001f02:	f001 fe9f 	bl	8003c44 <__libc_init_array>
 8001f06:	f7fe fef7 	bl	8000cf8 <main>
 8001f0a:	4770      	bx	lr
 8001f0c:	20020000 	.word	0x20020000
 8001f10:	20000000 	.word	0x20000000
 8001f14:	2000000c 	.word	0x2000000c
 8001f18:	08004b8c 	.word	0x08004b8c
 8001f1c:	2000000c 	.word	0x2000000c
 8001f20:	200044e4 	.word	0x200044e4

08001f24 <ADC_IRQHandler>:
 8001f24:	e7fe      	b.n	8001f24 <ADC_IRQHandler>
	...

08001f28 <HAL_Init>:
 8001f28:	b580      	push	{r7, lr}
 8001f2a:	af00      	add	r7, sp, #0
 8001f2c:	4b0e      	ldr	r3, [pc, #56]	@ (8001f68 <HAL_Init+0x40>)
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	4a0d      	ldr	r2, [pc, #52]	@ (8001f68 <HAL_Init+0x40>)
 8001f32:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001f36:	6013      	str	r3, [r2, #0]
 8001f38:	4b0b      	ldr	r3, [pc, #44]	@ (8001f68 <HAL_Init+0x40>)
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	4a0a      	ldr	r2, [pc, #40]	@ (8001f68 <HAL_Init+0x40>)
 8001f3e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001f42:	6013      	str	r3, [r2, #0]
 8001f44:	4b08      	ldr	r3, [pc, #32]	@ (8001f68 <HAL_Init+0x40>)
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	4a07      	ldr	r2, [pc, #28]	@ (8001f68 <HAL_Init+0x40>)
 8001f4a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001f4e:	6013      	str	r3, [r2, #0]
 8001f50:	2003      	movs	r0, #3
 8001f52:	f000 fba3 	bl	800269c <HAL_NVIC_SetPriorityGrouping>
 8001f56:	200f      	movs	r0, #15
 8001f58:	f000 f808 	bl	8001f6c <HAL_InitTick>
 8001f5c:	f7ff fcb6 	bl	80018cc <HAL_MspInit>
 8001f60:	2300      	movs	r3, #0
 8001f62:	4618      	mov	r0, r3
 8001f64:	bd80      	pop	{r7, pc}
 8001f66:	bf00      	nop
 8001f68:	40023c00 	.word	0x40023c00

08001f6c <HAL_InitTick>:
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	b082      	sub	sp, #8
 8001f70:	af00      	add	r7, sp, #0
 8001f72:	6078      	str	r0, [r7, #4]
 8001f74:	4b12      	ldr	r3, [pc, #72]	@ (8001fc0 <HAL_InitTick+0x54>)
 8001f76:	681a      	ldr	r2, [r3, #0]
 8001f78:	4b12      	ldr	r3, [pc, #72]	@ (8001fc4 <HAL_InitTick+0x58>)
 8001f7a:	781b      	ldrb	r3, [r3, #0]
 8001f7c:	4619      	mov	r1, r3
 8001f7e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001f82:	fbb3 f3f1 	udiv	r3, r3, r1
 8001f86:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f8a:	4618      	mov	r0, r3
 8001f8c:	f000 fbad 	bl	80026ea <HAL_SYSTICK_Config>
 8001f90:	4603      	mov	r3, r0
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d001      	beq.n	8001f9a <HAL_InitTick+0x2e>
 8001f96:	2301      	movs	r3, #1
 8001f98:	e00e      	b.n	8001fb8 <HAL_InitTick+0x4c>
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	2b0f      	cmp	r3, #15
 8001f9e:	d80a      	bhi.n	8001fb6 <HAL_InitTick+0x4a>
 8001fa0:	2200      	movs	r2, #0
 8001fa2:	6879      	ldr	r1, [r7, #4]
 8001fa4:	f04f 30ff 	mov.w	r0, #4294967295
 8001fa8:	f000 fb83 	bl	80026b2 <HAL_NVIC_SetPriority>
 8001fac:	4a06      	ldr	r2, [pc, #24]	@ (8001fc8 <HAL_InitTick+0x5c>)
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	6013      	str	r3, [r2, #0]
 8001fb2:	2300      	movs	r3, #0
 8001fb4:	e000      	b.n	8001fb8 <HAL_InitTick+0x4c>
 8001fb6:	2301      	movs	r3, #1
 8001fb8:	4618      	mov	r0, r3
 8001fba:	3708      	adds	r7, #8
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	bd80      	pop	{r7, pc}
 8001fc0:	20000000 	.word	0x20000000
 8001fc4:	20000008 	.word	0x20000008
 8001fc8:	20000004 	.word	0x20000004

08001fcc <HAL_IncTick>:
 8001fcc:	b480      	push	{r7}
 8001fce:	af00      	add	r7, sp, #0
 8001fd0:	4b06      	ldr	r3, [pc, #24]	@ (8001fec <HAL_IncTick+0x20>)
 8001fd2:	781b      	ldrb	r3, [r3, #0]
 8001fd4:	461a      	mov	r2, r3
 8001fd6:	4b06      	ldr	r3, [pc, #24]	@ (8001ff0 <HAL_IncTick+0x24>)
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	4413      	add	r3, r2
 8001fdc:	4a04      	ldr	r2, [pc, #16]	@ (8001ff0 <HAL_IncTick+0x24>)
 8001fde:	6013      	str	r3, [r2, #0]
 8001fe0:	bf00      	nop
 8001fe2:	46bd      	mov	sp, r7
 8001fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fe8:	4770      	bx	lr
 8001fea:	bf00      	nop
 8001fec:	20000008 	.word	0x20000008
 8001ff0:	200044e0 	.word	0x200044e0

08001ff4 <HAL_GetTick>:
 8001ff4:	b480      	push	{r7}
 8001ff6:	af00      	add	r7, sp, #0
 8001ff8:	4b03      	ldr	r3, [pc, #12]	@ (8002008 <HAL_GetTick+0x14>)
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	4618      	mov	r0, r3
 8001ffe:	46bd      	mov	sp, r7
 8002000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002004:	4770      	bx	lr
 8002006:	bf00      	nop
 8002008:	200044e0 	.word	0x200044e0

0800200c <HAL_Delay>:
 800200c:	b580      	push	{r7, lr}
 800200e:	b084      	sub	sp, #16
 8002010:	af00      	add	r7, sp, #0
 8002012:	6078      	str	r0, [r7, #4]
 8002014:	f7ff ffee 	bl	8001ff4 <HAL_GetTick>
 8002018:	60b8      	str	r0, [r7, #8]
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	60fb      	str	r3, [r7, #12]
 800201e:	68fb      	ldr	r3, [r7, #12]
 8002020:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002024:	d005      	beq.n	8002032 <HAL_Delay+0x26>
 8002026:	4b0a      	ldr	r3, [pc, #40]	@ (8002050 <HAL_Delay+0x44>)
 8002028:	781b      	ldrb	r3, [r3, #0]
 800202a:	461a      	mov	r2, r3
 800202c:	68fb      	ldr	r3, [r7, #12]
 800202e:	4413      	add	r3, r2
 8002030:	60fb      	str	r3, [r7, #12]
 8002032:	bf00      	nop
 8002034:	f7ff ffde 	bl	8001ff4 <HAL_GetTick>
 8002038:	4602      	mov	r2, r0
 800203a:	68bb      	ldr	r3, [r7, #8]
 800203c:	1ad3      	subs	r3, r2, r3
 800203e:	68fa      	ldr	r2, [r7, #12]
 8002040:	429a      	cmp	r2, r3
 8002042:	d8f7      	bhi.n	8002034 <HAL_Delay+0x28>
 8002044:	bf00      	nop
 8002046:	bf00      	nop
 8002048:	3710      	adds	r7, #16
 800204a:	46bd      	mov	sp, r7
 800204c:	bd80      	pop	{r7, pc}
 800204e:	bf00      	nop
 8002050:	20000008 	.word	0x20000008

08002054 <HAL_ADC_Init>:
 8002054:	b580      	push	{r7, lr}
 8002056:	b084      	sub	sp, #16
 8002058:	af00      	add	r7, sp, #0
 800205a:	6078      	str	r0, [r7, #4]
 800205c:	2300      	movs	r3, #0
 800205e:	73fb      	strb	r3, [r7, #15]
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	2b00      	cmp	r3, #0
 8002064:	d101      	bne.n	800206a <HAL_ADC_Init+0x16>
 8002066:	2301      	movs	r3, #1
 8002068:	e033      	b.n	80020d2 <HAL_ADC_Init+0x7e>
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800206e:	2b00      	cmp	r3, #0
 8002070:	d109      	bne.n	8002086 <HAL_ADC_Init+0x32>
 8002072:	6878      	ldr	r0, [r7, #4]
 8002074:	f7ff fc52 	bl	800191c <HAL_ADC_MspInit>
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	2200      	movs	r2, #0
 800207c:	645a      	str	r2, [r3, #68]	@ 0x44
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	2200      	movs	r2, #0
 8002082:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800208a:	f003 0310 	and.w	r3, r3, #16
 800208e:	2b00      	cmp	r3, #0
 8002090:	d118      	bne.n	80020c4 <HAL_ADC_Init+0x70>
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002096:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800209a:	f023 0302 	bic.w	r3, r3, #2
 800209e:	f043 0202 	orr.w	r2, r3, #2
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	641a      	str	r2, [r3, #64]	@ 0x40
 80020a6:	6878      	ldr	r0, [r7, #4]
 80020a8:	f000 f94a 	bl	8002340 <ADC_Init>
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	2200      	movs	r2, #0
 80020b0:	645a      	str	r2, [r3, #68]	@ 0x44
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020b6:	f023 0303 	bic.w	r3, r3, #3
 80020ba:	f043 0201 	orr.w	r2, r3, #1
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	641a      	str	r2, [r3, #64]	@ 0x40
 80020c2:	e001      	b.n	80020c8 <HAL_ADC_Init+0x74>
 80020c4:	2301      	movs	r3, #1
 80020c6:	73fb      	strb	r3, [r7, #15]
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	2200      	movs	r2, #0
 80020cc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80020d0:	7bfb      	ldrb	r3, [r7, #15]
 80020d2:	4618      	mov	r0, r3
 80020d4:	3710      	adds	r7, #16
 80020d6:	46bd      	mov	sp, r7
 80020d8:	bd80      	pop	{r7, pc}
	...

080020dc <HAL_ADC_ConfigChannel>:
 80020dc:	b480      	push	{r7}
 80020de:	b085      	sub	sp, #20
 80020e0:	af00      	add	r7, sp, #0
 80020e2:	6078      	str	r0, [r7, #4]
 80020e4:	6039      	str	r1, [r7, #0]
 80020e6:	2300      	movs	r3, #0
 80020e8:	60bb      	str	r3, [r7, #8]
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80020f0:	2b01      	cmp	r3, #1
 80020f2:	d101      	bne.n	80020f8 <HAL_ADC_ConfigChannel+0x1c>
 80020f4:	2302      	movs	r3, #2
 80020f6:	e113      	b.n	8002320 <HAL_ADC_ConfigChannel+0x244>
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	2201      	movs	r2, #1
 80020fc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002100:	683b      	ldr	r3, [r7, #0]
 8002102:	681b      	ldr	r3, [r3, #0]
 8002104:	2b09      	cmp	r3, #9
 8002106:	d925      	bls.n	8002154 <HAL_ADC_ConfigChannel+0x78>
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	68d9      	ldr	r1, [r3, #12]
 800210e:	683b      	ldr	r3, [r7, #0]
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	b29b      	uxth	r3, r3
 8002114:	461a      	mov	r2, r3
 8002116:	4613      	mov	r3, r2
 8002118:	005b      	lsls	r3, r3, #1
 800211a:	4413      	add	r3, r2
 800211c:	3b1e      	subs	r3, #30
 800211e:	2207      	movs	r2, #7
 8002120:	fa02 f303 	lsl.w	r3, r2, r3
 8002124:	43da      	mvns	r2, r3
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	400a      	ands	r2, r1
 800212c:	60da      	str	r2, [r3, #12]
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	681b      	ldr	r3, [r3, #0]
 8002132:	68d9      	ldr	r1, [r3, #12]
 8002134:	683b      	ldr	r3, [r7, #0]
 8002136:	689a      	ldr	r2, [r3, #8]
 8002138:	683b      	ldr	r3, [r7, #0]
 800213a:	681b      	ldr	r3, [r3, #0]
 800213c:	b29b      	uxth	r3, r3
 800213e:	4618      	mov	r0, r3
 8002140:	4603      	mov	r3, r0
 8002142:	005b      	lsls	r3, r3, #1
 8002144:	4403      	add	r3, r0
 8002146:	3b1e      	subs	r3, #30
 8002148:	409a      	lsls	r2, r3
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	681b      	ldr	r3, [r3, #0]
 800214e:	430a      	orrs	r2, r1
 8002150:	60da      	str	r2, [r3, #12]
 8002152:	e022      	b.n	800219a <HAL_ADC_ConfigChannel+0xbe>
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	681b      	ldr	r3, [r3, #0]
 8002158:	6919      	ldr	r1, [r3, #16]
 800215a:	683b      	ldr	r3, [r7, #0]
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	b29b      	uxth	r3, r3
 8002160:	461a      	mov	r2, r3
 8002162:	4613      	mov	r3, r2
 8002164:	005b      	lsls	r3, r3, #1
 8002166:	4413      	add	r3, r2
 8002168:	2207      	movs	r2, #7
 800216a:	fa02 f303 	lsl.w	r3, r2, r3
 800216e:	43da      	mvns	r2, r3
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	400a      	ands	r2, r1
 8002176:	611a      	str	r2, [r3, #16]
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	6919      	ldr	r1, [r3, #16]
 800217e:	683b      	ldr	r3, [r7, #0]
 8002180:	689a      	ldr	r2, [r3, #8]
 8002182:	683b      	ldr	r3, [r7, #0]
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	b29b      	uxth	r3, r3
 8002188:	4618      	mov	r0, r3
 800218a:	4603      	mov	r3, r0
 800218c:	005b      	lsls	r3, r3, #1
 800218e:	4403      	add	r3, r0
 8002190:	409a      	lsls	r2, r3
 8002192:	687b      	ldr	r3, [r7, #4]
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	430a      	orrs	r2, r1
 8002198:	611a      	str	r2, [r3, #16]
 800219a:	683b      	ldr	r3, [r7, #0]
 800219c:	685b      	ldr	r3, [r3, #4]
 800219e:	2b06      	cmp	r3, #6
 80021a0:	d824      	bhi.n	80021ec <HAL_ADC_ConfigChannel+0x110>
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80021a8:	683b      	ldr	r3, [r7, #0]
 80021aa:	685a      	ldr	r2, [r3, #4]
 80021ac:	4613      	mov	r3, r2
 80021ae:	009b      	lsls	r3, r3, #2
 80021b0:	4413      	add	r3, r2
 80021b2:	3b05      	subs	r3, #5
 80021b4:	221f      	movs	r2, #31
 80021b6:	fa02 f303 	lsl.w	r3, r2, r3
 80021ba:	43da      	mvns	r2, r3
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	400a      	ands	r2, r1
 80021c2:	635a      	str	r2, [r3, #52]	@ 0x34
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80021ca:	683b      	ldr	r3, [r7, #0]
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	b29b      	uxth	r3, r3
 80021d0:	4618      	mov	r0, r3
 80021d2:	683b      	ldr	r3, [r7, #0]
 80021d4:	685a      	ldr	r2, [r3, #4]
 80021d6:	4613      	mov	r3, r2
 80021d8:	009b      	lsls	r3, r3, #2
 80021da:	4413      	add	r3, r2
 80021dc:	3b05      	subs	r3, #5
 80021de:	fa00 f203 	lsl.w	r2, r0, r3
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	430a      	orrs	r2, r1
 80021e8:	635a      	str	r2, [r3, #52]	@ 0x34
 80021ea:	e04c      	b.n	8002286 <HAL_ADC_ConfigChannel+0x1aa>
 80021ec:	683b      	ldr	r3, [r7, #0]
 80021ee:	685b      	ldr	r3, [r3, #4]
 80021f0:	2b0c      	cmp	r3, #12
 80021f2:	d824      	bhi.n	800223e <HAL_ADC_ConfigChannel+0x162>
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80021fa:	683b      	ldr	r3, [r7, #0]
 80021fc:	685a      	ldr	r2, [r3, #4]
 80021fe:	4613      	mov	r3, r2
 8002200:	009b      	lsls	r3, r3, #2
 8002202:	4413      	add	r3, r2
 8002204:	3b23      	subs	r3, #35	@ 0x23
 8002206:	221f      	movs	r2, #31
 8002208:	fa02 f303 	lsl.w	r3, r2, r3
 800220c:	43da      	mvns	r2, r3
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	400a      	ands	r2, r1
 8002214:	631a      	str	r2, [r3, #48]	@ 0x30
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800221c:	683b      	ldr	r3, [r7, #0]
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	b29b      	uxth	r3, r3
 8002222:	4618      	mov	r0, r3
 8002224:	683b      	ldr	r3, [r7, #0]
 8002226:	685a      	ldr	r2, [r3, #4]
 8002228:	4613      	mov	r3, r2
 800222a:	009b      	lsls	r3, r3, #2
 800222c:	4413      	add	r3, r2
 800222e:	3b23      	subs	r3, #35	@ 0x23
 8002230:	fa00 f203 	lsl.w	r2, r0, r3
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	681b      	ldr	r3, [r3, #0]
 8002238:	430a      	orrs	r2, r1
 800223a:	631a      	str	r2, [r3, #48]	@ 0x30
 800223c:	e023      	b.n	8002286 <HAL_ADC_ConfigChannel+0x1aa>
 800223e:	687b      	ldr	r3, [r7, #4]
 8002240:	681b      	ldr	r3, [r3, #0]
 8002242:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002244:	683b      	ldr	r3, [r7, #0]
 8002246:	685a      	ldr	r2, [r3, #4]
 8002248:	4613      	mov	r3, r2
 800224a:	009b      	lsls	r3, r3, #2
 800224c:	4413      	add	r3, r2
 800224e:	3b41      	subs	r3, #65	@ 0x41
 8002250:	221f      	movs	r2, #31
 8002252:	fa02 f303 	lsl.w	r3, r2, r3
 8002256:	43da      	mvns	r2, r3
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	400a      	ands	r2, r1
 800225e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	681b      	ldr	r3, [r3, #0]
 8002264:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002266:	683b      	ldr	r3, [r7, #0]
 8002268:	681b      	ldr	r3, [r3, #0]
 800226a:	b29b      	uxth	r3, r3
 800226c:	4618      	mov	r0, r3
 800226e:	683b      	ldr	r3, [r7, #0]
 8002270:	685a      	ldr	r2, [r3, #4]
 8002272:	4613      	mov	r3, r2
 8002274:	009b      	lsls	r3, r3, #2
 8002276:	4413      	add	r3, r2
 8002278:	3b41      	subs	r3, #65	@ 0x41
 800227a:	fa00 f203 	lsl.w	r2, r0, r3
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	430a      	orrs	r2, r1
 8002284:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002286:	4b29      	ldr	r3, [pc, #164]	@ (800232c <HAL_ADC_ConfigChannel+0x250>)
 8002288:	60fb      	str	r3, [r7, #12]
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	4a28      	ldr	r2, [pc, #160]	@ (8002330 <HAL_ADC_ConfigChannel+0x254>)
 8002290:	4293      	cmp	r3, r2
 8002292:	d10f      	bne.n	80022b4 <HAL_ADC_ConfigChannel+0x1d8>
 8002294:	683b      	ldr	r3, [r7, #0]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	2b12      	cmp	r3, #18
 800229a:	d10b      	bne.n	80022b4 <HAL_ADC_ConfigChannel+0x1d8>
 800229c:	68fb      	ldr	r3, [r7, #12]
 800229e:	685b      	ldr	r3, [r3, #4]
 80022a0:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 80022a4:	68fb      	ldr	r3, [r7, #12]
 80022a6:	605a      	str	r2, [r3, #4]
 80022a8:	68fb      	ldr	r3, [r7, #12]
 80022aa:	685b      	ldr	r3, [r3, #4]
 80022ac:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80022b0:	68fb      	ldr	r3, [r7, #12]
 80022b2:	605a      	str	r2, [r3, #4]
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	4a1d      	ldr	r2, [pc, #116]	@ (8002330 <HAL_ADC_ConfigChannel+0x254>)
 80022ba:	4293      	cmp	r3, r2
 80022bc:	d12b      	bne.n	8002316 <HAL_ADC_ConfigChannel+0x23a>
 80022be:	683b      	ldr	r3, [r7, #0]
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	4a1c      	ldr	r2, [pc, #112]	@ (8002334 <HAL_ADC_ConfigChannel+0x258>)
 80022c4:	4293      	cmp	r3, r2
 80022c6:	d003      	beq.n	80022d0 <HAL_ADC_ConfigChannel+0x1f4>
 80022c8:	683b      	ldr	r3, [r7, #0]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	2b11      	cmp	r3, #17
 80022ce:	d122      	bne.n	8002316 <HAL_ADC_ConfigChannel+0x23a>
 80022d0:	68fb      	ldr	r3, [r7, #12]
 80022d2:	685b      	ldr	r3, [r3, #4]
 80022d4:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80022d8:	68fb      	ldr	r3, [r7, #12]
 80022da:	605a      	str	r2, [r3, #4]
 80022dc:	68fb      	ldr	r3, [r7, #12]
 80022de:	685b      	ldr	r3, [r3, #4]
 80022e0:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80022e4:	68fb      	ldr	r3, [r7, #12]
 80022e6:	605a      	str	r2, [r3, #4]
 80022e8:	683b      	ldr	r3, [r7, #0]
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	4a11      	ldr	r2, [pc, #68]	@ (8002334 <HAL_ADC_ConfigChannel+0x258>)
 80022ee:	4293      	cmp	r3, r2
 80022f0:	d111      	bne.n	8002316 <HAL_ADC_ConfigChannel+0x23a>
 80022f2:	4b11      	ldr	r3, [pc, #68]	@ (8002338 <HAL_ADC_ConfigChannel+0x25c>)
 80022f4:	681b      	ldr	r3, [r3, #0]
 80022f6:	4a11      	ldr	r2, [pc, #68]	@ (800233c <HAL_ADC_ConfigChannel+0x260>)
 80022f8:	fba2 2303 	umull	r2, r3, r2, r3
 80022fc:	0c9a      	lsrs	r2, r3, #18
 80022fe:	4613      	mov	r3, r2
 8002300:	009b      	lsls	r3, r3, #2
 8002302:	4413      	add	r3, r2
 8002304:	005b      	lsls	r3, r3, #1
 8002306:	60bb      	str	r3, [r7, #8]
 8002308:	e002      	b.n	8002310 <HAL_ADC_ConfigChannel+0x234>
 800230a:	68bb      	ldr	r3, [r7, #8]
 800230c:	3b01      	subs	r3, #1
 800230e:	60bb      	str	r3, [r7, #8]
 8002310:	68bb      	ldr	r3, [r7, #8]
 8002312:	2b00      	cmp	r3, #0
 8002314:	d1f9      	bne.n	800230a <HAL_ADC_ConfigChannel+0x22e>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	2200      	movs	r2, #0
 800231a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800231e:	2300      	movs	r3, #0
 8002320:	4618      	mov	r0, r3
 8002322:	3714      	adds	r7, #20
 8002324:	46bd      	mov	sp, r7
 8002326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800232a:	4770      	bx	lr
 800232c:	40012300 	.word	0x40012300
 8002330:	40012000 	.word	0x40012000
 8002334:	10000012 	.word	0x10000012
 8002338:	20000000 	.word	0x20000000
 800233c:	431bde83 	.word	0x431bde83

08002340 <ADC_Init>:
 8002340:	b480      	push	{r7}
 8002342:	b085      	sub	sp, #20
 8002344:	af00      	add	r7, sp, #0
 8002346:	6078      	str	r0, [r7, #4]
 8002348:	4b79      	ldr	r3, [pc, #484]	@ (8002530 <ADC_Init+0x1f0>)
 800234a:	60fb      	str	r3, [r7, #12]
 800234c:	68fb      	ldr	r3, [r7, #12]
 800234e:	685b      	ldr	r3, [r3, #4]
 8002350:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	605a      	str	r2, [r3, #4]
 8002358:	68fb      	ldr	r3, [r7, #12]
 800235a:	685a      	ldr	r2, [r3, #4]
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	685b      	ldr	r3, [r3, #4]
 8002360:	431a      	orrs	r2, r3
 8002362:	68fb      	ldr	r3, [r7, #12]
 8002364:	605a      	str	r2, [r3, #4]
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	685a      	ldr	r2, [r3, #4]
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002374:	605a      	str	r2, [r3, #4]
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	681b      	ldr	r3, [r3, #0]
 800237a:	6859      	ldr	r1, [r3, #4]
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	691b      	ldr	r3, [r3, #16]
 8002380:	021a      	lsls	r2, r3, #8
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	430a      	orrs	r2, r1
 8002388:	605a      	str	r2, [r3, #4]
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	681b      	ldr	r3, [r3, #0]
 800238e:	685a      	ldr	r2, [r3, #4]
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	681b      	ldr	r3, [r3, #0]
 8002394:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8002398:	605a      	str	r2, [r3, #4]
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	6859      	ldr	r1, [r3, #4]
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	689a      	ldr	r2, [r3, #8]
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	430a      	orrs	r2, r1
 80023aa:	605a      	str	r2, [r3, #4]
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	689a      	ldr	r2, [r3, #8]
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80023ba:	609a      	str	r2, [r3, #8]
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	6899      	ldr	r1, [r3, #8]
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	68da      	ldr	r2, [r3, #12]
 80023c6:	687b      	ldr	r3, [r7, #4]
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	430a      	orrs	r2, r1
 80023cc:	609a      	str	r2, [r3, #8]
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80023d2:	4a58      	ldr	r2, [pc, #352]	@ (8002534 <ADC_Init+0x1f4>)
 80023d4:	4293      	cmp	r3, r2
 80023d6:	d022      	beq.n	800241e <ADC_Init+0xde>
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	689a      	ldr	r2, [r3, #8]
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80023e6:	609a      	str	r2, [r3, #8]
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	681b      	ldr	r3, [r3, #0]
 80023ec:	6899      	ldr	r1, [r3, #8]
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	430a      	orrs	r2, r1
 80023f8:	609a      	str	r2, [r3, #8]
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	681b      	ldr	r3, [r3, #0]
 80023fe:	689a      	ldr	r2, [r3, #8]
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002408:	609a      	str	r2, [r3, #8]
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	6899      	ldr	r1, [r3, #8]
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	430a      	orrs	r2, r1
 800241a:	609a      	str	r2, [r3, #8]
 800241c:	e00f      	b.n	800243e <ADC_Init+0xfe>
 800241e:	687b      	ldr	r3, [r7, #4]
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	689a      	ldr	r2, [r3, #8]
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	681b      	ldr	r3, [r3, #0]
 8002428:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800242c:	609a      	str	r2, [r3, #8]
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	689a      	ldr	r2, [r3, #8]
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800243c:	609a      	str	r2, [r3, #8]
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	689a      	ldr	r2, [r3, #8]
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	f022 0202 	bic.w	r2, r2, #2
 800244c:	609a      	str	r2, [r3, #8]
 800244e:	687b      	ldr	r3, [r7, #4]
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	6899      	ldr	r1, [r3, #8]
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	7e1b      	ldrb	r3, [r3, #24]
 8002458:	005a      	lsls	r2, r3, #1
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	681b      	ldr	r3, [r3, #0]
 800245e:	430a      	orrs	r2, r1
 8002460:	609a      	str	r2, [r3, #8]
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002468:	2b00      	cmp	r3, #0
 800246a:	d01b      	beq.n	80024a4 <ADC_Init+0x164>
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	685a      	ldr	r2, [r3, #4]
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	681b      	ldr	r3, [r3, #0]
 8002476:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800247a:	605a      	str	r2, [r3, #4]
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	685a      	ldr	r2, [r3, #4]
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	681b      	ldr	r3, [r3, #0]
 8002486:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800248a:	605a      	str	r2, [r3, #4]
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	6859      	ldr	r1, [r3, #4]
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002496:	3b01      	subs	r3, #1
 8002498:	035a      	lsls	r2, r3, #13
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	430a      	orrs	r2, r1
 80024a0:	605a      	str	r2, [r3, #4]
 80024a2:	e007      	b.n	80024b4 <ADC_Init+0x174>
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	685a      	ldr	r2, [r3, #4]
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80024b2:	605a      	str	r2, [r3, #4]
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80024c2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	681b      	ldr	r3, [r3, #0]
 80024c8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	69db      	ldr	r3, [r3, #28]
 80024ce:	3b01      	subs	r3, #1
 80024d0:	051a      	lsls	r2, r3, #20
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	430a      	orrs	r2, r1
 80024d8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	689a      	ldr	r2, [r3, #8]
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80024e8:	609a      	str	r2, [r3, #8]
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	6899      	ldr	r1, [r3, #8]
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80024f6:	025a      	lsls	r2, r3, #9
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	430a      	orrs	r2, r1
 80024fe:	609a      	str	r2, [r3, #8]
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	689a      	ldr	r2, [r3, #8]
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800250e:	609a      	str	r2, [r3, #8]
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	6899      	ldr	r1, [r3, #8]
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	695b      	ldr	r3, [r3, #20]
 800251a:	029a      	lsls	r2, r3, #10
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	681b      	ldr	r3, [r3, #0]
 8002520:	430a      	orrs	r2, r1
 8002522:	609a      	str	r2, [r3, #8]
 8002524:	bf00      	nop
 8002526:	3714      	adds	r7, #20
 8002528:	46bd      	mov	sp, r7
 800252a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800252e:	4770      	bx	lr
 8002530:	40012300 	.word	0x40012300
 8002534:	0f000001 	.word	0x0f000001

08002538 <__NVIC_SetPriorityGrouping>:
 8002538:	b480      	push	{r7}
 800253a:	b085      	sub	sp, #20
 800253c:	af00      	add	r7, sp, #0
 800253e:	6078      	str	r0, [r7, #4]
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	f003 0307 	and.w	r3, r3, #7
 8002546:	60fb      	str	r3, [r7, #12]
 8002548:	4b0c      	ldr	r3, [pc, #48]	@ (800257c <__NVIC_SetPriorityGrouping+0x44>)
 800254a:	68db      	ldr	r3, [r3, #12]
 800254c:	60bb      	str	r3, [r7, #8]
 800254e:	68ba      	ldr	r2, [r7, #8]
 8002550:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002554:	4013      	ands	r3, r2
 8002556:	60bb      	str	r3, [r7, #8]
 8002558:	68fb      	ldr	r3, [r7, #12]
 800255a:	021a      	lsls	r2, r3, #8
 800255c:	68bb      	ldr	r3, [r7, #8]
 800255e:	4313      	orrs	r3, r2
 8002560:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002564:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002568:	60bb      	str	r3, [r7, #8]
 800256a:	4a04      	ldr	r2, [pc, #16]	@ (800257c <__NVIC_SetPriorityGrouping+0x44>)
 800256c:	68bb      	ldr	r3, [r7, #8]
 800256e:	60d3      	str	r3, [r2, #12]
 8002570:	bf00      	nop
 8002572:	3714      	adds	r7, #20
 8002574:	46bd      	mov	sp, r7
 8002576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800257a:	4770      	bx	lr
 800257c:	e000ed00 	.word	0xe000ed00

08002580 <__NVIC_GetPriorityGrouping>:
 8002580:	b480      	push	{r7}
 8002582:	af00      	add	r7, sp, #0
 8002584:	4b04      	ldr	r3, [pc, #16]	@ (8002598 <__NVIC_GetPriorityGrouping+0x18>)
 8002586:	68db      	ldr	r3, [r3, #12]
 8002588:	0a1b      	lsrs	r3, r3, #8
 800258a:	f003 0307 	and.w	r3, r3, #7
 800258e:	4618      	mov	r0, r3
 8002590:	46bd      	mov	sp, r7
 8002592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002596:	4770      	bx	lr
 8002598:	e000ed00 	.word	0xe000ed00

0800259c <__NVIC_SetPriority>:
 800259c:	b480      	push	{r7}
 800259e:	b083      	sub	sp, #12
 80025a0:	af00      	add	r7, sp, #0
 80025a2:	4603      	mov	r3, r0
 80025a4:	6039      	str	r1, [r7, #0]
 80025a6:	71fb      	strb	r3, [r7, #7]
 80025a8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80025ac:	2b00      	cmp	r3, #0
 80025ae:	db0a      	blt.n	80025c6 <__NVIC_SetPriority+0x2a>
 80025b0:	683b      	ldr	r3, [r7, #0]
 80025b2:	b2da      	uxtb	r2, r3
 80025b4:	490c      	ldr	r1, [pc, #48]	@ (80025e8 <__NVIC_SetPriority+0x4c>)
 80025b6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80025ba:	0112      	lsls	r2, r2, #4
 80025bc:	b2d2      	uxtb	r2, r2
 80025be:	440b      	add	r3, r1
 80025c0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80025c4:	e00a      	b.n	80025dc <__NVIC_SetPriority+0x40>
 80025c6:	683b      	ldr	r3, [r7, #0]
 80025c8:	b2da      	uxtb	r2, r3
 80025ca:	4908      	ldr	r1, [pc, #32]	@ (80025ec <__NVIC_SetPriority+0x50>)
 80025cc:	79fb      	ldrb	r3, [r7, #7]
 80025ce:	f003 030f 	and.w	r3, r3, #15
 80025d2:	3b04      	subs	r3, #4
 80025d4:	0112      	lsls	r2, r2, #4
 80025d6:	b2d2      	uxtb	r2, r2
 80025d8:	440b      	add	r3, r1
 80025da:	761a      	strb	r2, [r3, #24]
 80025dc:	bf00      	nop
 80025de:	370c      	adds	r7, #12
 80025e0:	46bd      	mov	sp, r7
 80025e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025e6:	4770      	bx	lr
 80025e8:	e000e100 	.word	0xe000e100
 80025ec:	e000ed00 	.word	0xe000ed00

080025f0 <NVIC_EncodePriority>:
 80025f0:	b480      	push	{r7}
 80025f2:	b089      	sub	sp, #36	@ 0x24
 80025f4:	af00      	add	r7, sp, #0
 80025f6:	60f8      	str	r0, [r7, #12]
 80025f8:	60b9      	str	r1, [r7, #8]
 80025fa:	607a      	str	r2, [r7, #4]
 80025fc:	68fb      	ldr	r3, [r7, #12]
 80025fe:	f003 0307 	and.w	r3, r3, #7
 8002602:	61fb      	str	r3, [r7, #28]
 8002604:	69fb      	ldr	r3, [r7, #28]
 8002606:	f1c3 0307 	rsb	r3, r3, #7
 800260a:	2b04      	cmp	r3, #4
 800260c:	bf28      	it	cs
 800260e:	2304      	movcs	r3, #4
 8002610:	61bb      	str	r3, [r7, #24]
 8002612:	69fb      	ldr	r3, [r7, #28]
 8002614:	3304      	adds	r3, #4
 8002616:	2b06      	cmp	r3, #6
 8002618:	d902      	bls.n	8002620 <NVIC_EncodePriority+0x30>
 800261a:	69fb      	ldr	r3, [r7, #28]
 800261c:	3b03      	subs	r3, #3
 800261e:	e000      	b.n	8002622 <NVIC_EncodePriority+0x32>
 8002620:	2300      	movs	r3, #0
 8002622:	617b      	str	r3, [r7, #20]
 8002624:	f04f 32ff 	mov.w	r2, #4294967295
 8002628:	69bb      	ldr	r3, [r7, #24]
 800262a:	fa02 f303 	lsl.w	r3, r2, r3
 800262e:	43da      	mvns	r2, r3
 8002630:	68bb      	ldr	r3, [r7, #8]
 8002632:	401a      	ands	r2, r3
 8002634:	697b      	ldr	r3, [r7, #20]
 8002636:	409a      	lsls	r2, r3
 8002638:	f04f 31ff 	mov.w	r1, #4294967295
 800263c:	697b      	ldr	r3, [r7, #20]
 800263e:	fa01 f303 	lsl.w	r3, r1, r3
 8002642:	43d9      	mvns	r1, r3
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	400b      	ands	r3, r1
 8002648:	4313      	orrs	r3, r2
 800264a:	4618      	mov	r0, r3
 800264c:	3724      	adds	r7, #36	@ 0x24
 800264e:	46bd      	mov	sp, r7
 8002650:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002654:	4770      	bx	lr
	...

08002658 <SysTick_Config>:
 8002658:	b580      	push	{r7, lr}
 800265a:	b082      	sub	sp, #8
 800265c:	af00      	add	r7, sp, #0
 800265e:	6078      	str	r0, [r7, #4]
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	3b01      	subs	r3, #1
 8002664:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002668:	d301      	bcc.n	800266e <SysTick_Config+0x16>
 800266a:	2301      	movs	r3, #1
 800266c:	e00f      	b.n	800268e <SysTick_Config+0x36>
 800266e:	4a0a      	ldr	r2, [pc, #40]	@ (8002698 <SysTick_Config+0x40>)
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	3b01      	subs	r3, #1
 8002674:	6053      	str	r3, [r2, #4]
 8002676:	210f      	movs	r1, #15
 8002678:	f04f 30ff 	mov.w	r0, #4294967295
 800267c:	f7ff ff8e 	bl	800259c <__NVIC_SetPriority>
 8002680:	4b05      	ldr	r3, [pc, #20]	@ (8002698 <SysTick_Config+0x40>)
 8002682:	2200      	movs	r2, #0
 8002684:	609a      	str	r2, [r3, #8]
 8002686:	4b04      	ldr	r3, [pc, #16]	@ (8002698 <SysTick_Config+0x40>)
 8002688:	2207      	movs	r2, #7
 800268a:	601a      	str	r2, [r3, #0]
 800268c:	2300      	movs	r3, #0
 800268e:	4618      	mov	r0, r3
 8002690:	3708      	adds	r7, #8
 8002692:	46bd      	mov	sp, r7
 8002694:	bd80      	pop	{r7, pc}
 8002696:	bf00      	nop
 8002698:	e000e010 	.word	0xe000e010

0800269c <HAL_NVIC_SetPriorityGrouping>:
 800269c:	b580      	push	{r7, lr}
 800269e:	b082      	sub	sp, #8
 80026a0:	af00      	add	r7, sp, #0
 80026a2:	6078      	str	r0, [r7, #4]
 80026a4:	6878      	ldr	r0, [r7, #4]
 80026a6:	f7ff ff47 	bl	8002538 <__NVIC_SetPriorityGrouping>
 80026aa:	bf00      	nop
 80026ac:	3708      	adds	r7, #8
 80026ae:	46bd      	mov	sp, r7
 80026b0:	bd80      	pop	{r7, pc}

080026b2 <HAL_NVIC_SetPriority>:
 80026b2:	b580      	push	{r7, lr}
 80026b4:	b086      	sub	sp, #24
 80026b6:	af00      	add	r7, sp, #0
 80026b8:	4603      	mov	r3, r0
 80026ba:	60b9      	str	r1, [r7, #8]
 80026bc:	607a      	str	r2, [r7, #4]
 80026be:	73fb      	strb	r3, [r7, #15]
 80026c0:	2300      	movs	r3, #0
 80026c2:	617b      	str	r3, [r7, #20]
 80026c4:	f7ff ff5c 	bl	8002580 <__NVIC_GetPriorityGrouping>
 80026c8:	6178      	str	r0, [r7, #20]
 80026ca:	687a      	ldr	r2, [r7, #4]
 80026cc:	68b9      	ldr	r1, [r7, #8]
 80026ce:	6978      	ldr	r0, [r7, #20]
 80026d0:	f7ff ff8e 	bl	80025f0 <NVIC_EncodePriority>
 80026d4:	4602      	mov	r2, r0
 80026d6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80026da:	4611      	mov	r1, r2
 80026dc:	4618      	mov	r0, r3
 80026de:	f7ff ff5d 	bl	800259c <__NVIC_SetPriority>
 80026e2:	bf00      	nop
 80026e4:	3718      	adds	r7, #24
 80026e6:	46bd      	mov	sp, r7
 80026e8:	bd80      	pop	{r7, pc}

080026ea <HAL_SYSTICK_Config>:
 80026ea:	b580      	push	{r7, lr}
 80026ec:	b082      	sub	sp, #8
 80026ee:	af00      	add	r7, sp, #0
 80026f0:	6078      	str	r0, [r7, #4]
 80026f2:	6878      	ldr	r0, [r7, #4]
 80026f4:	f7ff ffb0 	bl	8002658 <SysTick_Config>
 80026f8:	4603      	mov	r3, r0
 80026fa:	4618      	mov	r0, r3
 80026fc:	3708      	adds	r7, #8
 80026fe:	46bd      	mov	sp, r7
 8002700:	bd80      	pop	{r7, pc}
	...

08002704 <HAL_GPIO_Init>:
 8002704:	b480      	push	{r7}
 8002706:	b089      	sub	sp, #36	@ 0x24
 8002708:	af00      	add	r7, sp, #0
 800270a:	6078      	str	r0, [r7, #4]
 800270c:	6039      	str	r1, [r7, #0]
 800270e:	2300      	movs	r3, #0
 8002710:	617b      	str	r3, [r7, #20]
 8002712:	2300      	movs	r3, #0
 8002714:	613b      	str	r3, [r7, #16]
 8002716:	2300      	movs	r3, #0
 8002718:	61bb      	str	r3, [r7, #24]
 800271a:	2300      	movs	r3, #0
 800271c:	61fb      	str	r3, [r7, #28]
 800271e:	e159      	b.n	80029d4 <HAL_GPIO_Init+0x2d0>
 8002720:	2201      	movs	r2, #1
 8002722:	69fb      	ldr	r3, [r7, #28]
 8002724:	fa02 f303 	lsl.w	r3, r2, r3
 8002728:	617b      	str	r3, [r7, #20]
 800272a:	683b      	ldr	r3, [r7, #0]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	697a      	ldr	r2, [r7, #20]
 8002730:	4013      	ands	r3, r2
 8002732:	613b      	str	r3, [r7, #16]
 8002734:	693a      	ldr	r2, [r7, #16]
 8002736:	697b      	ldr	r3, [r7, #20]
 8002738:	429a      	cmp	r2, r3
 800273a:	f040 8148 	bne.w	80029ce <HAL_GPIO_Init+0x2ca>
 800273e:	683b      	ldr	r3, [r7, #0]
 8002740:	685b      	ldr	r3, [r3, #4]
 8002742:	f003 0303 	and.w	r3, r3, #3
 8002746:	2b01      	cmp	r3, #1
 8002748:	d005      	beq.n	8002756 <HAL_GPIO_Init+0x52>
 800274a:	683b      	ldr	r3, [r7, #0]
 800274c:	685b      	ldr	r3, [r3, #4]
 800274e:	f003 0303 	and.w	r3, r3, #3
 8002752:	2b02      	cmp	r3, #2
 8002754:	d130      	bne.n	80027b8 <HAL_GPIO_Init+0xb4>
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	689b      	ldr	r3, [r3, #8]
 800275a:	61bb      	str	r3, [r7, #24]
 800275c:	69fb      	ldr	r3, [r7, #28]
 800275e:	005b      	lsls	r3, r3, #1
 8002760:	2203      	movs	r2, #3
 8002762:	fa02 f303 	lsl.w	r3, r2, r3
 8002766:	43db      	mvns	r3, r3
 8002768:	69ba      	ldr	r2, [r7, #24]
 800276a:	4013      	ands	r3, r2
 800276c:	61bb      	str	r3, [r7, #24]
 800276e:	683b      	ldr	r3, [r7, #0]
 8002770:	68da      	ldr	r2, [r3, #12]
 8002772:	69fb      	ldr	r3, [r7, #28]
 8002774:	005b      	lsls	r3, r3, #1
 8002776:	fa02 f303 	lsl.w	r3, r2, r3
 800277a:	69ba      	ldr	r2, [r7, #24]
 800277c:	4313      	orrs	r3, r2
 800277e:	61bb      	str	r3, [r7, #24]
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	69ba      	ldr	r2, [r7, #24]
 8002784:	609a      	str	r2, [r3, #8]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	685b      	ldr	r3, [r3, #4]
 800278a:	61bb      	str	r3, [r7, #24]
 800278c:	2201      	movs	r2, #1
 800278e:	69fb      	ldr	r3, [r7, #28]
 8002790:	fa02 f303 	lsl.w	r3, r2, r3
 8002794:	43db      	mvns	r3, r3
 8002796:	69ba      	ldr	r2, [r7, #24]
 8002798:	4013      	ands	r3, r2
 800279a:	61bb      	str	r3, [r7, #24]
 800279c:	683b      	ldr	r3, [r7, #0]
 800279e:	685b      	ldr	r3, [r3, #4]
 80027a0:	091b      	lsrs	r3, r3, #4
 80027a2:	f003 0201 	and.w	r2, r3, #1
 80027a6:	69fb      	ldr	r3, [r7, #28]
 80027a8:	fa02 f303 	lsl.w	r3, r2, r3
 80027ac:	69ba      	ldr	r2, [r7, #24]
 80027ae:	4313      	orrs	r3, r2
 80027b0:	61bb      	str	r3, [r7, #24]
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	69ba      	ldr	r2, [r7, #24]
 80027b6:	605a      	str	r2, [r3, #4]
 80027b8:	683b      	ldr	r3, [r7, #0]
 80027ba:	685b      	ldr	r3, [r3, #4]
 80027bc:	f003 0303 	and.w	r3, r3, #3
 80027c0:	2b03      	cmp	r3, #3
 80027c2:	d017      	beq.n	80027f4 <HAL_GPIO_Init+0xf0>
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	68db      	ldr	r3, [r3, #12]
 80027c8:	61bb      	str	r3, [r7, #24]
 80027ca:	69fb      	ldr	r3, [r7, #28]
 80027cc:	005b      	lsls	r3, r3, #1
 80027ce:	2203      	movs	r2, #3
 80027d0:	fa02 f303 	lsl.w	r3, r2, r3
 80027d4:	43db      	mvns	r3, r3
 80027d6:	69ba      	ldr	r2, [r7, #24]
 80027d8:	4013      	ands	r3, r2
 80027da:	61bb      	str	r3, [r7, #24]
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	689a      	ldr	r2, [r3, #8]
 80027e0:	69fb      	ldr	r3, [r7, #28]
 80027e2:	005b      	lsls	r3, r3, #1
 80027e4:	fa02 f303 	lsl.w	r3, r2, r3
 80027e8:	69ba      	ldr	r2, [r7, #24]
 80027ea:	4313      	orrs	r3, r2
 80027ec:	61bb      	str	r3, [r7, #24]
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	69ba      	ldr	r2, [r7, #24]
 80027f2:	60da      	str	r2, [r3, #12]
 80027f4:	683b      	ldr	r3, [r7, #0]
 80027f6:	685b      	ldr	r3, [r3, #4]
 80027f8:	f003 0303 	and.w	r3, r3, #3
 80027fc:	2b02      	cmp	r3, #2
 80027fe:	d123      	bne.n	8002848 <HAL_GPIO_Init+0x144>
 8002800:	69fb      	ldr	r3, [r7, #28]
 8002802:	08da      	lsrs	r2, r3, #3
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	3208      	adds	r2, #8
 8002808:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800280c:	61bb      	str	r3, [r7, #24]
 800280e:	69fb      	ldr	r3, [r7, #28]
 8002810:	f003 0307 	and.w	r3, r3, #7
 8002814:	009b      	lsls	r3, r3, #2
 8002816:	220f      	movs	r2, #15
 8002818:	fa02 f303 	lsl.w	r3, r2, r3
 800281c:	43db      	mvns	r3, r3
 800281e:	69ba      	ldr	r2, [r7, #24]
 8002820:	4013      	ands	r3, r2
 8002822:	61bb      	str	r3, [r7, #24]
 8002824:	683b      	ldr	r3, [r7, #0]
 8002826:	691a      	ldr	r2, [r3, #16]
 8002828:	69fb      	ldr	r3, [r7, #28]
 800282a:	f003 0307 	and.w	r3, r3, #7
 800282e:	009b      	lsls	r3, r3, #2
 8002830:	fa02 f303 	lsl.w	r3, r2, r3
 8002834:	69ba      	ldr	r2, [r7, #24]
 8002836:	4313      	orrs	r3, r2
 8002838:	61bb      	str	r3, [r7, #24]
 800283a:	69fb      	ldr	r3, [r7, #28]
 800283c:	08da      	lsrs	r2, r3, #3
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	3208      	adds	r2, #8
 8002842:	69b9      	ldr	r1, [r7, #24]
 8002844:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	61bb      	str	r3, [r7, #24]
 800284e:	69fb      	ldr	r3, [r7, #28]
 8002850:	005b      	lsls	r3, r3, #1
 8002852:	2203      	movs	r2, #3
 8002854:	fa02 f303 	lsl.w	r3, r2, r3
 8002858:	43db      	mvns	r3, r3
 800285a:	69ba      	ldr	r2, [r7, #24]
 800285c:	4013      	ands	r3, r2
 800285e:	61bb      	str	r3, [r7, #24]
 8002860:	683b      	ldr	r3, [r7, #0]
 8002862:	685b      	ldr	r3, [r3, #4]
 8002864:	f003 0203 	and.w	r2, r3, #3
 8002868:	69fb      	ldr	r3, [r7, #28]
 800286a:	005b      	lsls	r3, r3, #1
 800286c:	fa02 f303 	lsl.w	r3, r2, r3
 8002870:	69ba      	ldr	r2, [r7, #24]
 8002872:	4313      	orrs	r3, r2
 8002874:	61bb      	str	r3, [r7, #24]
 8002876:	687b      	ldr	r3, [r7, #4]
 8002878:	69ba      	ldr	r2, [r7, #24]
 800287a:	601a      	str	r2, [r3, #0]
 800287c:	683b      	ldr	r3, [r7, #0]
 800287e:	685b      	ldr	r3, [r3, #4]
 8002880:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002884:	2b00      	cmp	r3, #0
 8002886:	f000 80a2 	beq.w	80029ce <HAL_GPIO_Init+0x2ca>
 800288a:	2300      	movs	r3, #0
 800288c:	60fb      	str	r3, [r7, #12]
 800288e:	4b57      	ldr	r3, [pc, #348]	@ (80029ec <HAL_GPIO_Init+0x2e8>)
 8002890:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002892:	4a56      	ldr	r2, [pc, #344]	@ (80029ec <HAL_GPIO_Init+0x2e8>)
 8002894:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002898:	6453      	str	r3, [r2, #68]	@ 0x44
 800289a:	4b54      	ldr	r3, [pc, #336]	@ (80029ec <HAL_GPIO_Init+0x2e8>)
 800289c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800289e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80028a2:	60fb      	str	r3, [r7, #12]
 80028a4:	68fb      	ldr	r3, [r7, #12]
 80028a6:	4a52      	ldr	r2, [pc, #328]	@ (80029f0 <HAL_GPIO_Init+0x2ec>)
 80028a8:	69fb      	ldr	r3, [r7, #28]
 80028aa:	089b      	lsrs	r3, r3, #2
 80028ac:	3302      	adds	r3, #2
 80028ae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80028b2:	61bb      	str	r3, [r7, #24]
 80028b4:	69fb      	ldr	r3, [r7, #28]
 80028b6:	f003 0303 	and.w	r3, r3, #3
 80028ba:	009b      	lsls	r3, r3, #2
 80028bc:	220f      	movs	r2, #15
 80028be:	fa02 f303 	lsl.w	r3, r2, r3
 80028c2:	43db      	mvns	r3, r3
 80028c4:	69ba      	ldr	r2, [r7, #24]
 80028c6:	4013      	ands	r3, r2
 80028c8:	61bb      	str	r3, [r7, #24]
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	4a49      	ldr	r2, [pc, #292]	@ (80029f4 <HAL_GPIO_Init+0x2f0>)
 80028ce:	4293      	cmp	r3, r2
 80028d0:	d019      	beq.n	8002906 <HAL_GPIO_Init+0x202>
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	4a48      	ldr	r2, [pc, #288]	@ (80029f8 <HAL_GPIO_Init+0x2f4>)
 80028d6:	4293      	cmp	r3, r2
 80028d8:	d013      	beq.n	8002902 <HAL_GPIO_Init+0x1fe>
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	4a47      	ldr	r2, [pc, #284]	@ (80029fc <HAL_GPIO_Init+0x2f8>)
 80028de:	4293      	cmp	r3, r2
 80028e0:	d00d      	beq.n	80028fe <HAL_GPIO_Init+0x1fa>
 80028e2:	687b      	ldr	r3, [r7, #4]
 80028e4:	4a46      	ldr	r2, [pc, #280]	@ (8002a00 <HAL_GPIO_Init+0x2fc>)
 80028e6:	4293      	cmp	r3, r2
 80028e8:	d007      	beq.n	80028fa <HAL_GPIO_Init+0x1f6>
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	4a45      	ldr	r2, [pc, #276]	@ (8002a04 <HAL_GPIO_Init+0x300>)
 80028ee:	4293      	cmp	r3, r2
 80028f0:	d101      	bne.n	80028f6 <HAL_GPIO_Init+0x1f2>
 80028f2:	2304      	movs	r3, #4
 80028f4:	e008      	b.n	8002908 <HAL_GPIO_Init+0x204>
 80028f6:	2307      	movs	r3, #7
 80028f8:	e006      	b.n	8002908 <HAL_GPIO_Init+0x204>
 80028fa:	2303      	movs	r3, #3
 80028fc:	e004      	b.n	8002908 <HAL_GPIO_Init+0x204>
 80028fe:	2302      	movs	r3, #2
 8002900:	e002      	b.n	8002908 <HAL_GPIO_Init+0x204>
 8002902:	2301      	movs	r3, #1
 8002904:	e000      	b.n	8002908 <HAL_GPIO_Init+0x204>
 8002906:	2300      	movs	r3, #0
 8002908:	69fa      	ldr	r2, [r7, #28]
 800290a:	f002 0203 	and.w	r2, r2, #3
 800290e:	0092      	lsls	r2, r2, #2
 8002910:	4093      	lsls	r3, r2
 8002912:	69ba      	ldr	r2, [r7, #24]
 8002914:	4313      	orrs	r3, r2
 8002916:	61bb      	str	r3, [r7, #24]
 8002918:	4935      	ldr	r1, [pc, #212]	@ (80029f0 <HAL_GPIO_Init+0x2ec>)
 800291a:	69fb      	ldr	r3, [r7, #28]
 800291c:	089b      	lsrs	r3, r3, #2
 800291e:	3302      	adds	r3, #2
 8002920:	69ba      	ldr	r2, [r7, #24]
 8002922:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002926:	4b38      	ldr	r3, [pc, #224]	@ (8002a08 <HAL_GPIO_Init+0x304>)
 8002928:	689b      	ldr	r3, [r3, #8]
 800292a:	61bb      	str	r3, [r7, #24]
 800292c:	693b      	ldr	r3, [r7, #16]
 800292e:	43db      	mvns	r3, r3
 8002930:	69ba      	ldr	r2, [r7, #24]
 8002932:	4013      	ands	r3, r2
 8002934:	61bb      	str	r3, [r7, #24]
 8002936:	683b      	ldr	r3, [r7, #0]
 8002938:	685b      	ldr	r3, [r3, #4]
 800293a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800293e:	2b00      	cmp	r3, #0
 8002940:	d003      	beq.n	800294a <HAL_GPIO_Init+0x246>
 8002942:	69ba      	ldr	r2, [r7, #24]
 8002944:	693b      	ldr	r3, [r7, #16]
 8002946:	4313      	orrs	r3, r2
 8002948:	61bb      	str	r3, [r7, #24]
 800294a:	4a2f      	ldr	r2, [pc, #188]	@ (8002a08 <HAL_GPIO_Init+0x304>)
 800294c:	69bb      	ldr	r3, [r7, #24]
 800294e:	6093      	str	r3, [r2, #8]
 8002950:	4b2d      	ldr	r3, [pc, #180]	@ (8002a08 <HAL_GPIO_Init+0x304>)
 8002952:	68db      	ldr	r3, [r3, #12]
 8002954:	61bb      	str	r3, [r7, #24]
 8002956:	693b      	ldr	r3, [r7, #16]
 8002958:	43db      	mvns	r3, r3
 800295a:	69ba      	ldr	r2, [r7, #24]
 800295c:	4013      	ands	r3, r2
 800295e:	61bb      	str	r3, [r7, #24]
 8002960:	683b      	ldr	r3, [r7, #0]
 8002962:	685b      	ldr	r3, [r3, #4]
 8002964:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002968:	2b00      	cmp	r3, #0
 800296a:	d003      	beq.n	8002974 <HAL_GPIO_Init+0x270>
 800296c:	69ba      	ldr	r2, [r7, #24]
 800296e:	693b      	ldr	r3, [r7, #16]
 8002970:	4313      	orrs	r3, r2
 8002972:	61bb      	str	r3, [r7, #24]
 8002974:	4a24      	ldr	r2, [pc, #144]	@ (8002a08 <HAL_GPIO_Init+0x304>)
 8002976:	69bb      	ldr	r3, [r7, #24]
 8002978:	60d3      	str	r3, [r2, #12]
 800297a:	4b23      	ldr	r3, [pc, #140]	@ (8002a08 <HAL_GPIO_Init+0x304>)
 800297c:	685b      	ldr	r3, [r3, #4]
 800297e:	61bb      	str	r3, [r7, #24]
 8002980:	693b      	ldr	r3, [r7, #16]
 8002982:	43db      	mvns	r3, r3
 8002984:	69ba      	ldr	r2, [r7, #24]
 8002986:	4013      	ands	r3, r2
 8002988:	61bb      	str	r3, [r7, #24]
 800298a:	683b      	ldr	r3, [r7, #0]
 800298c:	685b      	ldr	r3, [r3, #4]
 800298e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002992:	2b00      	cmp	r3, #0
 8002994:	d003      	beq.n	800299e <HAL_GPIO_Init+0x29a>
 8002996:	69ba      	ldr	r2, [r7, #24]
 8002998:	693b      	ldr	r3, [r7, #16]
 800299a:	4313      	orrs	r3, r2
 800299c:	61bb      	str	r3, [r7, #24]
 800299e:	4a1a      	ldr	r2, [pc, #104]	@ (8002a08 <HAL_GPIO_Init+0x304>)
 80029a0:	69bb      	ldr	r3, [r7, #24]
 80029a2:	6053      	str	r3, [r2, #4]
 80029a4:	4b18      	ldr	r3, [pc, #96]	@ (8002a08 <HAL_GPIO_Init+0x304>)
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	61bb      	str	r3, [r7, #24]
 80029aa:	693b      	ldr	r3, [r7, #16]
 80029ac:	43db      	mvns	r3, r3
 80029ae:	69ba      	ldr	r2, [r7, #24]
 80029b0:	4013      	ands	r3, r2
 80029b2:	61bb      	str	r3, [r7, #24]
 80029b4:	683b      	ldr	r3, [r7, #0]
 80029b6:	685b      	ldr	r3, [r3, #4]
 80029b8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80029bc:	2b00      	cmp	r3, #0
 80029be:	d003      	beq.n	80029c8 <HAL_GPIO_Init+0x2c4>
 80029c0:	69ba      	ldr	r2, [r7, #24]
 80029c2:	693b      	ldr	r3, [r7, #16]
 80029c4:	4313      	orrs	r3, r2
 80029c6:	61bb      	str	r3, [r7, #24]
 80029c8:	4a0f      	ldr	r2, [pc, #60]	@ (8002a08 <HAL_GPIO_Init+0x304>)
 80029ca:	69bb      	ldr	r3, [r7, #24]
 80029cc:	6013      	str	r3, [r2, #0]
 80029ce:	69fb      	ldr	r3, [r7, #28]
 80029d0:	3301      	adds	r3, #1
 80029d2:	61fb      	str	r3, [r7, #28]
 80029d4:	69fb      	ldr	r3, [r7, #28]
 80029d6:	2b0f      	cmp	r3, #15
 80029d8:	f67f aea2 	bls.w	8002720 <HAL_GPIO_Init+0x1c>
 80029dc:	bf00      	nop
 80029de:	bf00      	nop
 80029e0:	3724      	adds	r7, #36	@ 0x24
 80029e2:	46bd      	mov	sp, r7
 80029e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029e8:	4770      	bx	lr
 80029ea:	bf00      	nop
 80029ec:	40023800 	.word	0x40023800
 80029f0:	40013800 	.word	0x40013800
 80029f4:	40020000 	.word	0x40020000
 80029f8:	40020400 	.word	0x40020400
 80029fc:	40020800 	.word	0x40020800
 8002a00:	40020c00 	.word	0x40020c00
 8002a04:	40021000 	.word	0x40021000
 8002a08:	40013c00 	.word	0x40013c00

08002a0c <HAL_GPIO_WritePin>:
 8002a0c:	b480      	push	{r7}
 8002a0e:	b083      	sub	sp, #12
 8002a10:	af00      	add	r7, sp, #0
 8002a12:	6078      	str	r0, [r7, #4]
 8002a14:	460b      	mov	r3, r1
 8002a16:	807b      	strh	r3, [r7, #2]
 8002a18:	4613      	mov	r3, r2
 8002a1a:	707b      	strb	r3, [r7, #1]
 8002a1c:	787b      	ldrb	r3, [r7, #1]
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d003      	beq.n	8002a2a <HAL_GPIO_WritePin+0x1e>
 8002a22:	887a      	ldrh	r2, [r7, #2]
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	619a      	str	r2, [r3, #24]
 8002a28:	e003      	b.n	8002a32 <HAL_GPIO_WritePin+0x26>
 8002a2a:	887b      	ldrh	r3, [r7, #2]
 8002a2c:	041a      	lsls	r2, r3, #16
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	619a      	str	r2, [r3, #24]
 8002a32:	bf00      	nop
 8002a34:	370c      	adds	r7, #12
 8002a36:	46bd      	mov	sp, r7
 8002a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a3c:	4770      	bx	lr
	...

08002a40 <HAL_RCC_OscConfig>:
 8002a40:	b580      	push	{r7, lr}
 8002a42:	b086      	sub	sp, #24
 8002a44:	af00      	add	r7, sp, #0
 8002a46:	6078      	str	r0, [r7, #4]
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d101      	bne.n	8002a52 <HAL_RCC_OscConfig+0x12>
 8002a4e:	2301      	movs	r3, #1
 8002a50:	e267      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	f003 0301 	and.w	r3, r3, #1
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d075      	beq.n	8002b4a <HAL_RCC_OscConfig+0x10a>
 8002a5e:	4b88      	ldr	r3, [pc, #544]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002a60:	689b      	ldr	r3, [r3, #8]
 8002a62:	f003 030c 	and.w	r3, r3, #12
 8002a66:	2b04      	cmp	r3, #4
 8002a68:	d00c      	beq.n	8002a84 <HAL_RCC_OscConfig+0x44>
 8002a6a:	4b85      	ldr	r3, [pc, #532]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002a6c:	689b      	ldr	r3, [r3, #8]
 8002a6e:	f003 030c 	and.w	r3, r3, #12
 8002a72:	2b08      	cmp	r3, #8
 8002a74:	d112      	bne.n	8002a9c <HAL_RCC_OscConfig+0x5c>
 8002a76:	4b82      	ldr	r3, [pc, #520]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002a78:	685b      	ldr	r3, [r3, #4]
 8002a7a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002a7e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002a82:	d10b      	bne.n	8002a9c <HAL_RCC_OscConfig+0x5c>
 8002a84:	4b7e      	ldr	r3, [pc, #504]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	d05b      	beq.n	8002b48 <HAL_RCC_OscConfig+0x108>
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	685b      	ldr	r3, [r3, #4]
 8002a94:	2b00      	cmp	r3, #0
 8002a96:	d157      	bne.n	8002b48 <HAL_RCC_OscConfig+0x108>
 8002a98:	2301      	movs	r3, #1
 8002a9a:	e242      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	685b      	ldr	r3, [r3, #4]
 8002aa0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002aa4:	d106      	bne.n	8002ab4 <HAL_RCC_OscConfig+0x74>
 8002aa6:	4b76      	ldr	r3, [pc, #472]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	4a75      	ldr	r2, [pc, #468]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002aac:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002ab0:	6013      	str	r3, [r2, #0]
 8002ab2:	e01d      	b.n	8002af0 <HAL_RCC_OscConfig+0xb0>
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	685b      	ldr	r3, [r3, #4]
 8002ab8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002abc:	d10c      	bne.n	8002ad8 <HAL_RCC_OscConfig+0x98>
 8002abe:	4b70      	ldr	r3, [pc, #448]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002ac0:	681b      	ldr	r3, [r3, #0]
 8002ac2:	4a6f      	ldr	r2, [pc, #444]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002ac4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002ac8:	6013      	str	r3, [r2, #0]
 8002aca:	4b6d      	ldr	r3, [pc, #436]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	4a6c      	ldr	r2, [pc, #432]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002ad0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002ad4:	6013      	str	r3, [r2, #0]
 8002ad6:	e00b      	b.n	8002af0 <HAL_RCC_OscConfig+0xb0>
 8002ad8:	4b69      	ldr	r3, [pc, #420]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	4a68      	ldr	r2, [pc, #416]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002ade:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002ae2:	6013      	str	r3, [r2, #0]
 8002ae4:	4b66      	ldr	r3, [pc, #408]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	4a65      	ldr	r2, [pc, #404]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002aea:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002aee:	6013      	str	r3, [r2, #0]
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	685b      	ldr	r3, [r3, #4]
 8002af4:	2b00      	cmp	r3, #0
 8002af6:	d013      	beq.n	8002b20 <HAL_RCC_OscConfig+0xe0>
 8002af8:	f7ff fa7c 	bl	8001ff4 <HAL_GetTick>
 8002afc:	6138      	str	r0, [r7, #16]
 8002afe:	e008      	b.n	8002b12 <HAL_RCC_OscConfig+0xd2>
 8002b00:	f7ff fa78 	bl	8001ff4 <HAL_GetTick>
 8002b04:	4602      	mov	r2, r0
 8002b06:	693b      	ldr	r3, [r7, #16]
 8002b08:	1ad3      	subs	r3, r2, r3
 8002b0a:	2b64      	cmp	r3, #100	@ 0x64
 8002b0c:	d901      	bls.n	8002b12 <HAL_RCC_OscConfig+0xd2>
 8002b0e:	2303      	movs	r3, #3
 8002b10:	e207      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002b12:	4b5b      	ldr	r3, [pc, #364]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002b14:	681b      	ldr	r3, [r3, #0]
 8002b16:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b1a:	2b00      	cmp	r3, #0
 8002b1c:	d0f0      	beq.n	8002b00 <HAL_RCC_OscConfig+0xc0>
 8002b1e:	e014      	b.n	8002b4a <HAL_RCC_OscConfig+0x10a>
 8002b20:	f7ff fa68 	bl	8001ff4 <HAL_GetTick>
 8002b24:	6138      	str	r0, [r7, #16]
 8002b26:	e008      	b.n	8002b3a <HAL_RCC_OscConfig+0xfa>
 8002b28:	f7ff fa64 	bl	8001ff4 <HAL_GetTick>
 8002b2c:	4602      	mov	r2, r0
 8002b2e:	693b      	ldr	r3, [r7, #16]
 8002b30:	1ad3      	subs	r3, r2, r3
 8002b32:	2b64      	cmp	r3, #100	@ 0x64
 8002b34:	d901      	bls.n	8002b3a <HAL_RCC_OscConfig+0xfa>
 8002b36:	2303      	movs	r3, #3
 8002b38:	e1f3      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002b3a:	4b51      	ldr	r3, [pc, #324]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d1f0      	bne.n	8002b28 <HAL_RCC_OscConfig+0xe8>
 8002b46:	e000      	b.n	8002b4a <HAL_RCC_OscConfig+0x10a>
 8002b48:	bf00      	nop
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	f003 0302 	and.w	r3, r3, #2
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	d063      	beq.n	8002c1e <HAL_RCC_OscConfig+0x1de>
 8002b56:	4b4a      	ldr	r3, [pc, #296]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002b58:	689b      	ldr	r3, [r3, #8]
 8002b5a:	f003 030c 	and.w	r3, r3, #12
 8002b5e:	2b00      	cmp	r3, #0
 8002b60:	d00b      	beq.n	8002b7a <HAL_RCC_OscConfig+0x13a>
 8002b62:	4b47      	ldr	r3, [pc, #284]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002b64:	689b      	ldr	r3, [r3, #8]
 8002b66:	f003 030c 	and.w	r3, r3, #12
 8002b6a:	2b08      	cmp	r3, #8
 8002b6c:	d11c      	bne.n	8002ba8 <HAL_RCC_OscConfig+0x168>
 8002b6e:	4b44      	ldr	r3, [pc, #272]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002b70:	685b      	ldr	r3, [r3, #4]
 8002b72:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002b76:	2b00      	cmp	r3, #0
 8002b78:	d116      	bne.n	8002ba8 <HAL_RCC_OscConfig+0x168>
 8002b7a:	4b41      	ldr	r3, [pc, #260]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002b7c:	681b      	ldr	r3, [r3, #0]
 8002b7e:	f003 0302 	and.w	r3, r3, #2
 8002b82:	2b00      	cmp	r3, #0
 8002b84:	d005      	beq.n	8002b92 <HAL_RCC_OscConfig+0x152>
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	68db      	ldr	r3, [r3, #12]
 8002b8a:	2b01      	cmp	r3, #1
 8002b8c:	d001      	beq.n	8002b92 <HAL_RCC_OscConfig+0x152>
 8002b8e:	2301      	movs	r3, #1
 8002b90:	e1c7      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002b92:	4b3b      	ldr	r3, [pc, #236]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002b94:	681b      	ldr	r3, [r3, #0]
 8002b96:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	691b      	ldr	r3, [r3, #16]
 8002b9e:	00db      	lsls	r3, r3, #3
 8002ba0:	4937      	ldr	r1, [pc, #220]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002ba2:	4313      	orrs	r3, r2
 8002ba4:	600b      	str	r3, [r1, #0]
 8002ba6:	e03a      	b.n	8002c1e <HAL_RCC_OscConfig+0x1de>
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	68db      	ldr	r3, [r3, #12]
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d020      	beq.n	8002bf2 <HAL_RCC_OscConfig+0x1b2>
 8002bb0:	4b34      	ldr	r3, [pc, #208]	@ (8002c84 <HAL_RCC_OscConfig+0x244>)
 8002bb2:	2201      	movs	r2, #1
 8002bb4:	601a      	str	r2, [r3, #0]
 8002bb6:	f7ff fa1d 	bl	8001ff4 <HAL_GetTick>
 8002bba:	6138      	str	r0, [r7, #16]
 8002bbc:	e008      	b.n	8002bd0 <HAL_RCC_OscConfig+0x190>
 8002bbe:	f7ff fa19 	bl	8001ff4 <HAL_GetTick>
 8002bc2:	4602      	mov	r2, r0
 8002bc4:	693b      	ldr	r3, [r7, #16]
 8002bc6:	1ad3      	subs	r3, r2, r3
 8002bc8:	2b02      	cmp	r3, #2
 8002bca:	d901      	bls.n	8002bd0 <HAL_RCC_OscConfig+0x190>
 8002bcc:	2303      	movs	r3, #3
 8002bce:	e1a8      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002bd0:	4b2b      	ldr	r3, [pc, #172]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	f003 0302 	and.w	r3, r3, #2
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d0f0      	beq.n	8002bbe <HAL_RCC_OscConfig+0x17e>
 8002bdc:	4b28      	ldr	r3, [pc, #160]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	691b      	ldr	r3, [r3, #16]
 8002be8:	00db      	lsls	r3, r3, #3
 8002bea:	4925      	ldr	r1, [pc, #148]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002bec:	4313      	orrs	r3, r2
 8002bee:	600b      	str	r3, [r1, #0]
 8002bf0:	e015      	b.n	8002c1e <HAL_RCC_OscConfig+0x1de>
 8002bf2:	4b24      	ldr	r3, [pc, #144]	@ (8002c84 <HAL_RCC_OscConfig+0x244>)
 8002bf4:	2200      	movs	r2, #0
 8002bf6:	601a      	str	r2, [r3, #0]
 8002bf8:	f7ff f9fc 	bl	8001ff4 <HAL_GetTick>
 8002bfc:	6138      	str	r0, [r7, #16]
 8002bfe:	e008      	b.n	8002c12 <HAL_RCC_OscConfig+0x1d2>
 8002c00:	f7ff f9f8 	bl	8001ff4 <HAL_GetTick>
 8002c04:	4602      	mov	r2, r0
 8002c06:	693b      	ldr	r3, [r7, #16]
 8002c08:	1ad3      	subs	r3, r2, r3
 8002c0a:	2b02      	cmp	r3, #2
 8002c0c:	d901      	bls.n	8002c12 <HAL_RCC_OscConfig+0x1d2>
 8002c0e:	2303      	movs	r3, #3
 8002c10:	e187      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002c12:	4b1b      	ldr	r3, [pc, #108]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	f003 0302 	and.w	r3, r3, #2
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d1f0      	bne.n	8002c00 <HAL_RCC_OscConfig+0x1c0>
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	f003 0308 	and.w	r3, r3, #8
 8002c26:	2b00      	cmp	r3, #0
 8002c28:	d036      	beq.n	8002c98 <HAL_RCC_OscConfig+0x258>
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	695b      	ldr	r3, [r3, #20]
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d016      	beq.n	8002c60 <HAL_RCC_OscConfig+0x220>
 8002c32:	4b15      	ldr	r3, [pc, #84]	@ (8002c88 <HAL_RCC_OscConfig+0x248>)
 8002c34:	2201      	movs	r2, #1
 8002c36:	601a      	str	r2, [r3, #0]
 8002c38:	f7ff f9dc 	bl	8001ff4 <HAL_GetTick>
 8002c3c:	6138      	str	r0, [r7, #16]
 8002c3e:	e008      	b.n	8002c52 <HAL_RCC_OscConfig+0x212>
 8002c40:	f7ff f9d8 	bl	8001ff4 <HAL_GetTick>
 8002c44:	4602      	mov	r2, r0
 8002c46:	693b      	ldr	r3, [r7, #16]
 8002c48:	1ad3      	subs	r3, r2, r3
 8002c4a:	2b02      	cmp	r3, #2
 8002c4c:	d901      	bls.n	8002c52 <HAL_RCC_OscConfig+0x212>
 8002c4e:	2303      	movs	r3, #3
 8002c50:	e167      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002c52:	4b0b      	ldr	r3, [pc, #44]	@ (8002c80 <HAL_RCC_OscConfig+0x240>)
 8002c54:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002c56:	f003 0302 	and.w	r3, r3, #2
 8002c5a:	2b00      	cmp	r3, #0
 8002c5c:	d0f0      	beq.n	8002c40 <HAL_RCC_OscConfig+0x200>
 8002c5e:	e01b      	b.n	8002c98 <HAL_RCC_OscConfig+0x258>
 8002c60:	4b09      	ldr	r3, [pc, #36]	@ (8002c88 <HAL_RCC_OscConfig+0x248>)
 8002c62:	2200      	movs	r2, #0
 8002c64:	601a      	str	r2, [r3, #0]
 8002c66:	f7ff f9c5 	bl	8001ff4 <HAL_GetTick>
 8002c6a:	6138      	str	r0, [r7, #16]
 8002c6c:	e00e      	b.n	8002c8c <HAL_RCC_OscConfig+0x24c>
 8002c6e:	f7ff f9c1 	bl	8001ff4 <HAL_GetTick>
 8002c72:	4602      	mov	r2, r0
 8002c74:	693b      	ldr	r3, [r7, #16]
 8002c76:	1ad3      	subs	r3, r2, r3
 8002c78:	2b02      	cmp	r3, #2
 8002c7a:	d907      	bls.n	8002c8c <HAL_RCC_OscConfig+0x24c>
 8002c7c:	2303      	movs	r3, #3
 8002c7e:	e150      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002c80:	40023800 	.word	0x40023800
 8002c84:	42470000 	.word	0x42470000
 8002c88:	42470e80 	.word	0x42470e80
 8002c8c:	4b88      	ldr	r3, [pc, #544]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002c8e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002c90:	f003 0302 	and.w	r3, r3, #2
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d1ea      	bne.n	8002c6e <HAL_RCC_OscConfig+0x22e>
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	f003 0304 	and.w	r3, r3, #4
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	f000 8097 	beq.w	8002dd4 <HAL_RCC_OscConfig+0x394>
 8002ca6:	2300      	movs	r3, #0
 8002ca8:	75fb      	strb	r3, [r7, #23]
 8002caa:	4b81      	ldr	r3, [pc, #516]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002cac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cae:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002cb2:	2b00      	cmp	r3, #0
 8002cb4:	d10f      	bne.n	8002cd6 <HAL_RCC_OscConfig+0x296>
 8002cb6:	2300      	movs	r3, #0
 8002cb8:	60bb      	str	r3, [r7, #8]
 8002cba:	4b7d      	ldr	r3, [pc, #500]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002cbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cbe:	4a7c      	ldr	r2, [pc, #496]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002cc0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002cc4:	6413      	str	r3, [r2, #64]	@ 0x40
 8002cc6:	4b7a      	ldr	r3, [pc, #488]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002cc8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002cce:	60bb      	str	r3, [r7, #8]
 8002cd0:	68bb      	ldr	r3, [r7, #8]
 8002cd2:	2301      	movs	r3, #1
 8002cd4:	75fb      	strb	r3, [r7, #23]
 8002cd6:	4b77      	ldr	r3, [pc, #476]	@ (8002eb4 <HAL_RCC_OscConfig+0x474>)
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	d118      	bne.n	8002d14 <HAL_RCC_OscConfig+0x2d4>
 8002ce2:	4b74      	ldr	r3, [pc, #464]	@ (8002eb4 <HAL_RCC_OscConfig+0x474>)
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	4a73      	ldr	r2, [pc, #460]	@ (8002eb4 <HAL_RCC_OscConfig+0x474>)
 8002ce8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002cec:	6013      	str	r3, [r2, #0]
 8002cee:	f7ff f981 	bl	8001ff4 <HAL_GetTick>
 8002cf2:	6138      	str	r0, [r7, #16]
 8002cf4:	e008      	b.n	8002d08 <HAL_RCC_OscConfig+0x2c8>
 8002cf6:	f7ff f97d 	bl	8001ff4 <HAL_GetTick>
 8002cfa:	4602      	mov	r2, r0
 8002cfc:	693b      	ldr	r3, [r7, #16]
 8002cfe:	1ad3      	subs	r3, r2, r3
 8002d00:	2b02      	cmp	r3, #2
 8002d02:	d901      	bls.n	8002d08 <HAL_RCC_OscConfig+0x2c8>
 8002d04:	2303      	movs	r3, #3
 8002d06:	e10c      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002d08:	4b6a      	ldr	r3, [pc, #424]	@ (8002eb4 <HAL_RCC_OscConfig+0x474>)
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	d0f0      	beq.n	8002cf6 <HAL_RCC_OscConfig+0x2b6>
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	689b      	ldr	r3, [r3, #8]
 8002d18:	2b01      	cmp	r3, #1
 8002d1a:	d106      	bne.n	8002d2a <HAL_RCC_OscConfig+0x2ea>
 8002d1c:	4b64      	ldr	r3, [pc, #400]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d1e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d20:	4a63      	ldr	r2, [pc, #396]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d22:	f043 0301 	orr.w	r3, r3, #1
 8002d26:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d28:	e01c      	b.n	8002d64 <HAL_RCC_OscConfig+0x324>
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	689b      	ldr	r3, [r3, #8]
 8002d2e:	2b05      	cmp	r3, #5
 8002d30:	d10c      	bne.n	8002d4c <HAL_RCC_OscConfig+0x30c>
 8002d32:	4b5f      	ldr	r3, [pc, #380]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d34:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d36:	4a5e      	ldr	r2, [pc, #376]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d38:	f043 0304 	orr.w	r3, r3, #4
 8002d3c:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d3e:	4b5c      	ldr	r3, [pc, #368]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d40:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d42:	4a5b      	ldr	r2, [pc, #364]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d44:	f043 0301 	orr.w	r3, r3, #1
 8002d48:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d4a:	e00b      	b.n	8002d64 <HAL_RCC_OscConfig+0x324>
 8002d4c:	4b58      	ldr	r3, [pc, #352]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d4e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d50:	4a57      	ldr	r2, [pc, #348]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d52:	f023 0301 	bic.w	r3, r3, #1
 8002d56:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d58:	4b55      	ldr	r3, [pc, #340]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d5a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d5c:	4a54      	ldr	r2, [pc, #336]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d5e:	f023 0304 	bic.w	r3, r3, #4
 8002d62:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	689b      	ldr	r3, [r3, #8]
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	d015      	beq.n	8002d98 <HAL_RCC_OscConfig+0x358>
 8002d6c:	f7ff f942 	bl	8001ff4 <HAL_GetTick>
 8002d70:	6138      	str	r0, [r7, #16]
 8002d72:	e00a      	b.n	8002d8a <HAL_RCC_OscConfig+0x34a>
 8002d74:	f7ff f93e 	bl	8001ff4 <HAL_GetTick>
 8002d78:	4602      	mov	r2, r0
 8002d7a:	693b      	ldr	r3, [r7, #16]
 8002d7c:	1ad3      	subs	r3, r2, r3
 8002d7e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002d82:	4293      	cmp	r3, r2
 8002d84:	d901      	bls.n	8002d8a <HAL_RCC_OscConfig+0x34a>
 8002d86:	2303      	movs	r3, #3
 8002d88:	e0cb      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002d8a:	4b49      	ldr	r3, [pc, #292]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002d8c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d8e:	f003 0302 	and.w	r3, r3, #2
 8002d92:	2b00      	cmp	r3, #0
 8002d94:	d0ee      	beq.n	8002d74 <HAL_RCC_OscConfig+0x334>
 8002d96:	e014      	b.n	8002dc2 <HAL_RCC_OscConfig+0x382>
 8002d98:	f7ff f92c 	bl	8001ff4 <HAL_GetTick>
 8002d9c:	6138      	str	r0, [r7, #16]
 8002d9e:	e00a      	b.n	8002db6 <HAL_RCC_OscConfig+0x376>
 8002da0:	f7ff f928 	bl	8001ff4 <HAL_GetTick>
 8002da4:	4602      	mov	r2, r0
 8002da6:	693b      	ldr	r3, [r7, #16]
 8002da8:	1ad3      	subs	r3, r2, r3
 8002daa:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002dae:	4293      	cmp	r3, r2
 8002db0:	d901      	bls.n	8002db6 <HAL_RCC_OscConfig+0x376>
 8002db2:	2303      	movs	r3, #3
 8002db4:	e0b5      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002db6:	4b3e      	ldr	r3, [pc, #248]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002db8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002dba:	f003 0302 	and.w	r3, r3, #2
 8002dbe:	2b00      	cmp	r3, #0
 8002dc0:	d1ee      	bne.n	8002da0 <HAL_RCC_OscConfig+0x360>
 8002dc2:	7dfb      	ldrb	r3, [r7, #23]
 8002dc4:	2b01      	cmp	r3, #1
 8002dc6:	d105      	bne.n	8002dd4 <HAL_RCC_OscConfig+0x394>
 8002dc8:	4b39      	ldr	r3, [pc, #228]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002dca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dcc:	4a38      	ldr	r2, [pc, #224]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002dce:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002dd2:	6413      	str	r3, [r2, #64]	@ 0x40
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	699b      	ldr	r3, [r3, #24]
 8002dd8:	2b00      	cmp	r3, #0
 8002dda:	f000 80a1 	beq.w	8002f20 <HAL_RCC_OscConfig+0x4e0>
 8002dde:	4b34      	ldr	r3, [pc, #208]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002de0:	689b      	ldr	r3, [r3, #8]
 8002de2:	f003 030c 	and.w	r3, r3, #12
 8002de6:	2b08      	cmp	r3, #8
 8002de8:	d05c      	beq.n	8002ea4 <HAL_RCC_OscConfig+0x464>
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	699b      	ldr	r3, [r3, #24]
 8002dee:	2b02      	cmp	r3, #2
 8002df0:	d141      	bne.n	8002e76 <HAL_RCC_OscConfig+0x436>
 8002df2:	4b31      	ldr	r3, [pc, #196]	@ (8002eb8 <HAL_RCC_OscConfig+0x478>)
 8002df4:	2200      	movs	r2, #0
 8002df6:	601a      	str	r2, [r3, #0]
 8002df8:	f7ff f8fc 	bl	8001ff4 <HAL_GetTick>
 8002dfc:	6138      	str	r0, [r7, #16]
 8002dfe:	e008      	b.n	8002e12 <HAL_RCC_OscConfig+0x3d2>
 8002e00:	f7ff f8f8 	bl	8001ff4 <HAL_GetTick>
 8002e04:	4602      	mov	r2, r0
 8002e06:	693b      	ldr	r3, [r7, #16]
 8002e08:	1ad3      	subs	r3, r2, r3
 8002e0a:	2b02      	cmp	r3, #2
 8002e0c:	d901      	bls.n	8002e12 <HAL_RCC_OscConfig+0x3d2>
 8002e0e:	2303      	movs	r3, #3
 8002e10:	e087      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002e12:	4b27      	ldr	r3, [pc, #156]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d1f0      	bne.n	8002e00 <HAL_RCC_OscConfig+0x3c0>
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	69da      	ldr	r2, [r3, #28]
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	6a1b      	ldr	r3, [r3, #32]
 8002e26:	431a      	orrs	r2, r3
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e2c:	019b      	lsls	r3, r3, #6
 8002e2e:	431a      	orrs	r2, r3
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e34:	085b      	lsrs	r3, r3, #1
 8002e36:	3b01      	subs	r3, #1
 8002e38:	041b      	lsls	r3, r3, #16
 8002e3a:	431a      	orrs	r2, r3
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e40:	061b      	lsls	r3, r3, #24
 8002e42:	491b      	ldr	r1, [pc, #108]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002e44:	4313      	orrs	r3, r2
 8002e46:	604b      	str	r3, [r1, #4]
 8002e48:	4b1b      	ldr	r3, [pc, #108]	@ (8002eb8 <HAL_RCC_OscConfig+0x478>)
 8002e4a:	2201      	movs	r2, #1
 8002e4c:	601a      	str	r2, [r3, #0]
 8002e4e:	f7ff f8d1 	bl	8001ff4 <HAL_GetTick>
 8002e52:	6138      	str	r0, [r7, #16]
 8002e54:	e008      	b.n	8002e68 <HAL_RCC_OscConfig+0x428>
 8002e56:	f7ff f8cd 	bl	8001ff4 <HAL_GetTick>
 8002e5a:	4602      	mov	r2, r0
 8002e5c:	693b      	ldr	r3, [r7, #16]
 8002e5e:	1ad3      	subs	r3, r2, r3
 8002e60:	2b02      	cmp	r3, #2
 8002e62:	d901      	bls.n	8002e68 <HAL_RCC_OscConfig+0x428>
 8002e64:	2303      	movs	r3, #3
 8002e66:	e05c      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002e68:	4b11      	ldr	r3, [pc, #68]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002e70:	2b00      	cmp	r3, #0
 8002e72:	d0f0      	beq.n	8002e56 <HAL_RCC_OscConfig+0x416>
 8002e74:	e054      	b.n	8002f20 <HAL_RCC_OscConfig+0x4e0>
 8002e76:	4b10      	ldr	r3, [pc, #64]	@ (8002eb8 <HAL_RCC_OscConfig+0x478>)
 8002e78:	2200      	movs	r2, #0
 8002e7a:	601a      	str	r2, [r3, #0]
 8002e7c:	f7ff f8ba 	bl	8001ff4 <HAL_GetTick>
 8002e80:	6138      	str	r0, [r7, #16]
 8002e82:	e008      	b.n	8002e96 <HAL_RCC_OscConfig+0x456>
 8002e84:	f7ff f8b6 	bl	8001ff4 <HAL_GetTick>
 8002e88:	4602      	mov	r2, r0
 8002e8a:	693b      	ldr	r3, [r7, #16]
 8002e8c:	1ad3      	subs	r3, r2, r3
 8002e8e:	2b02      	cmp	r3, #2
 8002e90:	d901      	bls.n	8002e96 <HAL_RCC_OscConfig+0x456>
 8002e92:	2303      	movs	r3, #3
 8002e94:	e045      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002e96:	4b06      	ldr	r3, [pc, #24]	@ (8002eb0 <HAL_RCC_OscConfig+0x470>)
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002e9e:	2b00      	cmp	r3, #0
 8002ea0:	d1f0      	bne.n	8002e84 <HAL_RCC_OscConfig+0x444>
 8002ea2:	e03d      	b.n	8002f20 <HAL_RCC_OscConfig+0x4e0>
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	699b      	ldr	r3, [r3, #24]
 8002ea8:	2b01      	cmp	r3, #1
 8002eaa:	d107      	bne.n	8002ebc <HAL_RCC_OscConfig+0x47c>
 8002eac:	2301      	movs	r3, #1
 8002eae:	e038      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002eb0:	40023800 	.word	0x40023800
 8002eb4:	40007000 	.word	0x40007000
 8002eb8:	42470060 	.word	0x42470060
 8002ebc:	4b1b      	ldr	r3, [pc, #108]	@ (8002f2c <HAL_RCC_OscConfig+0x4ec>)
 8002ebe:	685b      	ldr	r3, [r3, #4]
 8002ec0:	60fb      	str	r3, [r7, #12]
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	699b      	ldr	r3, [r3, #24]
 8002ec6:	2b01      	cmp	r3, #1
 8002ec8:	d028      	beq.n	8002f1c <HAL_RCC_OscConfig+0x4dc>
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8002ed0:	687b      	ldr	r3, [r7, #4]
 8002ed2:	69db      	ldr	r3, [r3, #28]
 8002ed4:	429a      	cmp	r2, r3
 8002ed6:	d121      	bne.n	8002f1c <HAL_RCC_OscConfig+0x4dc>
 8002ed8:	68fb      	ldr	r3, [r7, #12]
 8002eda:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	6a1b      	ldr	r3, [r3, #32]
 8002ee2:	429a      	cmp	r2, r3
 8002ee4:	d11a      	bne.n	8002f1c <HAL_RCC_OscConfig+0x4dc>
 8002ee6:	68fa      	ldr	r2, [r7, #12]
 8002ee8:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8002eec:	4013      	ands	r3, r2
 8002eee:	687a      	ldr	r2, [r7, #4]
 8002ef0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8002ef2:	0192      	lsls	r2, r2, #6
 8002ef4:	4293      	cmp	r3, r2
 8002ef6:	d111      	bne.n	8002f1c <HAL_RCC_OscConfig+0x4dc>
 8002ef8:	68fb      	ldr	r3, [r7, #12]
 8002efa:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f02:	085b      	lsrs	r3, r3, #1
 8002f04:	3b01      	subs	r3, #1
 8002f06:	041b      	lsls	r3, r3, #16
 8002f08:	429a      	cmp	r2, r3
 8002f0a:	d107      	bne.n	8002f1c <HAL_RCC_OscConfig+0x4dc>
 8002f0c:	68fb      	ldr	r3, [r7, #12]
 8002f0e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002f16:	061b      	lsls	r3, r3, #24
 8002f18:	429a      	cmp	r2, r3
 8002f1a:	d001      	beq.n	8002f20 <HAL_RCC_OscConfig+0x4e0>
 8002f1c:	2301      	movs	r3, #1
 8002f1e:	e000      	b.n	8002f22 <HAL_RCC_OscConfig+0x4e2>
 8002f20:	2300      	movs	r3, #0
 8002f22:	4618      	mov	r0, r3
 8002f24:	3718      	adds	r7, #24
 8002f26:	46bd      	mov	sp, r7
 8002f28:	bd80      	pop	{r7, pc}
 8002f2a:	bf00      	nop
 8002f2c:	40023800 	.word	0x40023800

08002f30 <HAL_RCC_ClockConfig>:
 8002f30:	b580      	push	{r7, lr}
 8002f32:	b084      	sub	sp, #16
 8002f34:	af00      	add	r7, sp, #0
 8002f36:	6078      	str	r0, [r7, #4]
 8002f38:	6039      	str	r1, [r7, #0]
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	2b00      	cmp	r3, #0
 8002f3e:	d101      	bne.n	8002f44 <HAL_RCC_ClockConfig+0x14>
 8002f40:	2301      	movs	r3, #1
 8002f42:	e0cc      	b.n	80030de <HAL_RCC_ClockConfig+0x1ae>
 8002f44:	4b68      	ldr	r3, [pc, #416]	@ (80030e8 <HAL_RCC_ClockConfig+0x1b8>)
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	f003 0307 	and.w	r3, r3, #7
 8002f4c:	683a      	ldr	r2, [r7, #0]
 8002f4e:	429a      	cmp	r2, r3
 8002f50:	d90c      	bls.n	8002f6c <HAL_RCC_ClockConfig+0x3c>
 8002f52:	4b65      	ldr	r3, [pc, #404]	@ (80030e8 <HAL_RCC_ClockConfig+0x1b8>)
 8002f54:	683a      	ldr	r2, [r7, #0]
 8002f56:	b2d2      	uxtb	r2, r2
 8002f58:	701a      	strb	r2, [r3, #0]
 8002f5a:	4b63      	ldr	r3, [pc, #396]	@ (80030e8 <HAL_RCC_ClockConfig+0x1b8>)
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	f003 0307 	and.w	r3, r3, #7
 8002f62:	683a      	ldr	r2, [r7, #0]
 8002f64:	429a      	cmp	r2, r3
 8002f66:	d001      	beq.n	8002f6c <HAL_RCC_ClockConfig+0x3c>
 8002f68:	2301      	movs	r3, #1
 8002f6a:	e0b8      	b.n	80030de <HAL_RCC_ClockConfig+0x1ae>
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	681b      	ldr	r3, [r3, #0]
 8002f70:	f003 0302 	and.w	r3, r3, #2
 8002f74:	2b00      	cmp	r3, #0
 8002f76:	d020      	beq.n	8002fba <HAL_RCC_ClockConfig+0x8a>
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	f003 0304 	and.w	r3, r3, #4
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	d005      	beq.n	8002f90 <HAL_RCC_ClockConfig+0x60>
 8002f84:	4b59      	ldr	r3, [pc, #356]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8002f86:	689b      	ldr	r3, [r3, #8]
 8002f88:	4a58      	ldr	r2, [pc, #352]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8002f8a:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002f8e:	6093      	str	r3, [r2, #8]
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	f003 0308 	and.w	r3, r3, #8
 8002f98:	2b00      	cmp	r3, #0
 8002f9a:	d005      	beq.n	8002fa8 <HAL_RCC_ClockConfig+0x78>
 8002f9c:	4b53      	ldr	r3, [pc, #332]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8002f9e:	689b      	ldr	r3, [r3, #8]
 8002fa0:	4a52      	ldr	r2, [pc, #328]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8002fa2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8002fa6:	6093      	str	r3, [r2, #8]
 8002fa8:	4b50      	ldr	r3, [pc, #320]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8002faa:	689b      	ldr	r3, [r3, #8]
 8002fac:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	689b      	ldr	r3, [r3, #8]
 8002fb4:	494d      	ldr	r1, [pc, #308]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8002fb6:	4313      	orrs	r3, r2
 8002fb8:	608b      	str	r3, [r1, #8]
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	f003 0301 	and.w	r3, r3, #1
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d044      	beq.n	8003050 <HAL_RCC_ClockConfig+0x120>
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	685b      	ldr	r3, [r3, #4]
 8002fca:	2b01      	cmp	r3, #1
 8002fcc:	d107      	bne.n	8002fde <HAL_RCC_ClockConfig+0xae>
 8002fce:	4b47      	ldr	r3, [pc, #284]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002fd6:	2b00      	cmp	r3, #0
 8002fd8:	d119      	bne.n	800300e <HAL_RCC_ClockConfig+0xde>
 8002fda:	2301      	movs	r3, #1
 8002fdc:	e07f      	b.n	80030de <HAL_RCC_ClockConfig+0x1ae>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	685b      	ldr	r3, [r3, #4]
 8002fe2:	2b02      	cmp	r3, #2
 8002fe4:	d003      	beq.n	8002fee <HAL_RCC_ClockConfig+0xbe>
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	685b      	ldr	r3, [r3, #4]
 8002fea:	2b03      	cmp	r3, #3
 8002fec:	d107      	bne.n	8002ffe <HAL_RCC_ClockConfig+0xce>
 8002fee:	4b3f      	ldr	r3, [pc, #252]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002ff6:	2b00      	cmp	r3, #0
 8002ff8:	d109      	bne.n	800300e <HAL_RCC_ClockConfig+0xde>
 8002ffa:	2301      	movs	r3, #1
 8002ffc:	e06f      	b.n	80030de <HAL_RCC_ClockConfig+0x1ae>
 8002ffe:	4b3b      	ldr	r3, [pc, #236]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	f003 0302 	and.w	r3, r3, #2
 8003006:	2b00      	cmp	r3, #0
 8003008:	d101      	bne.n	800300e <HAL_RCC_ClockConfig+0xde>
 800300a:	2301      	movs	r3, #1
 800300c:	e067      	b.n	80030de <HAL_RCC_ClockConfig+0x1ae>
 800300e:	4b37      	ldr	r3, [pc, #220]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8003010:	689b      	ldr	r3, [r3, #8]
 8003012:	f023 0203 	bic.w	r2, r3, #3
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	685b      	ldr	r3, [r3, #4]
 800301a:	4934      	ldr	r1, [pc, #208]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 800301c:	4313      	orrs	r3, r2
 800301e:	608b      	str	r3, [r1, #8]
 8003020:	f7fe ffe8 	bl	8001ff4 <HAL_GetTick>
 8003024:	60f8      	str	r0, [r7, #12]
 8003026:	e00a      	b.n	800303e <HAL_RCC_ClockConfig+0x10e>
 8003028:	f7fe ffe4 	bl	8001ff4 <HAL_GetTick>
 800302c:	4602      	mov	r2, r0
 800302e:	68fb      	ldr	r3, [r7, #12]
 8003030:	1ad3      	subs	r3, r2, r3
 8003032:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003036:	4293      	cmp	r3, r2
 8003038:	d901      	bls.n	800303e <HAL_RCC_ClockConfig+0x10e>
 800303a:	2303      	movs	r3, #3
 800303c:	e04f      	b.n	80030de <HAL_RCC_ClockConfig+0x1ae>
 800303e:	4b2b      	ldr	r3, [pc, #172]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8003040:	689b      	ldr	r3, [r3, #8]
 8003042:	f003 020c 	and.w	r2, r3, #12
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	685b      	ldr	r3, [r3, #4]
 800304a:	009b      	lsls	r3, r3, #2
 800304c:	429a      	cmp	r2, r3
 800304e:	d1eb      	bne.n	8003028 <HAL_RCC_ClockConfig+0xf8>
 8003050:	4b25      	ldr	r3, [pc, #148]	@ (80030e8 <HAL_RCC_ClockConfig+0x1b8>)
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	f003 0307 	and.w	r3, r3, #7
 8003058:	683a      	ldr	r2, [r7, #0]
 800305a:	429a      	cmp	r2, r3
 800305c:	d20c      	bcs.n	8003078 <HAL_RCC_ClockConfig+0x148>
 800305e:	4b22      	ldr	r3, [pc, #136]	@ (80030e8 <HAL_RCC_ClockConfig+0x1b8>)
 8003060:	683a      	ldr	r2, [r7, #0]
 8003062:	b2d2      	uxtb	r2, r2
 8003064:	701a      	strb	r2, [r3, #0]
 8003066:	4b20      	ldr	r3, [pc, #128]	@ (80030e8 <HAL_RCC_ClockConfig+0x1b8>)
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	f003 0307 	and.w	r3, r3, #7
 800306e:	683a      	ldr	r2, [r7, #0]
 8003070:	429a      	cmp	r2, r3
 8003072:	d001      	beq.n	8003078 <HAL_RCC_ClockConfig+0x148>
 8003074:	2301      	movs	r3, #1
 8003076:	e032      	b.n	80030de <HAL_RCC_ClockConfig+0x1ae>
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	f003 0304 	and.w	r3, r3, #4
 8003080:	2b00      	cmp	r3, #0
 8003082:	d008      	beq.n	8003096 <HAL_RCC_ClockConfig+0x166>
 8003084:	4b19      	ldr	r3, [pc, #100]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8003086:	689b      	ldr	r3, [r3, #8]
 8003088:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	68db      	ldr	r3, [r3, #12]
 8003090:	4916      	ldr	r1, [pc, #88]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 8003092:	4313      	orrs	r3, r2
 8003094:	608b      	str	r3, [r1, #8]
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	681b      	ldr	r3, [r3, #0]
 800309a:	f003 0308 	and.w	r3, r3, #8
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d009      	beq.n	80030b6 <HAL_RCC_ClockConfig+0x186>
 80030a2:	4b12      	ldr	r3, [pc, #72]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 80030a4:	689b      	ldr	r3, [r3, #8]
 80030a6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	691b      	ldr	r3, [r3, #16]
 80030ae:	00db      	lsls	r3, r3, #3
 80030b0:	490e      	ldr	r1, [pc, #56]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 80030b2:	4313      	orrs	r3, r2
 80030b4:	608b      	str	r3, [r1, #8]
 80030b6:	f000 f821 	bl	80030fc <HAL_RCC_GetSysClockFreq>
 80030ba:	4602      	mov	r2, r0
 80030bc:	4b0b      	ldr	r3, [pc, #44]	@ (80030ec <HAL_RCC_ClockConfig+0x1bc>)
 80030be:	689b      	ldr	r3, [r3, #8]
 80030c0:	091b      	lsrs	r3, r3, #4
 80030c2:	f003 030f 	and.w	r3, r3, #15
 80030c6:	490a      	ldr	r1, [pc, #40]	@ (80030f0 <HAL_RCC_ClockConfig+0x1c0>)
 80030c8:	5ccb      	ldrb	r3, [r1, r3]
 80030ca:	fa22 f303 	lsr.w	r3, r2, r3
 80030ce:	4a09      	ldr	r2, [pc, #36]	@ (80030f4 <HAL_RCC_ClockConfig+0x1c4>)
 80030d0:	6013      	str	r3, [r2, #0]
 80030d2:	4b09      	ldr	r3, [pc, #36]	@ (80030f8 <HAL_RCC_ClockConfig+0x1c8>)
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	4618      	mov	r0, r3
 80030d8:	f7fe ff48 	bl	8001f6c <HAL_InitTick>
 80030dc:	2300      	movs	r3, #0
 80030de:	4618      	mov	r0, r3
 80030e0:	3710      	adds	r7, #16
 80030e2:	46bd      	mov	sp, r7
 80030e4:	bd80      	pop	{r7, pc}
 80030e6:	bf00      	nop
 80030e8:	40023c00 	.word	0x40023c00
 80030ec:	40023800 	.word	0x40023800
 80030f0:	08004794 	.word	0x08004794
 80030f4:	20000000 	.word	0x20000000
 80030f8:	20000004 	.word	0x20000004

080030fc <HAL_RCC_GetSysClockFreq>:
 80030fc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003100:	b090      	sub	sp, #64	@ 0x40
 8003102:	af00      	add	r7, sp, #0
 8003104:	2300      	movs	r3, #0
 8003106:	637b      	str	r3, [r7, #52]	@ 0x34
 8003108:	2300      	movs	r3, #0
 800310a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800310c:	2300      	movs	r3, #0
 800310e:	633b      	str	r3, [r7, #48]	@ 0x30
 8003110:	2300      	movs	r3, #0
 8003112:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003114:	4b59      	ldr	r3, [pc, #356]	@ (800327c <HAL_RCC_GetSysClockFreq+0x180>)
 8003116:	689b      	ldr	r3, [r3, #8]
 8003118:	f003 030c 	and.w	r3, r3, #12
 800311c:	2b08      	cmp	r3, #8
 800311e:	d00d      	beq.n	800313c <HAL_RCC_GetSysClockFreq+0x40>
 8003120:	2b08      	cmp	r3, #8
 8003122:	f200 80a1 	bhi.w	8003268 <HAL_RCC_GetSysClockFreq+0x16c>
 8003126:	2b00      	cmp	r3, #0
 8003128:	d002      	beq.n	8003130 <HAL_RCC_GetSysClockFreq+0x34>
 800312a:	2b04      	cmp	r3, #4
 800312c:	d003      	beq.n	8003136 <HAL_RCC_GetSysClockFreq+0x3a>
 800312e:	e09b      	b.n	8003268 <HAL_RCC_GetSysClockFreq+0x16c>
 8003130:	4b53      	ldr	r3, [pc, #332]	@ (8003280 <HAL_RCC_GetSysClockFreq+0x184>)
 8003132:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003134:	e09b      	b.n	800326e <HAL_RCC_GetSysClockFreq+0x172>
 8003136:	4b53      	ldr	r3, [pc, #332]	@ (8003284 <HAL_RCC_GetSysClockFreq+0x188>)
 8003138:	63bb      	str	r3, [r7, #56]	@ 0x38
 800313a:	e098      	b.n	800326e <HAL_RCC_GetSysClockFreq+0x172>
 800313c:	4b4f      	ldr	r3, [pc, #316]	@ (800327c <HAL_RCC_GetSysClockFreq+0x180>)
 800313e:	685b      	ldr	r3, [r3, #4]
 8003140:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003144:	637b      	str	r3, [r7, #52]	@ 0x34
 8003146:	4b4d      	ldr	r3, [pc, #308]	@ (800327c <HAL_RCC_GetSysClockFreq+0x180>)
 8003148:	685b      	ldr	r3, [r3, #4]
 800314a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800314e:	2b00      	cmp	r3, #0
 8003150:	d028      	beq.n	80031a4 <HAL_RCC_GetSysClockFreq+0xa8>
 8003152:	4b4a      	ldr	r3, [pc, #296]	@ (800327c <HAL_RCC_GetSysClockFreq+0x180>)
 8003154:	685b      	ldr	r3, [r3, #4]
 8003156:	099b      	lsrs	r3, r3, #6
 8003158:	2200      	movs	r2, #0
 800315a:	623b      	str	r3, [r7, #32]
 800315c:	627a      	str	r2, [r7, #36]	@ 0x24
 800315e:	6a3b      	ldr	r3, [r7, #32]
 8003160:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8003164:	2100      	movs	r1, #0
 8003166:	4b47      	ldr	r3, [pc, #284]	@ (8003284 <HAL_RCC_GetSysClockFreq+0x188>)
 8003168:	fb03 f201 	mul.w	r2, r3, r1
 800316c:	2300      	movs	r3, #0
 800316e:	fb00 f303 	mul.w	r3, r0, r3
 8003172:	4413      	add	r3, r2
 8003174:	4a43      	ldr	r2, [pc, #268]	@ (8003284 <HAL_RCC_GetSysClockFreq+0x188>)
 8003176:	fba0 1202 	umull	r1, r2, r0, r2
 800317a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800317c:	460a      	mov	r2, r1
 800317e:	62ba      	str	r2, [r7, #40]	@ 0x28
 8003180:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003182:	4413      	add	r3, r2
 8003184:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003186:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003188:	2200      	movs	r2, #0
 800318a:	61bb      	str	r3, [r7, #24]
 800318c:	61fa      	str	r2, [r7, #28]
 800318e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003192:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8003196:	f7fd fb55 	bl	8000844 <__aeabi_uldivmod>
 800319a:	4602      	mov	r2, r0
 800319c:	460b      	mov	r3, r1
 800319e:	4613      	mov	r3, r2
 80031a0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80031a2:	e053      	b.n	800324c <HAL_RCC_GetSysClockFreq+0x150>
 80031a4:	4b35      	ldr	r3, [pc, #212]	@ (800327c <HAL_RCC_GetSysClockFreq+0x180>)
 80031a6:	685b      	ldr	r3, [r3, #4]
 80031a8:	099b      	lsrs	r3, r3, #6
 80031aa:	2200      	movs	r2, #0
 80031ac:	613b      	str	r3, [r7, #16]
 80031ae:	617a      	str	r2, [r7, #20]
 80031b0:	693b      	ldr	r3, [r7, #16]
 80031b2:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 80031b6:	f04f 0b00 	mov.w	fp, #0
 80031ba:	4652      	mov	r2, sl
 80031bc:	465b      	mov	r3, fp
 80031be:	f04f 0000 	mov.w	r0, #0
 80031c2:	f04f 0100 	mov.w	r1, #0
 80031c6:	0159      	lsls	r1, r3, #5
 80031c8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80031cc:	0150      	lsls	r0, r2, #5
 80031ce:	4602      	mov	r2, r0
 80031d0:	460b      	mov	r3, r1
 80031d2:	ebb2 080a 	subs.w	r8, r2, sl
 80031d6:	eb63 090b 	sbc.w	r9, r3, fp
 80031da:	f04f 0200 	mov.w	r2, #0
 80031de:	f04f 0300 	mov.w	r3, #0
 80031e2:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80031e6:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80031ea:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80031ee:	ebb2 0408 	subs.w	r4, r2, r8
 80031f2:	eb63 0509 	sbc.w	r5, r3, r9
 80031f6:	f04f 0200 	mov.w	r2, #0
 80031fa:	f04f 0300 	mov.w	r3, #0
 80031fe:	00eb      	lsls	r3, r5, #3
 8003200:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003204:	00e2      	lsls	r2, r4, #3
 8003206:	4614      	mov	r4, r2
 8003208:	461d      	mov	r5, r3
 800320a:	eb14 030a 	adds.w	r3, r4, sl
 800320e:	603b      	str	r3, [r7, #0]
 8003210:	eb45 030b 	adc.w	r3, r5, fp
 8003214:	607b      	str	r3, [r7, #4]
 8003216:	f04f 0200 	mov.w	r2, #0
 800321a:	f04f 0300 	mov.w	r3, #0
 800321e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003222:	4629      	mov	r1, r5
 8003224:	028b      	lsls	r3, r1, #10
 8003226:	4621      	mov	r1, r4
 8003228:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800322c:	4621      	mov	r1, r4
 800322e:	028a      	lsls	r2, r1, #10
 8003230:	4610      	mov	r0, r2
 8003232:	4619      	mov	r1, r3
 8003234:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003236:	2200      	movs	r2, #0
 8003238:	60bb      	str	r3, [r7, #8]
 800323a:	60fa      	str	r2, [r7, #12]
 800323c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003240:	f7fd fb00 	bl	8000844 <__aeabi_uldivmod>
 8003244:	4602      	mov	r2, r0
 8003246:	460b      	mov	r3, r1
 8003248:	4613      	mov	r3, r2
 800324a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800324c:	4b0b      	ldr	r3, [pc, #44]	@ (800327c <HAL_RCC_GetSysClockFreq+0x180>)
 800324e:	685b      	ldr	r3, [r3, #4]
 8003250:	0c1b      	lsrs	r3, r3, #16
 8003252:	f003 0303 	and.w	r3, r3, #3
 8003256:	3301      	adds	r3, #1
 8003258:	005b      	lsls	r3, r3, #1
 800325a:	633b      	str	r3, [r7, #48]	@ 0x30
 800325c:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800325e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003260:	fbb2 f3f3 	udiv	r3, r2, r3
 8003264:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003266:	e002      	b.n	800326e <HAL_RCC_GetSysClockFreq+0x172>
 8003268:	4b05      	ldr	r3, [pc, #20]	@ (8003280 <HAL_RCC_GetSysClockFreq+0x184>)
 800326a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800326c:	bf00      	nop
 800326e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003270:	4618      	mov	r0, r3
 8003272:	3740      	adds	r7, #64	@ 0x40
 8003274:	46bd      	mov	sp, r7
 8003276:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800327a:	bf00      	nop
 800327c:	40023800 	.word	0x40023800
 8003280:	00f42400 	.word	0x00f42400
 8003284:	017d7840 	.word	0x017d7840

08003288 <HAL_RCC_GetHCLKFreq>:
 8003288:	b480      	push	{r7}
 800328a:	af00      	add	r7, sp, #0
 800328c:	4b03      	ldr	r3, [pc, #12]	@ (800329c <HAL_RCC_GetHCLKFreq+0x14>)
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	4618      	mov	r0, r3
 8003292:	46bd      	mov	sp, r7
 8003294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003298:	4770      	bx	lr
 800329a:	bf00      	nop
 800329c:	20000000 	.word	0x20000000

080032a0 <HAL_RCC_GetPCLK1Freq>:
 80032a0:	b580      	push	{r7, lr}
 80032a2:	af00      	add	r7, sp, #0
 80032a4:	f7ff fff0 	bl	8003288 <HAL_RCC_GetHCLKFreq>
 80032a8:	4602      	mov	r2, r0
 80032aa:	4b05      	ldr	r3, [pc, #20]	@ (80032c0 <HAL_RCC_GetPCLK1Freq+0x20>)
 80032ac:	689b      	ldr	r3, [r3, #8]
 80032ae:	0a9b      	lsrs	r3, r3, #10
 80032b0:	f003 0307 	and.w	r3, r3, #7
 80032b4:	4903      	ldr	r1, [pc, #12]	@ (80032c4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80032b6:	5ccb      	ldrb	r3, [r1, r3]
 80032b8:	fa22 f303 	lsr.w	r3, r2, r3
 80032bc:	4618      	mov	r0, r3
 80032be:	bd80      	pop	{r7, pc}
 80032c0:	40023800 	.word	0x40023800
 80032c4:	080047a4 	.word	0x080047a4

080032c8 <HAL_RCC_GetPCLK2Freq>:
 80032c8:	b580      	push	{r7, lr}
 80032ca:	af00      	add	r7, sp, #0
 80032cc:	f7ff ffdc 	bl	8003288 <HAL_RCC_GetHCLKFreq>
 80032d0:	4602      	mov	r2, r0
 80032d2:	4b05      	ldr	r3, [pc, #20]	@ (80032e8 <HAL_RCC_GetPCLK2Freq+0x20>)
 80032d4:	689b      	ldr	r3, [r3, #8]
 80032d6:	0b5b      	lsrs	r3, r3, #13
 80032d8:	f003 0307 	and.w	r3, r3, #7
 80032dc:	4903      	ldr	r1, [pc, #12]	@ (80032ec <HAL_RCC_GetPCLK2Freq+0x24>)
 80032de:	5ccb      	ldrb	r3, [r1, r3]
 80032e0:	fa22 f303 	lsr.w	r3, r2, r3
 80032e4:	4618      	mov	r0, r3
 80032e6:	bd80      	pop	{r7, pc}
 80032e8:	40023800 	.word	0x40023800
 80032ec:	080047a4 	.word	0x080047a4

080032f0 <HAL_UART_Init>:
 80032f0:	b580      	push	{r7, lr}
 80032f2:	b082      	sub	sp, #8
 80032f4:	af00      	add	r7, sp, #0
 80032f6:	6078      	str	r0, [r7, #4]
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	2b00      	cmp	r3, #0
 80032fc:	d101      	bne.n	8003302 <HAL_UART_Init+0x12>
 80032fe:	2301      	movs	r3, #1
 8003300:	e042      	b.n	8003388 <HAL_UART_Init+0x98>
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003308:	b2db      	uxtb	r3, r3
 800330a:	2b00      	cmp	r3, #0
 800330c:	d106      	bne.n	800331c <HAL_UART_Init+0x2c>
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	2200      	movs	r2, #0
 8003312:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003316:	6878      	ldr	r0, [r7, #4]
 8003318:	f7fe fb44 	bl	80019a4 <HAL_UART_MspInit>
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	2224      	movs	r2, #36	@ 0x24
 8003320:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	68da      	ldr	r2, [r3, #12]
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003332:	60da      	str	r2, [r3, #12]
 8003334:	6878      	ldr	r0, [r7, #4]
 8003336:	f000 fa09 	bl	800374c <UART_SetConfig>
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	691a      	ldr	r2, [r3, #16]
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003348:	611a      	str	r2, [r3, #16]
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	695a      	ldr	r2, [r3, #20]
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003358:	615a      	str	r2, [r3, #20]
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	68da      	ldr	r2, [r3, #12]
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	681b      	ldr	r3, [r3, #0]
 8003364:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003368:	60da      	str	r2, [r3, #12]
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	2200      	movs	r2, #0
 800336e:	645a      	str	r2, [r3, #68]	@ 0x44
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	2220      	movs	r2, #32
 8003374:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	2220      	movs	r2, #32
 800337c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003380:	687b      	ldr	r3, [r7, #4]
 8003382:	2200      	movs	r2, #0
 8003384:	635a      	str	r2, [r3, #52]	@ 0x34
 8003386:	2300      	movs	r3, #0
 8003388:	4618      	mov	r0, r3
 800338a:	3708      	adds	r7, #8
 800338c:	46bd      	mov	sp, r7
 800338e:	bd80      	pop	{r7, pc}

08003390 <HAL_UART_Transmit>:
 8003390:	b580      	push	{r7, lr}
 8003392:	b08a      	sub	sp, #40	@ 0x28
 8003394:	af02      	add	r7, sp, #8
 8003396:	60f8      	str	r0, [r7, #12]
 8003398:	60b9      	str	r1, [r7, #8]
 800339a:	603b      	str	r3, [r7, #0]
 800339c:	4613      	mov	r3, r2
 800339e:	80fb      	strh	r3, [r7, #6]
 80033a0:	2300      	movs	r3, #0
 80033a2:	617b      	str	r3, [r7, #20]
 80033a4:	68fb      	ldr	r3, [r7, #12]
 80033a6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80033aa:	b2db      	uxtb	r3, r3
 80033ac:	2b20      	cmp	r3, #32
 80033ae:	d175      	bne.n	800349c <HAL_UART_Transmit+0x10c>
 80033b0:	68bb      	ldr	r3, [r7, #8]
 80033b2:	2b00      	cmp	r3, #0
 80033b4:	d002      	beq.n	80033bc <HAL_UART_Transmit+0x2c>
 80033b6:	88fb      	ldrh	r3, [r7, #6]
 80033b8:	2b00      	cmp	r3, #0
 80033ba:	d101      	bne.n	80033c0 <HAL_UART_Transmit+0x30>
 80033bc:	2301      	movs	r3, #1
 80033be:	e06e      	b.n	800349e <HAL_UART_Transmit+0x10e>
 80033c0:	68fb      	ldr	r3, [r7, #12]
 80033c2:	2200      	movs	r2, #0
 80033c4:	645a      	str	r2, [r3, #68]	@ 0x44
 80033c6:	68fb      	ldr	r3, [r7, #12]
 80033c8:	2221      	movs	r2, #33	@ 0x21
 80033ca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80033ce:	f7fe fe11 	bl	8001ff4 <HAL_GetTick>
 80033d2:	6178      	str	r0, [r7, #20]
 80033d4:	68fb      	ldr	r3, [r7, #12]
 80033d6:	88fa      	ldrh	r2, [r7, #6]
 80033d8:	849a      	strh	r2, [r3, #36]	@ 0x24
 80033da:	68fb      	ldr	r3, [r7, #12]
 80033dc:	88fa      	ldrh	r2, [r7, #6]
 80033de:	84da      	strh	r2, [r3, #38]	@ 0x26
 80033e0:	68fb      	ldr	r3, [r7, #12]
 80033e2:	689b      	ldr	r3, [r3, #8]
 80033e4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80033e8:	d108      	bne.n	80033fc <HAL_UART_Transmit+0x6c>
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	691b      	ldr	r3, [r3, #16]
 80033ee:	2b00      	cmp	r3, #0
 80033f0:	d104      	bne.n	80033fc <HAL_UART_Transmit+0x6c>
 80033f2:	2300      	movs	r3, #0
 80033f4:	61fb      	str	r3, [r7, #28]
 80033f6:	68bb      	ldr	r3, [r7, #8]
 80033f8:	61bb      	str	r3, [r7, #24]
 80033fa:	e003      	b.n	8003404 <HAL_UART_Transmit+0x74>
 80033fc:	68bb      	ldr	r3, [r7, #8]
 80033fe:	61fb      	str	r3, [r7, #28]
 8003400:	2300      	movs	r3, #0
 8003402:	61bb      	str	r3, [r7, #24]
 8003404:	e02e      	b.n	8003464 <HAL_UART_Transmit+0xd4>
 8003406:	683b      	ldr	r3, [r7, #0]
 8003408:	9300      	str	r3, [sp, #0]
 800340a:	697b      	ldr	r3, [r7, #20]
 800340c:	2200      	movs	r2, #0
 800340e:	2180      	movs	r1, #128	@ 0x80
 8003410:	68f8      	ldr	r0, [r7, #12]
 8003412:	f000 f8df 	bl	80035d4 <UART_WaitOnFlagUntilTimeout>
 8003416:	4603      	mov	r3, r0
 8003418:	2b00      	cmp	r3, #0
 800341a:	d005      	beq.n	8003428 <HAL_UART_Transmit+0x98>
 800341c:	68fb      	ldr	r3, [r7, #12]
 800341e:	2220      	movs	r2, #32
 8003420:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003424:	2303      	movs	r3, #3
 8003426:	e03a      	b.n	800349e <HAL_UART_Transmit+0x10e>
 8003428:	69fb      	ldr	r3, [r7, #28]
 800342a:	2b00      	cmp	r3, #0
 800342c:	d10b      	bne.n	8003446 <HAL_UART_Transmit+0xb6>
 800342e:	69bb      	ldr	r3, [r7, #24]
 8003430:	881b      	ldrh	r3, [r3, #0]
 8003432:	461a      	mov	r2, r3
 8003434:	68fb      	ldr	r3, [r7, #12]
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800343c:	605a      	str	r2, [r3, #4]
 800343e:	69bb      	ldr	r3, [r7, #24]
 8003440:	3302      	adds	r3, #2
 8003442:	61bb      	str	r3, [r7, #24]
 8003444:	e007      	b.n	8003456 <HAL_UART_Transmit+0xc6>
 8003446:	69fb      	ldr	r3, [r7, #28]
 8003448:	781a      	ldrb	r2, [r3, #0]
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	605a      	str	r2, [r3, #4]
 8003450:	69fb      	ldr	r3, [r7, #28]
 8003452:	3301      	adds	r3, #1
 8003454:	61fb      	str	r3, [r7, #28]
 8003456:	68fb      	ldr	r3, [r7, #12]
 8003458:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800345a:	b29b      	uxth	r3, r3
 800345c:	3b01      	subs	r3, #1
 800345e:	b29a      	uxth	r2, r3
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003468:	b29b      	uxth	r3, r3
 800346a:	2b00      	cmp	r3, #0
 800346c:	d1cb      	bne.n	8003406 <HAL_UART_Transmit+0x76>
 800346e:	683b      	ldr	r3, [r7, #0]
 8003470:	9300      	str	r3, [sp, #0]
 8003472:	697b      	ldr	r3, [r7, #20]
 8003474:	2200      	movs	r2, #0
 8003476:	2140      	movs	r1, #64	@ 0x40
 8003478:	68f8      	ldr	r0, [r7, #12]
 800347a:	f000 f8ab 	bl	80035d4 <UART_WaitOnFlagUntilTimeout>
 800347e:	4603      	mov	r3, r0
 8003480:	2b00      	cmp	r3, #0
 8003482:	d005      	beq.n	8003490 <HAL_UART_Transmit+0x100>
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	2220      	movs	r2, #32
 8003488:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800348c:	2303      	movs	r3, #3
 800348e:	e006      	b.n	800349e <HAL_UART_Transmit+0x10e>
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	2220      	movs	r2, #32
 8003494:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003498:	2300      	movs	r3, #0
 800349a:	e000      	b.n	800349e <HAL_UART_Transmit+0x10e>
 800349c:	2302      	movs	r3, #2
 800349e:	4618      	mov	r0, r3
 80034a0:	3720      	adds	r7, #32
 80034a2:	46bd      	mov	sp, r7
 80034a4:	bd80      	pop	{r7, pc}

080034a6 <HAL_UART_Receive>:
 80034a6:	b580      	push	{r7, lr}
 80034a8:	b08a      	sub	sp, #40	@ 0x28
 80034aa:	af02      	add	r7, sp, #8
 80034ac:	60f8      	str	r0, [r7, #12]
 80034ae:	60b9      	str	r1, [r7, #8]
 80034b0:	603b      	str	r3, [r7, #0]
 80034b2:	4613      	mov	r3, r2
 80034b4:	80fb      	strh	r3, [r7, #6]
 80034b6:	2300      	movs	r3, #0
 80034b8:	617b      	str	r3, [r7, #20]
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80034c0:	b2db      	uxtb	r3, r3
 80034c2:	2b20      	cmp	r3, #32
 80034c4:	f040 8081 	bne.w	80035ca <HAL_UART_Receive+0x124>
 80034c8:	68bb      	ldr	r3, [r7, #8]
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	d002      	beq.n	80034d4 <HAL_UART_Receive+0x2e>
 80034ce:	88fb      	ldrh	r3, [r7, #6]
 80034d0:	2b00      	cmp	r3, #0
 80034d2:	d101      	bne.n	80034d8 <HAL_UART_Receive+0x32>
 80034d4:	2301      	movs	r3, #1
 80034d6:	e079      	b.n	80035cc <HAL_UART_Receive+0x126>
 80034d8:	68fb      	ldr	r3, [r7, #12]
 80034da:	2200      	movs	r2, #0
 80034dc:	645a      	str	r2, [r3, #68]	@ 0x44
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	2222      	movs	r2, #34	@ 0x22
 80034e2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80034e6:	68fb      	ldr	r3, [r7, #12]
 80034e8:	2200      	movs	r2, #0
 80034ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80034ec:	f7fe fd82 	bl	8001ff4 <HAL_GetTick>
 80034f0:	6178      	str	r0, [r7, #20]
 80034f2:	68fb      	ldr	r3, [r7, #12]
 80034f4:	88fa      	ldrh	r2, [r7, #6]
 80034f6:	859a      	strh	r2, [r3, #44]	@ 0x2c
 80034f8:	68fb      	ldr	r3, [r7, #12]
 80034fa:	88fa      	ldrh	r2, [r7, #6]
 80034fc:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80034fe:	68fb      	ldr	r3, [r7, #12]
 8003500:	689b      	ldr	r3, [r3, #8]
 8003502:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003506:	d108      	bne.n	800351a <HAL_UART_Receive+0x74>
 8003508:	68fb      	ldr	r3, [r7, #12]
 800350a:	691b      	ldr	r3, [r3, #16]
 800350c:	2b00      	cmp	r3, #0
 800350e:	d104      	bne.n	800351a <HAL_UART_Receive+0x74>
 8003510:	2300      	movs	r3, #0
 8003512:	61fb      	str	r3, [r7, #28]
 8003514:	68bb      	ldr	r3, [r7, #8]
 8003516:	61bb      	str	r3, [r7, #24]
 8003518:	e003      	b.n	8003522 <HAL_UART_Receive+0x7c>
 800351a:	68bb      	ldr	r3, [r7, #8]
 800351c:	61fb      	str	r3, [r7, #28]
 800351e:	2300      	movs	r3, #0
 8003520:	61bb      	str	r3, [r7, #24]
 8003522:	e047      	b.n	80035b4 <HAL_UART_Receive+0x10e>
 8003524:	683b      	ldr	r3, [r7, #0]
 8003526:	9300      	str	r3, [sp, #0]
 8003528:	697b      	ldr	r3, [r7, #20]
 800352a:	2200      	movs	r2, #0
 800352c:	2120      	movs	r1, #32
 800352e:	68f8      	ldr	r0, [r7, #12]
 8003530:	f000 f850 	bl	80035d4 <UART_WaitOnFlagUntilTimeout>
 8003534:	4603      	mov	r3, r0
 8003536:	2b00      	cmp	r3, #0
 8003538:	d005      	beq.n	8003546 <HAL_UART_Receive+0xa0>
 800353a:	68fb      	ldr	r3, [r7, #12]
 800353c:	2220      	movs	r2, #32
 800353e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003542:	2303      	movs	r3, #3
 8003544:	e042      	b.n	80035cc <HAL_UART_Receive+0x126>
 8003546:	69fb      	ldr	r3, [r7, #28]
 8003548:	2b00      	cmp	r3, #0
 800354a:	d10c      	bne.n	8003566 <HAL_UART_Receive+0xc0>
 800354c:	68fb      	ldr	r3, [r7, #12]
 800354e:	681b      	ldr	r3, [r3, #0]
 8003550:	685b      	ldr	r3, [r3, #4]
 8003552:	b29b      	uxth	r3, r3
 8003554:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003558:	b29a      	uxth	r2, r3
 800355a:	69bb      	ldr	r3, [r7, #24]
 800355c:	801a      	strh	r2, [r3, #0]
 800355e:	69bb      	ldr	r3, [r7, #24]
 8003560:	3302      	adds	r3, #2
 8003562:	61bb      	str	r3, [r7, #24]
 8003564:	e01f      	b.n	80035a6 <HAL_UART_Receive+0x100>
 8003566:	68fb      	ldr	r3, [r7, #12]
 8003568:	689b      	ldr	r3, [r3, #8]
 800356a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800356e:	d007      	beq.n	8003580 <HAL_UART_Receive+0xda>
 8003570:	68fb      	ldr	r3, [r7, #12]
 8003572:	689b      	ldr	r3, [r3, #8]
 8003574:	2b00      	cmp	r3, #0
 8003576:	d10a      	bne.n	800358e <HAL_UART_Receive+0xe8>
 8003578:	68fb      	ldr	r3, [r7, #12]
 800357a:	691b      	ldr	r3, [r3, #16]
 800357c:	2b00      	cmp	r3, #0
 800357e:	d106      	bne.n	800358e <HAL_UART_Receive+0xe8>
 8003580:	68fb      	ldr	r3, [r7, #12]
 8003582:	681b      	ldr	r3, [r3, #0]
 8003584:	685b      	ldr	r3, [r3, #4]
 8003586:	b2da      	uxtb	r2, r3
 8003588:	69fb      	ldr	r3, [r7, #28]
 800358a:	701a      	strb	r2, [r3, #0]
 800358c:	e008      	b.n	80035a0 <HAL_UART_Receive+0xfa>
 800358e:	68fb      	ldr	r3, [r7, #12]
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	685b      	ldr	r3, [r3, #4]
 8003594:	b2db      	uxtb	r3, r3
 8003596:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800359a:	b2da      	uxtb	r2, r3
 800359c:	69fb      	ldr	r3, [r7, #28]
 800359e:	701a      	strb	r2, [r3, #0]
 80035a0:	69fb      	ldr	r3, [r7, #28]
 80035a2:	3301      	adds	r3, #1
 80035a4:	61fb      	str	r3, [r7, #28]
 80035a6:	68fb      	ldr	r3, [r7, #12]
 80035a8:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80035aa:	b29b      	uxth	r3, r3
 80035ac:	3b01      	subs	r3, #1
 80035ae:	b29a      	uxth	r2, r3
 80035b0:	68fb      	ldr	r3, [r7, #12]
 80035b2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80035b4:	68fb      	ldr	r3, [r7, #12]
 80035b6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80035b8:	b29b      	uxth	r3, r3
 80035ba:	2b00      	cmp	r3, #0
 80035bc:	d1b2      	bne.n	8003524 <HAL_UART_Receive+0x7e>
 80035be:	68fb      	ldr	r3, [r7, #12]
 80035c0:	2220      	movs	r2, #32
 80035c2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80035c6:	2300      	movs	r3, #0
 80035c8:	e000      	b.n	80035cc <HAL_UART_Receive+0x126>
 80035ca:	2302      	movs	r3, #2
 80035cc:	4618      	mov	r0, r3
 80035ce:	3720      	adds	r7, #32
 80035d0:	46bd      	mov	sp, r7
 80035d2:	bd80      	pop	{r7, pc}

080035d4 <UART_WaitOnFlagUntilTimeout>:
 80035d4:	b580      	push	{r7, lr}
 80035d6:	b086      	sub	sp, #24
 80035d8:	af00      	add	r7, sp, #0
 80035da:	60f8      	str	r0, [r7, #12]
 80035dc:	60b9      	str	r1, [r7, #8]
 80035de:	603b      	str	r3, [r7, #0]
 80035e0:	4613      	mov	r3, r2
 80035e2:	71fb      	strb	r3, [r7, #7]
 80035e4:	e03b      	b.n	800365e <UART_WaitOnFlagUntilTimeout+0x8a>
 80035e6:	6a3b      	ldr	r3, [r7, #32]
 80035e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80035ec:	d037      	beq.n	800365e <UART_WaitOnFlagUntilTimeout+0x8a>
 80035ee:	f7fe fd01 	bl	8001ff4 <HAL_GetTick>
 80035f2:	4602      	mov	r2, r0
 80035f4:	683b      	ldr	r3, [r7, #0]
 80035f6:	1ad3      	subs	r3, r2, r3
 80035f8:	6a3a      	ldr	r2, [r7, #32]
 80035fa:	429a      	cmp	r2, r3
 80035fc:	d302      	bcc.n	8003604 <UART_WaitOnFlagUntilTimeout+0x30>
 80035fe:	6a3b      	ldr	r3, [r7, #32]
 8003600:	2b00      	cmp	r3, #0
 8003602:	d101      	bne.n	8003608 <UART_WaitOnFlagUntilTimeout+0x34>
 8003604:	2303      	movs	r3, #3
 8003606:	e03a      	b.n	800367e <UART_WaitOnFlagUntilTimeout+0xaa>
 8003608:	68fb      	ldr	r3, [r7, #12]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	68db      	ldr	r3, [r3, #12]
 800360e:	f003 0304 	and.w	r3, r3, #4
 8003612:	2b00      	cmp	r3, #0
 8003614:	d023      	beq.n	800365e <UART_WaitOnFlagUntilTimeout+0x8a>
 8003616:	68bb      	ldr	r3, [r7, #8]
 8003618:	2b80      	cmp	r3, #128	@ 0x80
 800361a:	d020      	beq.n	800365e <UART_WaitOnFlagUntilTimeout+0x8a>
 800361c:	68bb      	ldr	r3, [r7, #8]
 800361e:	2b40      	cmp	r3, #64	@ 0x40
 8003620:	d01d      	beq.n	800365e <UART_WaitOnFlagUntilTimeout+0x8a>
 8003622:	68fb      	ldr	r3, [r7, #12]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	f003 0308 	and.w	r3, r3, #8
 800362c:	2b08      	cmp	r3, #8
 800362e:	d116      	bne.n	800365e <UART_WaitOnFlagUntilTimeout+0x8a>
 8003630:	2300      	movs	r3, #0
 8003632:	617b      	str	r3, [r7, #20]
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	617b      	str	r3, [r7, #20]
 800363c:	68fb      	ldr	r3, [r7, #12]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	685b      	ldr	r3, [r3, #4]
 8003642:	617b      	str	r3, [r7, #20]
 8003644:	697b      	ldr	r3, [r7, #20]
 8003646:	68f8      	ldr	r0, [r7, #12]
 8003648:	f000 f81d 	bl	8003686 <UART_EndRxTransfer>
 800364c:	68fb      	ldr	r3, [r7, #12]
 800364e:	2208      	movs	r2, #8
 8003650:	645a      	str	r2, [r3, #68]	@ 0x44
 8003652:	68fb      	ldr	r3, [r7, #12]
 8003654:	2200      	movs	r2, #0
 8003656:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800365a:	2301      	movs	r3, #1
 800365c:	e00f      	b.n	800367e <UART_WaitOnFlagUntilTimeout+0xaa>
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	681a      	ldr	r2, [r3, #0]
 8003664:	68bb      	ldr	r3, [r7, #8]
 8003666:	4013      	ands	r3, r2
 8003668:	68ba      	ldr	r2, [r7, #8]
 800366a:	429a      	cmp	r2, r3
 800366c:	bf0c      	ite	eq
 800366e:	2301      	moveq	r3, #1
 8003670:	2300      	movne	r3, #0
 8003672:	b2db      	uxtb	r3, r3
 8003674:	461a      	mov	r2, r3
 8003676:	79fb      	ldrb	r3, [r7, #7]
 8003678:	429a      	cmp	r2, r3
 800367a:	d0b4      	beq.n	80035e6 <UART_WaitOnFlagUntilTimeout+0x12>
 800367c:	2300      	movs	r3, #0
 800367e:	4618      	mov	r0, r3
 8003680:	3718      	adds	r7, #24
 8003682:	46bd      	mov	sp, r7
 8003684:	bd80      	pop	{r7, pc}

08003686 <UART_EndRxTransfer>:
 8003686:	b480      	push	{r7}
 8003688:	b095      	sub	sp, #84	@ 0x54
 800368a:	af00      	add	r7, sp, #0
 800368c:	6078      	str	r0, [r7, #4]
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	330c      	adds	r3, #12
 8003694:	637b      	str	r3, [r7, #52]	@ 0x34
 8003696:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003698:	e853 3f00 	ldrex	r3, [r3]
 800369c:	633b      	str	r3, [r7, #48]	@ 0x30
 800369e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80036a0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80036a4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	330c      	adds	r3, #12
 80036ac:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80036ae:	643a      	str	r2, [r7, #64]	@ 0x40
 80036b0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80036b2:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80036b4:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80036b6:	e841 2300 	strex	r3, r2, [r1]
 80036ba:	63bb      	str	r3, [r7, #56]	@ 0x38
 80036bc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80036be:	2b00      	cmp	r3, #0
 80036c0:	d1e5      	bne.n	800368e <UART_EndRxTransfer+0x8>
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	3314      	adds	r3, #20
 80036c8:	623b      	str	r3, [r7, #32]
 80036ca:	6a3b      	ldr	r3, [r7, #32]
 80036cc:	e853 3f00 	ldrex	r3, [r3]
 80036d0:	61fb      	str	r3, [r7, #28]
 80036d2:	69fb      	ldr	r3, [r7, #28]
 80036d4:	f023 0301 	bic.w	r3, r3, #1
 80036d8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	3314      	adds	r3, #20
 80036e0:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80036e2:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80036e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80036e6:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80036e8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80036ea:	e841 2300 	strex	r3, r2, [r1]
 80036ee:	627b      	str	r3, [r7, #36]	@ 0x24
 80036f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80036f2:	2b00      	cmp	r3, #0
 80036f4:	d1e5      	bne.n	80036c2 <UART_EndRxTransfer+0x3c>
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80036fa:	2b01      	cmp	r3, #1
 80036fc:	d119      	bne.n	8003732 <UART_EndRxTransfer+0xac>
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	681b      	ldr	r3, [r3, #0]
 8003702:	330c      	adds	r3, #12
 8003704:	60fb      	str	r3, [r7, #12]
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	e853 3f00 	ldrex	r3, [r3]
 800370c:	60bb      	str	r3, [r7, #8]
 800370e:	68bb      	ldr	r3, [r7, #8]
 8003710:	f023 0310 	bic.w	r3, r3, #16
 8003714:	647b      	str	r3, [r7, #68]	@ 0x44
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	681b      	ldr	r3, [r3, #0]
 800371a:	330c      	adds	r3, #12
 800371c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800371e:	61ba      	str	r2, [r7, #24]
 8003720:	617b      	str	r3, [r7, #20]
 8003722:	6979      	ldr	r1, [r7, #20]
 8003724:	69ba      	ldr	r2, [r7, #24]
 8003726:	e841 2300 	strex	r3, r2, [r1]
 800372a:	613b      	str	r3, [r7, #16]
 800372c:	693b      	ldr	r3, [r7, #16]
 800372e:	2b00      	cmp	r3, #0
 8003730:	d1e5      	bne.n	80036fe <UART_EndRxTransfer+0x78>
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	2220      	movs	r2, #32
 8003736:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	2200      	movs	r2, #0
 800373e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003740:	bf00      	nop
 8003742:	3754      	adds	r7, #84	@ 0x54
 8003744:	46bd      	mov	sp, r7
 8003746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800374a:	4770      	bx	lr

0800374c <UART_SetConfig>:
 800374c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003750:	b0c0      	sub	sp, #256	@ 0x100
 8003752:	af00      	add	r7, sp, #0
 8003754:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8003758:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800375c:	681b      	ldr	r3, [r3, #0]
 800375e:	691b      	ldr	r3, [r3, #16]
 8003760:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8003764:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003768:	68d9      	ldr	r1, [r3, #12]
 800376a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800376e:	681a      	ldr	r2, [r3, #0]
 8003770:	ea40 0301 	orr.w	r3, r0, r1
 8003774:	6113      	str	r3, [r2, #16]
 8003776:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800377a:	689a      	ldr	r2, [r3, #8]
 800377c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003780:	691b      	ldr	r3, [r3, #16]
 8003782:	431a      	orrs	r2, r3
 8003784:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003788:	695b      	ldr	r3, [r3, #20]
 800378a:	431a      	orrs	r2, r3
 800378c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003790:	69db      	ldr	r3, [r3, #28]
 8003792:	4313      	orrs	r3, r2
 8003794:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8003798:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800379c:	681b      	ldr	r3, [r3, #0]
 800379e:	68db      	ldr	r3, [r3, #12]
 80037a0:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80037a4:	f021 010c 	bic.w	r1, r1, #12
 80037a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80037ac:	681a      	ldr	r2, [r3, #0]
 80037ae:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80037b2:	430b      	orrs	r3, r1
 80037b4:	60d3      	str	r3, [r2, #12]
 80037b6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	695b      	ldr	r3, [r3, #20]
 80037be:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80037c2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80037c6:	6999      	ldr	r1, [r3, #24]
 80037c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80037cc:	681a      	ldr	r2, [r3, #0]
 80037ce:	ea40 0301 	orr.w	r3, r0, r1
 80037d2:	6153      	str	r3, [r2, #20]
 80037d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80037d8:	681a      	ldr	r2, [r3, #0]
 80037da:	4b8f      	ldr	r3, [pc, #572]	@ (8003a18 <UART_SetConfig+0x2cc>)
 80037dc:	429a      	cmp	r2, r3
 80037de:	d005      	beq.n	80037ec <UART_SetConfig+0xa0>
 80037e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80037e4:	681a      	ldr	r2, [r3, #0]
 80037e6:	4b8d      	ldr	r3, [pc, #564]	@ (8003a1c <UART_SetConfig+0x2d0>)
 80037e8:	429a      	cmp	r2, r3
 80037ea:	d104      	bne.n	80037f6 <UART_SetConfig+0xaa>
 80037ec:	f7ff fd6c 	bl	80032c8 <HAL_RCC_GetPCLK2Freq>
 80037f0:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80037f4:	e003      	b.n	80037fe <UART_SetConfig+0xb2>
 80037f6:	f7ff fd53 	bl	80032a0 <HAL_RCC_GetPCLK1Freq>
 80037fa:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80037fe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003802:	69db      	ldr	r3, [r3, #28]
 8003804:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003808:	f040 810c 	bne.w	8003a24 <UART_SetConfig+0x2d8>
 800380c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003810:	2200      	movs	r2, #0
 8003812:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8003816:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 800381a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 800381e:	4622      	mov	r2, r4
 8003820:	462b      	mov	r3, r5
 8003822:	1891      	adds	r1, r2, r2
 8003824:	65b9      	str	r1, [r7, #88]	@ 0x58
 8003826:	415b      	adcs	r3, r3
 8003828:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800382a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800382e:	4621      	mov	r1, r4
 8003830:	eb12 0801 	adds.w	r8, r2, r1
 8003834:	4629      	mov	r1, r5
 8003836:	eb43 0901 	adc.w	r9, r3, r1
 800383a:	f04f 0200 	mov.w	r2, #0
 800383e:	f04f 0300 	mov.w	r3, #0
 8003842:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003846:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800384a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800384e:	4690      	mov	r8, r2
 8003850:	4699      	mov	r9, r3
 8003852:	4623      	mov	r3, r4
 8003854:	eb18 0303 	adds.w	r3, r8, r3
 8003858:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800385c:	462b      	mov	r3, r5
 800385e:	eb49 0303 	adc.w	r3, r9, r3
 8003862:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003866:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800386a:	685b      	ldr	r3, [r3, #4]
 800386c:	2200      	movs	r2, #0
 800386e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003872:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8003876:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800387a:	460b      	mov	r3, r1
 800387c:	18db      	adds	r3, r3, r3
 800387e:	653b      	str	r3, [r7, #80]	@ 0x50
 8003880:	4613      	mov	r3, r2
 8003882:	eb42 0303 	adc.w	r3, r2, r3
 8003886:	657b      	str	r3, [r7, #84]	@ 0x54
 8003888:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800388c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8003890:	f7fc ffd8 	bl	8000844 <__aeabi_uldivmod>
 8003894:	4602      	mov	r2, r0
 8003896:	460b      	mov	r3, r1
 8003898:	4b61      	ldr	r3, [pc, #388]	@ (8003a20 <UART_SetConfig+0x2d4>)
 800389a:	fba3 2302 	umull	r2, r3, r3, r2
 800389e:	095b      	lsrs	r3, r3, #5
 80038a0:	011c      	lsls	r4, r3, #4
 80038a2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80038a6:	2200      	movs	r2, #0
 80038a8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80038ac:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80038b0:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80038b4:	4642      	mov	r2, r8
 80038b6:	464b      	mov	r3, r9
 80038b8:	1891      	adds	r1, r2, r2
 80038ba:	64b9      	str	r1, [r7, #72]	@ 0x48
 80038bc:	415b      	adcs	r3, r3
 80038be:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80038c0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80038c4:	4641      	mov	r1, r8
 80038c6:	eb12 0a01 	adds.w	sl, r2, r1
 80038ca:	4649      	mov	r1, r9
 80038cc:	eb43 0b01 	adc.w	fp, r3, r1
 80038d0:	f04f 0200 	mov.w	r2, #0
 80038d4:	f04f 0300 	mov.w	r3, #0
 80038d8:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80038dc:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80038e0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80038e4:	4692      	mov	sl, r2
 80038e6:	469b      	mov	fp, r3
 80038e8:	4643      	mov	r3, r8
 80038ea:	eb1a 0303 	adds.w	r3, sl, r3
 80038ee:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80038f2:	464b      	mov	r3, r9
 80038f4:	eb4b 0303 	adc.w	r3, fp, r3
 80038f8:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80038fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003900:	685b      	ldr	r3, [r3, #4]
 8003902:	2200      	movs	r2, #0
 8003904:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8003908:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 800390c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8003910:	460b      	mov	r3, r1
 8003912:	18db      	adds	r3, r3, r3
 8003914:	643b      	str	r3, [r7, #64]	@ 0x40
 8003916:	4613      	mov	r3, r2
 8003918:	eb42 0303 	adc.w	r3, r2, r3
 800391c:	647b      	str	r3, [r7, #68]	@ 0x44
 800391e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8003922:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8003926:	f7fc ff8d 	bl	8000844 <__aeabi_uldivmod>
 800392a:	4602      	mov	r2, r0
 800392c:	460b      	mov	r3, r1
 800392e:	4611      	mov	r1, r2
 8003930:	4b3b      	ldr	r3, [pc, #236]	@ (8003a20 <UART_SetConfig+0x2d4>)
 8003932:	fba3 2301 	umull	r2, r3, r3, r1
 8003936:	095b      	lsrs	r3, r3, #5
 8003938:	2264      	movs	r2, #100	@ 0x64
 800393a:	fb02 f303 	mul.w	r3, r2, r3
 800393e:	1acb      	subs	r3, r1, r3
 8003940:	00db      	lsls	r3, r3, #3
 8003942:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8003946:	4b36      	ldr	r3, [pc, #216]	@ (8003a20 <UART_SetConfig+0x2d4>)
 8003948:	fba3 2302 	umull	r2, r3, r3, r2
 800394c:	095b      	lsrs	r3, r3, #5
 800394e:	005b      	lsls	r3, r3, #1
 8003950:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8003954:	441c      	add	r4, r3
 8003956:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800395a:	2200      	movs	r2, #0
 800395c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003960:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8003964:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8003968:	4642      	mov	r2, r8
 800396a:	464b      	mov	r3, r9
 800396c:	1891      	adds	r1, r2, r2
 800396e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8003970:	415b      	adcs	r3, r3
 8003972:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003974:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8003978:	4641      	mov	r1, r8
 800397a:	1851      	adds	r1, r2, r1
 800397c:	6339      	str	r1, [r7, #48]	@ 0x30
 800397e:	4649      	mov	r1, r9
 8003980:	414b      	adcs	r3, r1
 8003982:	637b      	str	r3, [r7, #52]	@ 0x34
 8003984:	f04f 0200 	mov.w	r2, #0
 8003988:	f04f 0300 	mov.w	r3, #0
 800398c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8003990:	4659      	mov	r1, fp
 8003992:	00cb      	lsls	r3, r1, #3
 8003994:	4651      	mov	r1, sl
 8003996:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800399a:	4651      	mov	r1, sl
 800399c:	00ca      	lsls	r2, r1, #3
 800399e:	4610      	mov	r0, r2
 80039a0:	4619      	mov	r1, r3
 80039a2:	4603      	mov	r3, r0
 80039a4:	4642      	mov	r2, r8
 80039a6:	189b      	adds	r3, r3, r2
 80039a8:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80039ac:	464b      	mov	r3, r9
 80039ae:	460a      	mov	r2, r1
 80039b0:	eb42 0303 	adc.w	r3, r2, r3
 80039b4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80039b8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80039bc:	685b      	ldr	r3, [r3, #4]
 80039be:	2200      	movs	r2, #0
 80039c0:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80039c4:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80039c8:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80039cc:	460b      	mov	r3, r1
 80039ce:	18db      	adds	r3, r3, r3
 80039d0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80039d2:	4613      	mov	r3, r2
 80039d4:	eb42 0303 	adc.w	r3, r2, r3
 80039d8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80039da:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80039de:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80039e2:	f7fc ff2f 	bl	8000844 <__aeabi_uldivmod>
 80039e6:	4602      	mov	r2, r0
 80039e8:	460b      	mov	r3, r1
 80039ea:	4b0d      	ldr	r3, [pc, #52]	@ (8003a20 <UART_SetConfig+0x2d4>)
 80039ec:	fba3 1302 	umull	r1, r3, r3, r2
 80039f0:	095b      	lsrs	r3, r3, #5
 80039f2:	2164      	movs	r1, #100	@ 0x64
 80039f4:	fb01 f303 	mul.w	r3, r1, r3
 80039f8:	1ad3      	subs	r3, r2, r3
 80039fa:	00db      	lsls	r3, r3, #3
 80039fc:	3332      	adds	r3, #50	@ 0x32
 80039fe:	4a08      	ldr	r2, [pc, #32]	@ (8003a20 <UART_SetConfig+0x2d4>)
 8003a00:	fba2 2303 	umull	r2, r3, r2, r3
 8003a04:	095b      	lsrs	r3, r3, #5
 8003a06:	f003 0207 	and.w	r2, r3, #7
 8003a0a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	4422      	add	r2, r4
 8003a12:	609a      	str	r2, [r3, #8]
 8003a14:	e106      	b.n	8003c24 <UART_SetConfig+0x4d8>
 8003a16:	bf00      	nop
 8003a18:	40011000 	.word	0x40011000
 8003a1c:	40011400 	.word	0x40011400
 8003a20:	51eb851f 	.word	0x51eb851f
 8003a24:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003a28:	2200      	movs	r2, #0
 8003a2a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003a2e:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8003a32:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8003a36:	4642      	mov	r2, r8
 8003a38:	464b      	mov	r3, r9
 8003a3a:	1891      	adds	r1, r2, r2
 8003a3c:	6239      	str	r1, [r7, #32]
 8003a3e:	415b      	adcs	r3, r3
 8003a40:	627b      	str	r3, [r7, #36]	@ 0x24
 8003a42:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8003a46:	4641      	mov	r1, r8
 8003a48:	1854      	adds	r4, r2, r1
 8003a4a:	4649      	mov	r1, r9
 8003a4c:	eb43 0501 	adc.w	r5, r3, r1
 8003a50:	f04f 0200 	mov.w	r2, #0
 8003a54:	f04f 0300 	mov.w	r3, #0
 8003a58:	00eb      	lsls	r3, r5, #3
 8003a5a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003a5e:	00e2      	lsls	r2, r4, #3
 8003a60:	4614      	mov	r4, r2
 8003a62:	461d      	mov	r5, r3
 8003a64:	4643      	mov	r3, r8
 8003a66:	18e3      	adds	r3, r4, r3
 8003a68:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003a6c:	464b      	mov	r3, r9
 8003a6e:	eb45 0303 	adc.w	r3, r5, r3
 8003a72:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003a76:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003a7a:	685b      	ldr	r3, [r3, #4]
 8003a7c:	2200      	movs	r2, #0
 8003a7e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003a82:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8003a86:	f04f 0200 	mov.w	r2, #0
 8003a8a:	f04f 0300 	mov.w	r3, #0
 8003a8e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8003a92:	4629      	mov	r1, r5
 8003a94:	008b      	lsls	r3, r1, #2
 8003a96:	4621      	mov	r1, r4
 8003a98:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003a9c:	4621      	mov	r1, r4
 8003a9e:	008a      	lsls	r2, r1, #2
 8003aa0:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8003aa4:	f7fc fece 	bl	8000844 <__aeabi_uldivmod>
 8003aa8:	4602      	mov	r2, r0
 8003aaa:	460b      	mov	r3, r1
 8003aac:	4b60      	ldr	r3, [pc, #384]	@ (8003c30 <UART_SetConfig+0x4e4>)
 8003aae:	fba3 2302 	umull	r2, r3, r3, r2
 8003ab2:	095b      	lsrs	r3, r3, #5
 8003ab4:	011c      	lsls	r4, r3, #4
 8003ab6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003aba:	2200      	movs	r2, #0
 8003abc:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003ac0:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8003ac4:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8003ac8:	4642      	mov	r2, r8
 8003aca:	464b      	mov	r3, r9
 8003acc:	1891      	adds	r1, r2, r2
 8003ace:	61b9      	str	r1, [r7, #24]
 8003ad0:	415b      	adcs	r3, r3
 8003ad2:	61fb      	str	r3, [r7, #28]
 8003ad4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003ad8:	4641      	mov	r1, r8
 8003ada:	1851      	adds	r1, r2, r1
 8003adc:	6139      	str	r1, [r7, #16]
 8003ade:	4649      	mov	r1, r9
 8003ae0:	414b      	adcs	r3, r1
 8003ae2:	617b      	str	r3, [r7, #20]
 8003ae4:	f04f 0200 	mov.w	r2, #0
 8003ae8:	f04f 0300 	mov.w	r3, #0
 8003aec:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003af0:	4659      	mov	r1, fp
 8003af2:	00cb      	lsls	r3, r1, #3
 8003af4:	4651      	mov	r1, sl
 8003af6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003afa:	4651      	mov	r1, sl
 8003afc:	00ca      	lsls	r2, r1, #3
 8003afe:	4610      	mov	r0, r2
 8003b00:	4619      	mov	r1, r3
 8003b02:	4603      	mov	r3, r0
 8003b04:	4642      	mov	r2, r8
 8003b06:	189b      	adds	r3, r3, r2
 8003b08:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003b0c:	464b      	mov	r3, r9
 8003b0e:	460a      	mov	r2, r1
 8003b10:	eb42 0303 	adc.w	r3, r2, r3
 8003b14:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003b18:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003b1c:	685b      	ldr	r3, [r3, #4]
 8003b1e:	2200      	movs	r2, #0
 8003b20:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003b22:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8003b24:	f04f 0200 	mov.w	r2, #0
 8003b28:	f04f 0300 	mov.w	r3, #0
 8003b2c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8003b30:	4649      	mov	r1, r9
 8003b32:	008b      	lsls	r3, r1, #2
 8003b34:	4641      	mov	r1, r8
 8003b36:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003b3a:	4641      	mov	r1, r8
 8003b3c:	008a      	lsls	r2, r1, #2
 8003b3e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8003b42:	f7fc fe7f 	bl	8000844 <__aeabi_uldivmod>
 8003b46:	4602      	mov	r2, r0
 8003b48:	460b      	mov	r3, r1
 8003b4a:	4611      	mov	r1, r2
 8003b4c:	4b38      	ldr	r3, [pc, #224]	@ (8003c30 <UART_SetConfig+0x4e4>)
 8003b4e:	fba3 2301 	umull	r2, r3, r3, r1
 8003b52:	095b      	lsrs	r3, r3, #5
 8003b54:	2264      	movs	r2, #100	@ 0x64
 8003b56:	fb02 f303 	mul.w	r3, r2, r3
 8003b5a:	1acb      	subs	r3, r1, r3
 8003b5c:	011b      	lsls	r3, r3, #4
 8003b5e:	3332      	adds	r3, #50	@ 0x32
 8003b60:	4a33      	ldr	r2, [pc, #204]	@ (8003c30 <UART_SetConfig+0x4e4>)
 8003b62:	fba2 2303 	umull	r2, r3, r2, r3
 8003b66:	095b      	lsrs	r3, r3, #5
 8003b68:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003b6c:	441c      	add	r4, r3
 8003b6e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003b72:	2200      	movs	r2, #0
 8003b74:	673b      	str	r3, [r7, #112]	@ 0x70
 8003b76:	677a      	str	r2, [r7, #116]	@ 0x74
 8003b78:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8003b7c:	4642      	mov	r2, r8
 8003b7e:	464b      	mov	r3, r9
 8003b80:	1891      	adds	r1, r2, r2
 8003b82:	60b9      	str	r1, [r7, #8]
 8003b84:	415b      	adcs	r3, r3
 8003b86:	60fb      	str	r3, [r7, #12]
 8003b88:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003b8c:	4641      	mov	r1, r8
 8003b8e:	1851      	adds	r1, r2, r1
 8003b90:	6039      	str	r1, [r7, #0]
 8003b92:	4649      	mov	r1, r9
 8003b94:	414b      	adcs	r3, r1
 8003b96:	607b      	str	r3, [r7, #4]
 8003b98:	f04f 0200 	mov.w	r2, #0
 8003b9c:	f04f 0300 	mov.w	r3, #0
 8003ba0:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8003ba4:	4659      	mov	r1, fp
 8003ba6:	00cb      	lsls	r3, r1, #3
 8003ba8:	4651      	mov	r1, sl
 8003baa:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003bae:	4651      	mov	r1, sl
 8003bb0:	00ca      	lsls	r2, r1, #3
 8003bb2:	4610      	mov	r0, r2
 8003bb4:	4619      	mov	r1, r3
 8003bb6:	4603      	mov	r3, r0
 8003bb8:	4642      	mov	r2, r8
 8003bba:	189b      	adds	r3, r3, r2
 8003bbc:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003bbe:	464b      	mov	r3, r9
 8003bc0:	460a      	mov	r2, r1
 8003bc2:	eb42 0303 	adc.w	r3, r2, r3
 8003bc6:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003bc8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003bcc:	685b      	ldr	r3, [r3, #4]
 8003bce:	2200      	movs	r2, #0
 8003bd0:	663b      	str	r3, [r7, #96]	@ 0x60
 8003bd2:	667a      	str	r2, [r7, #100]	@ 0x64
 8003bd4:	f04f 0200 	mov.w	r2, #0
 8003bd8:	f04f 0300 	mov.w	r3, #0
 8003bdc:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8003be0:	4649      	mov	r1, r9
 8003be2:	008b      	lsls	r3, r1, #2
 8003be4:	4641      	mov	r1, r8
 8003be6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003bea:	4641      	mov	r1, r8
 8003bec:	008a      	lsls	r2, r1, #2
 8003bee:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8003bf2:	f7fc fe27 	bl	8000844 <__aeabi_uldivmod>
 8003bf6:	4602      	mov	r2, r0
 8003bf8:	460b      	mov	r3, r1
 8003bfa:	4b0d      	ldr	r3, [pc, #52]	@ (8003c30 <UART_SetConfig+0x4e4>)
 8003bfc:	fba3 1302 	umull	r1, r3, r3, r2
 8003c00:	095b      	lsrs	r3, r3, #5
 8003c02:	2164      	movs	r1, #100	@ 0x64
 8003c04:	fb01 f303 	mul.w	r3, r1, r3
 8003c08:	1ad3      	subs	r3, r2, r3
 8003c0a:	011b      	lsls	r3, r3, #4
 8003c0c:	3332      	adds	r3, #50	@ 0x32
 8003c0e:	4a08      	ldr	r2, [pc, #32]	@ (8003c30 <UART_SetConfig+0x4e4>)
 8003c10:	fba2 2303 	umull	r2, r3, r2, r3
 8003c14:	095b      	lsrs	r3, r3, #5
 8003c16:	f003 020f 	and.w	r2, r3, #15
 8003c1a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	4422      	add	r2, r4
 8003c22:	609a      	str	r2, [r3, #8]
 8003c24:	bf00      	nop
 8003c26:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8003c2a:	46bd      	mov	sp, r7
 8003c2c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003c30:	51eb851f 	.word	0x51eb851f

08003c34 <memset>:
 8003c34:	4402      	add	r2, r0
 8003c36:	4603      	mov	r3, r0
 8003c38:	4293      	cmp	r3, r2
 8003c3a:	d100      	bne.n	8003c3e <memset+0xa>
 8003c3c:	4770      	bx	lr
 8003c3e:	f803 1b01 	strb.w	r1, [r3], #1
 8003c42:	e7f9      	b.n	8003c38 <memset+0x4>

08003c44 <__libc_init_array>:
 8003c44:	b570      	push	{r4, r5, r6, lr}
 8003c46:	4d0d      	ldr	r5, [pc, #52]	@ (8003c7c <__libc_init_array+0x38>)
 8003c48:	4c0d      	ldr	r4, [pc, #52]	@ (8003c80 <__libc_init_array+0x3c>)
 8003c4a:	1b64      	subs	r4, r4, r5
 8003c4c:	10a4      	asrs	r4, r4, #2
 8003c4e:	2600      	movs	r6, #0
 8003c50:	42a6      	cmp	r6, r4
 8003c52:	d109      	bne.n	8003c68 <__libc_init_array+0x24>
 8003c54:	4d0b      	ldr	r5, [pc, #44]	@ (8003c84 <__libc_init_array+0x40>)
 8003c56:	4c0c      	ldr	r4, [pc, #48]	@ (8003c88 <__libc_init_array+0x44>)
 8003c58:	f000 fd8c 	bl	8004774 <_init>
 8003c5c:	1b64      	subs	r4, r4, r5
 8003c5e:	10a4      	asrs	r4, r4, #2
 8003c60:	2600      	movs	r6, #0
 8003c62:	42a6      	cmp	r6, r4
 8003c64:	d105      	bne.n	8003c72 <__libc_init_array+0x2e>
 8003c66:	bd70      	pop	{r4, r5, r6, pc}
 8003c68:	f855 3b04 	ldr.w	r3, [r5], #4
 8003c6c:	4798      	blx	r3
 8003c6e:	3601      	adds	r6, #1
 8003c70:	e7ee      	b.n	8003c50 <__libc_init_array+0xc>
 8003c72:	f855 3b04 	ldr.w	r3, [r5], #4
 8003c76:	4798      	blx	r3
 8003c78:	3601      	adds	r6, #1
 8003c7a:	e7f2      	b.n	8003c62 <__libc_init_array+0x1e>
 8003c7c:	08004b84 	.word	0x08004b84
 8003c80:	08004b84 	.word	0x08004b84
 8003c84:	08004b84 	.word	0x08004b84
 8003c88:	08004b88 	.word	0x08004b88

08003c8c <cosf>:
 8003c8c:	ee10 3a10 	vmov	r3, s0
 8003c90:	b507      	push	{r0, r1, r2, lr}
 8003c92:	4a1e      	ldr	r2, [pc, #120]	@ (8003d0c <cosf+0x80>)
 8003c94:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003c98:	4293      	cmp	r3, r2
 8003c9a:	d806      	bhi.n	8003caa <cosf+0x1e>
 8003c9c:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8003d10 <cosf+0x84>
 8003ca0:	b003      	add	sp, #12
 8003ca2:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ca6:	f000 b87b 	b.w	8003da0 <__kernel_cosf>
 8003caa:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8003cae:	d304      	bcc.n	8003cba <cosf+0x2e>
 8003cb0:	ee30 0a40 	vsub.f32	s0, s0, s0
 8003cb4:	b003      	add	sp, #12
 8003cb6:	f85d fb04 	ldr.w	pc, [sp], #4
 8003cba:	4668      	mov	r0, sp
 8003cbc:	f000 f910 	bl	8003ee0 <__ieee754_rem_pio2f>
 8003cc0:	f000 0003 	and.w	r0, r0, #3
 8003cc4:	2801      	cmp	r0, #1
 8003cc6:	d009      	beq.n	8003cdc <cosf+0x50>
 8003cc8:	2802      	cmp	r0, #2
 8003cca:	d010      	beq.n	8003cee <cosf+0x62>
 8003ccc:	b9b0      	cbnz	r0, 8003cfc <cosf+0x70>
 8003cce:	eddd 0a01 	vldr	s1, [sp, #4]
 8003cd2:	ed9d 0a00 	vldr	s0, [sp]
 8003cd6:	f000 f863 	bl	8003da0 <__kernel_cosf>
 8003cda:	e7eb      	b.n	8003cb4 <cosf+0x28>
 8003cdc:	eddd 0a01 	vldr	s1, [sp, #4]
 8003ce0:	ed9d 0a00 	vldr	s0, [sp]
 8003ce4:	f000 f8b4 	bl	8003e50 <__kernel_sinf>
 8003ce8:	eeb1 0a40 	vneg.f32	s0, s0
 8003cec:	e7e2      	b.n	8003cb4 <cosf+0x28>
 8003cee:	eddd 0a01 	vldr	s1, [sp, #4]
 8003cf2:	ed9d 0a00 	vldr	s0, [sp]
 8003cf6:	f000 f853 	bl	8003da0 <__kernel_cosf>
 8003cfa:	e7f5      	b.n	8003ce8 <cosf+0x5c>
 8003cfc:	eddd 0a01 	vldr	s1, [sp, #4]
 8003d00:	ed9d 0a00 	vldr	s0, [sp]
 8003d04:	2001      	movs	r0, #1
 8003d06:	f000 f8a3 	bl	8003e50 <__kernel_sinf>
 8003d0a:	e7d3      	b.n	8003cb4 <cosf+0x28>
 8003d0c:	3f490fd8 	.word	0x3f490fd8
 8003d10:	00000000 	.word	0x00000000

08003d14 <sinf>:
 8003d14:	ee10 3a10 	vmov	r3, s0
 8003d18:	b507      	push	{r0, r1, r2, lr}
 8003d1a:	4a1f      	ldr	r2, [pc, #124]	@ (8003d98 <sinf+0x84>)
 8003d1c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003d20:	4293      	cmp	r3, r2
 8003d22:	d807      	bhi.n	8003d34 <sinf+0x20>
 8003d24:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8003d9c <sinf+0x88>
 8003d28:	2000      	movs	r0, #0
 8003d2a:	b003      	add	sp, #12
 8003d2c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003d30:	f000 b88e 	b.w	8003e50 <__kernel_sinf>
 8003d34:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8003d38:	d304      	bcc.n	8003d44 <sinf+0x30>
 8003d3a:	ee30 0a40 	vsub.f32	s0, s0, s0
 8003d3e:	b003      	add	sp, #12
 8003d40:	f85d fb04 	ldr.w	pc, [sp], #4
 8003d44:	4668      	mov	r0, sp
 8003d46:	f000 f8cb 	bl	8003ee0 <__ieee754_rem_pio2f>
 8003d4a:	f000 0003 	and.w	r0, r0, #3
 8003d4e:	2801      	cmp	r0, #1
 8003d50:	d00a      	beq.n	8003d68 <sinf+0x54>
 8003d52:	2802      	cmp	r0, #2
 8003d54:	d00f      	beq.n	8003d76 <sinf+0x62>
 8003d56:	b9c0      	cbnz	r0, 8003d8a <sinf+0x76>
 8003d58:	eddd 0a01 	vldr	s1, [sp, #4]
 8003d5c:	ed9d 0a00 	vldr	s0, [sp]
 8003d60:	2001      	movs	r0, #1
 8003d62:	f000 f875 	bl	8003e50 <__kernel_sinf>
 8003d66:	e7ea      	b.n	8003d3e <sinf+0x2a>
 8003d68:	eddd 0a01 	vldr	s1, [sp, #4]
 8003d6c:	ed9d 0a00 	vldr	s0, [sp]
 8003d70:	f000 f816 	bl	8003da0 <__kernel_cosf>
 8003d74:	e7e3      	b.n	8003d3e <sinf+0x2a>
 8003d76:	eddd 0a01 	vldr	s1, [sp, #4]
 8003d7a:	ed9d 0a00 	vldr	s0, [sp]
 8003d7e:	2001      	movs	r0, #1
 8003d80:	f000 f866 	bl	8003e50 <__kernel_sinf>
 8003d84:	eeb1 0a40 	vneg.f32	s0, s0
 8003d88:	e7d9      	b.n	8003d3e <sinf+0x2a>
 8003d8a:	eddd 0a01 	vldr	s1, [sp, #4]
 8003d8e:	ed9d 0a00 	vldr	s0, [sp]
 8003d92:	f000 f805 	bl	8003da0 <__kernel_cosf>
 8003d96:	e7f5      	b.n	8003d84 <sinf+0x70>
 8003d98:	3f490fd8 	.word	0x3f490fd8
 8003d9c:	00000000 	.word	0x00000000

08003da0 <__kernel_cosf>:
 8003da0:	ee10 3a10 	vmov	r3, s0
 8003da4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003da8:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8003dac:	eef0 6a40 	vmov.f32	s13, s0
 8003db0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8003db4:	d204      	bcs.n	8003dc0 <__kernel_cosf+0x20>
 8003db6:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8003dba:	ee17 2a90 	vmov	r2, s15
 8003dbe:	b342      	cbz	r2, 8003e12 <__kernel_cosf+0x72>
 8003dc0:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8003dc4:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8003e30 <__kernel_cosf+0x90>
 8003dc8:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8003e34 <__kernel_cosf+0x94>
 8003dcc:	4a1a      	ldr	r2, [pc, #104]	@ (8003e38 <__kernel_cosf+0x98>)
 8003dce:	eea7 6a27 	vfma.f32	s12, s14, s15
 8003dd2:	4293      	cmp	r3, r2
 8003dd4:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8003e3c <__kernel_cosf+0x9c>
 8003dd8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8003ddc:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8003e40 <__kernel_cosf+0xa0>
 8003de0:	eea7 6a87 	vfma.f32	s12, s15, s14
 8003de4:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8003e44 <__kernel_cosf+0xa4>
 8003de8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8003dec:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8003e48 <__kernel_cosf+0xa8>
 8003df0:	eea7 6a87 	vfma.f32	s12, s15, s14
 8003df4:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8003df8:	ee26 6a07 	vmul.f32	s12, s12, s14
 8003dfc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8003e00:	eee7 0a06 	vfma.f32	s1, s14, s12
 8003e04:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003e08:	d804      	bhi.n	8003e14 <__kernel_cosf+0x74>
 8003e0a:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8003e0e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8003e12:	4770      	bx	lr
 8003e14:	4a0d      	ldr	r2, [pc, #52]	@ (8003e4c <__kernel_cosf+0xac>)
 8003e16:	4293      	cmp	r3, r2
 8003e18:	bf9a      	itte	ls
 8003e1a:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8003e1e:	ee07 3a10 	vmovls	s14, r3
 8003e22:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8003e26:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003e2a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003e2e:	e7ec      	b.n	8003e0a <__kernel_cosf+0x6a>
 8003e30:	ad47d74e 	.word	0xad47d74e
 8003e34:	310f74f6 	.word	0x310f74f6
 8003e38:	3e999999 	.word	0x3e999999
 8003e3c:	b493f27c 	.word	0xb493f27c
 8003e40:	37d00d01 	.word	0x37d00d01
 8003e44:	bab60b61 	.word	0xbab60b61
 8003e48:	3d2aaaab 	.word	0x3d2aaaab
 8003e4c:	3f480000 	.word	0x3f480000

08003e50 <__kernel_sinf>:
 8003e50:	ee10 3a10 	vmov	r3, s0
 8003e54:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003e58:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8003e5c:	d204      	bcs.n	8003e68 <__kernel_sinf+0x18>
 8003e5e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003e62:	ee17 3a90 	vmov	r3, s15
 8003e66:	b35b      	cbz	r3, 8003ec0 <__kernel_sinf+0x70>
 8003e68:	ee20 7a00 	vmul.f32	s14, s0, s0
 8003e6c:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8003ec4 <__kernel_sinf+0x74>
 8003e70:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8003ec8 <__kernel_sinf+0x78>
 8003e74:	eea7 6a27 	vfma.f32	s12, s14, s15
 8003e78:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8003ecc <__kernel_sinf+0x7c>
 8003e7c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8003e80:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8003ed0 <__kernel_sinf+0x80>
 8003e84:	eea7 6a87 	vfma.f32	s12, s15, s14
 8003e88:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8003ed4 <__kernel_sinf+0x84>
 8003e8c:	ee60 6a07 	vmul.f32	s13, s0, s14
 8003e90:	eee6 7a07 	vfma.f32	s15, s12, s14
 8003e94:	b930      	cbnz	r0, 8003ea4 <__kernel_sinf+0x54>
 8003e96:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8003ed8 <__kernel_sinf+0x88>
 8003e9a:	eea7 6a27 	vfma.f32	s12, s14, s15
 8003e9e:	eea6 0a26 	vfma.f32	s0, s12, s13
 8003ea2:	4770      	bx	lr
 8003ea4:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8003ea8:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8003eac:	eee0 7a86 	vfma.f32	s15, s1, s12
 8003eb0:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8003eb4:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8003edc <__kernel_sinf+0x8c>
 8003eb8:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8003ebc:	ee30 0a60 	vsub.f32	s0, s0, s1
 8003ec0:	4770      	bx	lr
 8003ec2:	bf00      	nop
 8003ec4:	2f2ec9d3 	.word	0x2f2ec9d3
 8003ec8:	b2d72f34 	.word	0xb2d72f34
 8003ecc:	3638ef1b 	.word	0x3638ef1b
 8003ed0:	b9500d01 	.word	0xb9500d01
 8003ed4:	3c088889 	.word	0x3c088889
 8003ed8:	be2aaaab 	.word	0xbe2aaaab
 8003edc:	3e2aaaab 	.word	0x3e2aaaab

08003ee0 <__ieee754_rem_pio2f>:
 8003ee0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003ee2:	ee10 6a10 	vmov	r6, s0
 8003ee6:	4b88      	ldr	r3, [pc, #544]	@ (8004108 <__ieee754_rem_pio2f+0x228>)
 8003ee8:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8003eec:	429d      	cmp	r5, r3
 8003eee:	b087      	sub	sp, #28
 8003ef0:	4604      	mov	r4, r0
 8003ef2:	d805      	bhi.n	8003f00 <__ieee754_rem_pio2f+0x20>
 8003ef4:	2300      	movs	r3, #0
 8003ef6:	ed80 0a00 	vstr	s0, [r0]
 8003efa:	6043      	str	r3, [r0, #4]
 8003efc:	2000      	movs	r0, #0
 8003efe:	e022      	b.n	8003f46 <__ieee754_rem_pio2f+0x66>
 8003f00:	4b82      	ldr	r3, [pc, #520]	@ (800410c <__ieee754_rem_pio2f+0x22c>)
 8003f02:	429d      	cmp	r5, r3
 8003f04:	d83a      	bhi.n	8003f7c <__ieee754_rem_pio2f+0x9c>
 8003f06:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8003f0a:	2e00      	cmp	r6, #0
 8003f0c:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8004110 <__ieee754_rem_pio2f+0x230>
 8003f10:	4a80      	ldr	r2, [pc, #512]	@ (8004114 <__ieee754_rem_pio2f+0x234>)
 8003f12:	f023 030f 	bic.w	r3, r3, #15
 8003f16:	dd18      	ble.n	8003f4a <__ieee754_rem_pio2f+0x6a>
 8003f18:	4293      	cmp	r3, r2
 8003f1a:	ee70 7a47 	vsub.f32	s15, s0, s14
 8003f1e:	bf09      	itett	eq
 8003f20:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8004118 <__ieee754_rem_pio2f+0x238>
 8003f24:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 800411c <__ieee754_rem_pio2f+0x23c>
 8003f28:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8004120 <__ieee754_rem_pio2f+0x240>
 8003f2c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8003f30:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8003f34:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003f38:	ed80 7a00 	vstr	s14, [r0]
 8003f3c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8003f40:	edc0 7a01 	vstr	s15, [r0, #4]
 8003f44:	2001      	movs	r0, #1
 8003f46:	b007      	add	sp, #28
 8003f48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f4a:	4293      	cmp	r3, r2
 8003f4c:	ee70 7a07 	vadd.f32	s15, s0, s14
 8003f50:	bf09      	itett	eq
 8003f52:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8004118 <__ieee754_rem_pio2f+0x238>
 8003f56:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 800411c <__ieee754_rem_pio2f+0x23c>
 8003f5a:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8004120 <__ieee754_rem_pio2f+0x240>
 8003f5e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8003f62:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8003f66:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003f6a:	ed80 7a00 	vstr	s14, [r0]
 8003f6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8003f72:	edc0 7a01 	vstr	s15, [r0, #4]
 8003f76:	f04f 30ff 	mov.w	r0, #4294967295
 8003f7a:	e7e4      	b.n	8003f46 <__ieee754_rem_pio2f+0x66>
 8003f7c:	4b69      	ldr	r3, [pc, #420]	@ (8004124 <__ieee754_rem_pio2f+0x244>)
 8003f7e:	429d      	cmp	r5, r3
 8003f80:	d873      	bhi.n	800406a <__ieee754_rem_pio2f+0x18a>
 8003f82:	f000 f8dd 	bl	8004140 <fabsf>
 8003f86:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8004128 <__ieee754_rem_pio2f+0x248>
 8003f8a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8003f8e:	eee0 7a07 	vfma.f32	s15, s0, s14
 8003f92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f96:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003f9a:	ee17 0a90 	vmov	r0, s15
 8003f9e:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8004110 <__ieee754_rem_pio2f+0x230>
 8003fa2:	eea7 0a67 	vfms.f32	s0, s14, s15
 8003fa6:	281f      	cmp	r0, #31
 8003fa8:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 800411c <__ieee754_rem_pio2f+0x23c>
 8003fac:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003fb0:	eeb1 6a47 	vneg.f32	s12, s14
 8003fb4:	ee70 6a67 	vsub.f32	s13, s0, s15
 8003fb8:	ee16 1a90 	vmov	r1, s13
 8003fbc:	dc09      	bgt.n	8003fd2 <__ieee754_rem_pio2f+0xf2>
 8003fbe:	4a5b      	ldr	r2, [pc, #364]	@ (800412c <__ieee754_rem_pio2f+0x24c>)
 8003fc0:	1e47      	subs	r7, r0, #1
 8003fc2:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8003fc6:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8003fca:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8003fce:	4293      	cmp	r3, r2
 8003fd0:	d107      	bne.n	8003fe2 <__ieee754_rem_pio2f+0x102>
 8003fd2:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8003fd6:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8003fda:	2a08      	cmp	r2, #8
 8003fdc:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8003fe0:	dc14      	bgt.n	800400c <__ieee754_rem_pio2f+0x12c>
 8003fe2:	6021      	str	r1, [r4, #0]
 8003fe4:	ed94 7a00 	vldr	s14, [r4]
 8003fe8:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003fec:	2e00      	cmp	r6, #0
 8003fee:	ee30 0a67 	vsub.f32	s0, s0, s15
 8003ff2:	ed84 0a01 	vstr	s0, [r4, #4]
 8003ff6:	daa6      	bge.n	8003f46 <__ieee754_rem_pio2f+0x66>
 8003ff8:	eeb1 7a47 	vneg.f32	s14, s14
 8003ffc:	eeb1 0a40 	vneg.f32	s0, s0
 8004000:	ed84 7a00 	vstr	s14, [r4]
 8004004:	ed84 0a01 	vstr	s0, [r4, #4]
 8004008:	4240      	negs	r0, r0
 800400a:	e79c      	b.n	8003f46 <__ieee754_rem_pio2f+0x66>
 800400c:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8004118 <__ieee754_rem_pio2f+0x238>
 8004010:	eef0 6a40 	vmov.f32	s13, s0
 8004014:	eee6 6a25 	vfma.f32	s13, s12, s11
 8004018:	ee70 7a66 	vsub.f32	s15, s0, s13
 800401c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8004020:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8004120 <__ieee754_rem_pio2f+0x240>
 8004024:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8004028:	ee76 5ae7 	vsub.f32	s11, s13, s15
 800402c:	ee15 2a90 	vmov	r2, s11
 8004030:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8004034:	1a5b      	subs	r3, r3, r1
 8004036:	2b19      	cmp	r3, #25
 8004038:	dc04      	bgt.n	8004044 <__ieee754_rem_pio2f+0x164>
 800403a:	edc4 5a00 	vstr	s11, [r4]
 800403e:	eeb0 0a66 	vmov.f32	s0, s13
 8004042:	e7cf      	b.n	8003fe4 <__ieee754_rem_pio2f+0x104>
 8004044:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8004130 <__ieee754_rem_pio2f+0x250>
 8004048:	eeb0 0a66 	vmov.f32	s0, s13
 800404c:	eea6 0a25 	vfma.f32	s0, s12, s11
 8004050:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8004054:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8004134 <__ieee754_rem_pio2f+0x254>
 8004058:	eee6 7a25 	vfma.f32	s15, s12, s11
 800405c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8004060:	ee30 7a67 	vsub.f32	s14, s0, s15
 8004064:	ed84 7a00 	vstr	s14, [r4]
 8004068:	e7bc      	b.n	8003fe4 <__ieee754_rem_pio2f+0x104>
 800406a:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 800406e:	d306      	bcc.n	800407e <__ieee754_rem_pio2f+0x19e>
 8004070:	ee70 7a40 	vsub.f32	s15, s0, s0
 8004074:	edc0 7a01 	vstr	s15, [r0, #4]
 8004078:	edc0 7a00 	vstr	s15, [r0]
 800407c:	e73e      	b.n	8003efc <__ieee754_rem_pio2f+0x1c>
 800407e:	15ea      	asrs	r2, r5, #23
 8004080:	3a86      	subs	r2, #134	@ 0x86
 8004082:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8004086:	ee07 3a90 	vmov	s15, r3
 800408a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800408e:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8004138 <__ieee754_rem_pio2f+0x258>
 8004092:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8004096:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800409a:	ed8d 7a03 	vstr	s14, [sp, #12]
 800409e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80040a2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80040a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80040aa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80040ae:	ed8d 7a04 	vstr	s14, [sp, #16]
 80040b2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80040b6:	eef5 7a40 	vcmp.f32	s15, #0.0
 80040ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80040be:	edcd 7a05 	vstr	s15, [sp, #20]
 80040c2:	d11e      	bne.n	8004102 <__ieee754_rem_pio2f+0x222>
 80040c4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80040c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80040cc:	bf0c      	ite	eq
 80040ce:	2301      	moveq	r3, #1
 80040d0:	2302      	movne	r3, #2
 80040d2:	491a      	ldr	r1, [pc, #104]	@ (800413c <__ieee754_rem_pio2f+0x25c>)
 80040d4:	9101      	str	r1, [sp, #4]
 80040d6:	2102      	movs	r1, #2
 80040d8:	9100      	str	r1, [sp, #0]
 80040da:	a803      	add	r0, sp, #12
 80040dc:	4621      	mov	r1, r4
 80040de:	f000 f837 	bl	8004150 <__kernel_rem_pio2f>
 80040e2:	2e00      	cmp	r6, #0
 80040e4:	f6bf af2f 	bge.w	8003f46 <__ieee754_rem_pio2f+0x66>
 80040e8:	edd4 7a00 	vldr	s15, [r4]
 80040ec:	eef1 7a67 	vneg.f32	s15, s15
 80040f0:	edc4 7a00 	vstr	s15, [r4]
 80040f4:	edd4 7a01 	vldr	s15, [r4, #4]
 80040f8:	eef1 7a67 	vneg.f32	s15, s15
 80040fc:	edc4 7a01 	vstr	s15, [r4, #4]
 8004100:	e782      	b.n	8004008 <__ieee754_rem_pio2f+0x128>
 8004102:	2303      	movs	r3, #3
 8004104:	e7e5      	b.n	80040d2 <__ieee754_rem_pio2f+0x1f2>
 8004106:	bf00      	nop
 8004108:	3f490fd8 	.word	0x3f490fd8
 800410c:	4016cbe3 	.word	0x4016cbe3
 8004110:	3fc90f80 	.word	0x3fc90f80
 8004114:	3fc90fd0 	.word	0x3fc90fd0
 8004118:	37354400 	.word	0x37354400
 800411c:	37354443 	.word	0x37354443
 8004120:	2e85a308 	.word	0x2e85a308
 8004124:	43490f80 	.word	0x43490f80
 8004128:	3f22f984 	.word	0x3f22f984
 800412c:	080047ac 	.word	0x080047ac
 8004130:	2e85a300 	.word	0x2e85a300
 8004134:	248d3132 	.word	0x248d3132
 8004138:	43800000 	.word	0x43800000
 800413c:	0800482c 	.word	0x0800482c

08004140 <fabsf>:
 8004140:	ee10 3a10 	vmov	r3, s0
 8004144:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8004148:	ee00 3a10 	vmov	s0, r3
 800414c:	4770      	bx	lr
	...

08004150 <__kernel_rem_pio2f>:
 8004150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004154:	ed2d 8b04 	vpush	{d8-d9}
 8004158:	b0d9      	sub	sp, #356	@ 0x164
 800415a:	4690      	mov	r8, r2
 800415c:	9001      	str	r0, [sp, #4]
 800415e:	4ab6      	ldr	r2, [pc, #728]	@ (8004438 <__kernel_rem_pio2f+0x2e8>)
 8004160:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8004162:	f118 0f04 	cmn.w	r8, #4
 8004166:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 800416a:	460f      	mov	r7, r1
 800416c:	f103 3bff 	add.w	fp, r3, #4294967295
 8004170:	db26      	blt.n	80041c0 <__kernel_rem_pio2f+0x70>
 8004172:	f1b8 0203 	subs.w	r2, r8, #3
 8004176:	bf48      	it	mi
 8004178:	f108 0204 	addmi.w	r2, r8, #4
 800417c:	10d2      	asrs	r2, r2, #3
 800417e:	1c55      	adds	r5, r2, #1
 8004180:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8004182:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8004448 <__kernel_rem_pio2f+0x2f8>
 8004186:	00e8      	lsls	r0, r5, #3
 8004188:	eba2 060b 	sub.w	r6, r2, fp
 800418c:	9002      	str	r0, [sp, #8]
 800418e:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8004192:	eb0a 0c0b 	add.w	ip, sl, fp
 8004196:	ac1c      	add	r4, sp, #112	@ 0x70
 8004198:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 800419c:	2000      	movs	r0, #0
 800419e:	4560      	cmp	r0, ip
 80041a0:	dd10      	ble.n	80041c4 <__kernel_rem_pio2f+0x74>
 80041a2:	a91c      	add	r1, sp, #112	@ 0x70
 80041a4:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80041a8:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 80041ac:	2600      	movs	r6, #0
 80041ae:	4556      	cmp	r6, sl
 80041b0:	dc24      	bgt.n	80041fc <__kernel_rem_pio2f+0xac>
 80041b2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80041b6:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8004448 <__kernel_rem_pio2f+0x2f8>
 80041ba:	4684      	mov	ip, r0
 80041bc:	2400      	movs	r4, #0
 80041be:	e016      	b.n	80041ee <__kernel_rem_pio2f+0x9e>
 80041c0:	2200      	movs	r2, #0
 80041c2:	e7dc      	b.n	800417e <__kernel_rem_pio2f+0x2e>
 80041c4:	42c6      	cmn	r6, r0
 80041c6:	bf5d      	ittte	pl
 80041c8:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80041cc:	ee07 1a90 	vmovpl	s15, r1
 80041d0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80041d4:	eef0 7a47 	vmovmi.f32	s15, s14
 80041d8:	ece4 7a01 	vstmia	r4!, {s15}
 80041dc:	3001      	adds	r0, #1
 80041de:	e7de      	b.n	800419e <__kernel_rem_pio2f+0x4e>
 80041e0:	ecfe 6a01 	vldmia	lr!, {s13}
 80041e4:	ed3c 7a01 	vldmdb	ip!, {s14}
 80041e8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80041ec:	3401      	adds	r4, #1
 80041ee:	455c      	cmp	r4, fp
 80041f0:	ddf6      	ble.n	80041e0 <__kernel_rem_pio2f+0x90>
 80041f2:	ece9 7a01 	vstmia	r9!, {s15}
 80041f6:	3601      	adds	r6, #1
 80041f8:	3004      	adds	r0, #4
 80041fa:	e7d8      	b.n	80041ae <__kernel_rem_pio2f+0x5e>
 80041fc:	a908      	add	r1, sp, #32
 80041fe:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004202:	9104      	str	r1, [sp, #16]
 8004204:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8004206:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8004444 <__kernel_rem_pio2f+0x2f4>
 800420a:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8004440 <__kernel_rem_pio2f+0x2f0>
 800420e:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8004212:	9203      	str	r2, [sp, #12]
 8004214:	4654      	mov	r4, sl
 8004216:	00a2      	lsls	r2, r4, #2
 8004218:	9205      	str	r2, [sp, #20]
 800421a:	aa58      	add	r2, sp, #352	@ 0x160
 800421c:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8004220:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8004224:	a944      	add	r1, sp, #272	@ 0x110
 8004226:	aa08      	add	r2, sp, #32
 8004228:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 800422c:	4694      	mov	ip, r2
 800422e:	4626      	mov	r6, r4
 8004230:	2e00      	cmp	r6, #0
 8004232:	dc4c      	bgt.n	80042ce <__kernel_rem_pio2f+0x17e>
 8004234:	4628      	mov	r0, r5
 8004236:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800423a:	f000 f9f1 	bl	8004620 <scalbnf>
 800423e:	eeb0 8a40 	vmov.f32	s16, s0
 8004242:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8004246:	ee28 0a00 	vmul.f32	s0, s16, s0
 800424a:	f000 fa4f 	bl	80046ec <floorf>
 800424e:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8004252:	eea0 8a67 	vfms.f32	s16, s0, s15
 8004256:	2d00      	cmp	r5, #0
 8004258:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800425c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8004260:	ee17 9a90 	vmov	r9, s15
 8004264:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004268:	ee38 8a67 	vsub.f32	s16, s16, s15
 800426c:	dd41      	ble.n	80042f2 <__kernel_rem_pio2f+0x1a2>
 800426e:	f104 3cff 	add.w	ip, r4, #4294967295
 8004272:	a908      	add	r1, sp, #32
 8004274:	f1c5 0e08 	rsb	lr, r5, #8
 8004278:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 800427c:	fa46 f00e 	asr.w	r0, r6, lr
 8004280:	4481      	add	r9, r0
 8004282:	fa00 f00e 	lsl.w	r0, r0, lr
 8004286:	1a36      	subs	r6, r6, r0
 8004288:	f1c5 0007 	rsb	r0, r5, #7
 800428c:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8004290:	4106      	asrs	r6, r0
 8004292:	2e00      	cmp	r6, #0
 8004294:	dd3c      	ble.n	8004310 <__kernel_rem_pio2f+0x1c0>
 8004296:	f04f 0e00 	mov.w	lr, #0
 800429a:	f109 0901 	add.w	r9, r9, #1
 800429e:	4670      	mov	r0, lr
 80042a0:	4574      	cmp	r4, lr
 80042a2:	dc68      	bgt.n	8004376 <__kernel_rem_pio2f+0x226>
 80042a4:	2d00      	cmp	r5, #0
 80042a6:	dd03      	ble.n	80042b0 <__kernel_rem_pio2f+0x160>
 80042a8:	2d01      	cmp	r5, #1
 80042aa:	d074      	beq.n	8004396 <__kernel_rem_pio2f+0x246>
 80042ac:	2d02      	cmp	r5, #2
 80042ae:	d07d      	beq.n	80043ac <__kernel_rem_pio2f+0x25c>
 80042b0:	2e02      	cmp	r6, #2
 80042b2:	d12d      	bne.n	8004310 <__kernel_rem_pio2f+0x1c0>
 80042b4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80042b8:	ee30 8a48 	vsub.f32	s16, s0, s16
 80042bc:	b340      	cbz	r0, 8004310 <__kernel_rem_pio2f+0x1c0>
 80042be:	4628      	mov	r0, r5
 80042c0:	9306      	str	r3, [sp, #24]
 80042c2:	f000 f9ad 	bl	8004620 <scalbnf>
 80042c6:	9b06      	ldr	r3, [sp, #24]
 80042c8:	ee38 8a40 	vsub.f32	s16, s16, s0
 80042cc:	e020      	b.n	8004310 <__kernel_rem_pio2f+0x1c0>
 80042ce:	ee60 7a28 	vmul.f32	s15, s0, s17
 80042d2:	3e01      	subs	r6, #1
 80042d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80042dc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80042e0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80042e4:	ecac 0a01 	vstmia	ip!, {s0}
 80042e8:	ed30 0a01 	vldmdb	r0!, {s0}
 80042ec:	ee37 0a80 	vadd.f32	s0, s15, s0
 80042f0:	e79e      	b.n	8004230 <__kernel_rem_pio2f+0xe0>
 80042f2:	d105      	bne.n	8004300 <__kernel_rem_pio2f+0x1b0>
 80042f4:	1e60      	subs	r0, r4, #1
 80042f6:	a908      	add	r1, sp, #32
 80042f8:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80042fc:	11f6      	asrs	r6, r6, #7
 80042fe:	e7c8      	b.n	8004292 <__kernel_rem_pio2f+0x142>
 8004300:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8004304:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8004308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800430c:	da31      	bge.n	8004372 <__kernel_rem_pio2f+0x222>
 800430e:	2600      	movs	r6, #0
 8004310:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8004314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004318:	f040 8098 	bne.w	800444c <__kernel_rem_pio2f+0x2fc>
 800431c:	1e60      	subs	r0, r4, #1
 800431e:	2200      	movs	r2, #0
 8004320:	4550      	cmp	r0, sl
 8004322:	da4b      	bge.n	80043bc <__kernel_rem_pio2f+0x26c>
 8004324:	2a00      	cmp	r2, #0
 8004326:	d065      	beq.n	80043f4 <__kernel_rem_pio2f+0x2a4>
 8004328:	3c01      	subs	r4, #1
 800432a:	ab08      	add	r3, sp, #32
 800432c:	3d08      	subs	r5, #8
 800432e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8004332:	2b00      	cmp	r3, #0
 8004334:	d0f8      	beq.n	8004328 <__kernel_rem_pio2f+0x1d8>
 8004336:	4628      	mov	r0, r5
 8004338:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800433c:	f000 f970 	bl	8004620 <scalbnf>
 8004340:	1c63      	adds	r3, r4, #1
 8004342:	aa44      	add	r2, sp, #272	@ 0x110
 8004344:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8004444 <__kernel_rem_pio2f+0x2f4>
 8004348:	0099      	lsls	r1, r3, #2
 800434a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 800434e:	4623      	mov	r3, r4
 8004350:	2b00      	cmp	r3, #0
 8004352:	f280 80a9 	bge.w	80044a8 <__kernel_rem_pio2f+0x358>
 8004356:	4623      	mov	r3, r4
 8004358:	2b00      	cmp	r3, #0
 800435a:	f2c0 80c7 	blt.w	80044ec <__kernel_rem_pio2f+0x39c>
 800435e:	aa44      	add	r2, sp, #272	@ 0x110
 8004360:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8004364:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 800443c <__kernel_rem_pio2f+0x2ec>
 8004368:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8004448 <__kernel_rem_pio2f+0x2f8>
 800436c:	2000      	movs	r0, #0
 800436e:	1ae2      	subs	r2, r4, r3
 8004370:	e0b1      	b.n	80044d6 <__kernel_rem_pio2f+0x386>
 8004372:	2602      	movs	r6, #2
 8004374:	e78f      	b.n	8004296 <__kernel_rem_pio2f+0x146>
 8004376:	f852 1b04 	ldr.w	r1, [r2], #4
 800437a:	b948      	cbnz	r0, 8004390 <__kernel_rem_pio2f+0x240>
 800437c:	b121      	cbz	r1, 8004388 <__kernel_rem_pio2f+0x238>
 800437e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8004382:	f842 1c04 	str.w	r1, [r2, #-4]
 8004386:	2101      	movs	r1, #1
 8004388:	f10e 0e01 	add.w	lr, lr, #1
 800438c:	4608      	mov	r0, r1
 800438e:	e787      	b.n	80042a0 <__kernel_rem_pio2f+0x150>
 8004390:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8004394:	e7f5      	b.n	8004382 <__kernel_rem_pio2f+0x232>
 8004396:	f104 3cff 	add.w	ip, r4, #4294967295
 800439a:	aa08      	add	r2, sp, #32
 800439c:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80043a0:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80043a4:	a908      	add	r1, sp, #32
 80043a6:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80043aa:	e781      	b.n	80042b0 <__kernel_rem_pio2f+0x160>
 80043ac:	f104 3cff 	add.w	ip, r4, #4294967295
 80043b0:	aa08      	add	r2, sp, #32
 80043b2:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80043b6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80043ba:	e7f3      	b.n	80043a4 <__kernel_rem_pio2f+0x254>
 80043bc:	a908      	add	r1, sp, #32
 80043be:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80043c2:	3801      	subs	r0, #1
 80043c4:	430a      	orrs	r2, r1
 80043c6:	e7ab      	b.n	8004320 <__kernel_rem_pio2f+0x1d0>
 80043c8:	3201      	adds	r2, #1
 80043ca:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80043ce:	2e00      	cmp	r6, #0
 80043d0:	d0fa      	beq.n	80043c8 <__kernel_rem_pio2f+0x278>
 80043d2:	9905      	ldr	r1, [sp, #20]
 80043d4:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80043d8:	eb0d 0001 	add.w	r0, sp, r1
 80043dc:	18e6      	adds	r6, r4, r3
 80043de:	a91c      	add	r1, sp, #112	@ 0x70
 80043e0:	f104 0c01 	add.w	ip, r4, #1
 80043e4:	384c      	subs	r0, #76	@ 0x4c
 80043e6:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80043ea:	4422      	add	r2, r4
 80043ec:	4562      	cmp	r2, ip
 80043ee:	da04      	bge.n	80043fa <__kernel_rem_pio2f+0x2aa>
 80043f0:	4614      	mov	r4, r2
 80043f2:	e710      	b.n	8004216 <__kernel_rem_pio2f+0xc6>
 80043f4:	9804      	ldr	r0, [sp, #16]
 80043f6:	2201      	movs	r2, #1
 80043f8:	e7e7      	b.n	80043ca <__kernel_rem_pio2f+0x27a>
 80043fa:	9903      	ldr	r1, [sp, #12]
 80043fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8004400:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8004404:	9105      	str	r1, [sp, #20]
 8004406:	ee07 1a90 	vmov	s15, r1
 800440a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800440e:	2400      	movs	r4, #0
 8004410:	ece6 7a01 	vstmia	r6!, {s15}
 8004414:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8004448 <__kernel_rem_pio2f+0x2f8>
 8004418:	46b1      	mov	r9, r6
 800441a:	455c      	cmp	r4, fp
 800441c:	dd04      	ble.n	8004428 <__kernel_rem_pio2f+0x2d8>
 800441e:	ece0 7a01 	vstmia	r0!, {s15}
 8004422:	f10c 0c01 	add.w	ip, ip, #1
 8004426:	e7e1      	b.n	80043ec <__kernel_rem_pio2f+0x29c>
 8004428:	ecfe 6a01 	vldmia	lr!, {s13}
 800442c:	ed39 7a01 	vldmdb	r9!, {s14}
 8004430:	3401      	adds	r4, #1
 8004432:	eee6 7a87 	vfma.f32	s15, s13, s14
 8004436:	e7f0      	b.n	800441a <__kernel_rem_pio2f+0x2ca>
 8004438:	08004b70 	.word	0x08004b70
 800443c:	08004b44 	.word	0x08004b44
 8004440:	43800000 	.word	0x43800000
 8004444:	3b800000 	.word	0x3b800000
 8004448:	00000000 	.word	0x00000000
 800444c:	9b02      	ldr	r3, [sp, #8]
 800444e:	eeb0 0a48 	vmov.f32	s0, s16
 8004452:	eba3 0008 	sub.w	r0, r3, r8
 8004456:	f000 f8e3 	bl	8004620 <scalbnf>
 800445a:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8004440 <__kernel_rem_pio2f+0x2f0>
 800445e:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8004462:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004466:	db19      	blt.n	800449c <__kernel_rem_pio2f+0x34c>
 8004468:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8004444 <__kernel_rem_pio2f+0x2f4>
 800446c:	ee60 7a27 	vmul.f32	s15, s0, s15
 8004470:	aa08      	add	r2, sp, #32
 8004472:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004476:	3508      	adds	r5, #8
 8004478:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800447c:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8004480:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004484:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8004488:	ee10 3a10 	vmov	r3, s0
 800448c:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8004490:	ee17 3a90 	vmov	r3, s15
 8004494:	3401      	adds	r4, #1
 8004496:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 800449a:	e74c      	b.n	8004336 <__kernel_rem_pio2f+0x1e6>
 800449c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80044a0:	aa08      	add	r2, sp, #32
 80044a2:	ee10 3a10 	vmov	r3, s0
 80044a6:	e7f6      	b.n	8004496 <__kernel_rem_pio2f+0x346>
 80044a8:	a808      	add	r0, sp, #32
 80044aa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80044ae:	9001      	str	r0, [sp, #4]
 80044b0:	ee07 0a90 	vmov	s15, r0
 80044b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80044b8:	3b01      	subs	r3, #1
 80044ba:	ee67 7a80 	vmul.f32	s15, s15, s0
 80044be:	ee20 0a07 	vmul.f32	s0, s0, s14
 80044c2:	ed62 7a01 	vstmdb	r2!, {s15}
 80044c6:	e743      	b.n	8004350 <__kernel_rem_pio2f+0x200>
 80044c8:	ecfc 6a01 	vldmia	ip!, {s13}
 80044cc:	ecb5 7a01 	vldmia	r5!, {s14}
 80044d0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80044d4:	3001      	adds	r0, #1
 80044d6:	4550      	cmp	r0, sl
 80044d8:	dc01      	bgt.n	80044de <__kernel_rem_pio2f+0x38e>
 80044da:	4290      	cmp	r0, r2
 80044dc:	ddf4      	ble.n	80044c8 <__kernel_rem_pio2f+0x378>
 80044de:	a858      	add	r0, sp, #352	@ 0x160
 80044e0:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80044e4:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80044e8:	3b01      	subs	r3, #1
 80044ea:	e735      	b.n	8004358 <__kernel_rem_pio2f+0x208>
 80044ec:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80044ee:	2b02      	cmp	r3, #2
 80044f0:	dc09      	bgt.n	8004506 <__kernel_rem_pio2f+0x3b6>
 80044f2:	2b00      	cmp	r3, #0
 80044f4:	dc27      	bgt.n	8004546 <__kernel_rem_pio2f+0x3f6>
 80044f6:	d040      	beq.n	800457a <__kernel_rem_pio2f+0x42a>
 80044f8:	f009 0007 	and.w	r0, r9, #7
 80044fc:	b059      	add	sp, #356	@ 0x164
 80044fe:	ecbd 8b04 	vpop	{d8-d9}
 8004502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004506:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8004508:	2b03      	cmp	r3, #3
 800450a:	d1f5      	bne.n	80044f8 <__kernel_rem_pio2f+0x3a8>
 800450c:	aa30      	add	r2, sp, #192	@ 0xc0
 800450e:	1f0b      	subs	r3, r1, #4
 8004510:	4413      	add	r3, r2
 8004512:	461a      	mov	r2, r3
 8004514:	4620      	mov	r0, r4
 8004516:	2800      	cmp	r0, #0
 8004518:	dc50      	bgt.n	80045bc <__kernel_rem_pio2f+0x46c>
 800451a:	4622      	mov	r2, r4
 800451c:	2a01      	cmp	r2, #1
 800451e:	dc5d      	bgt.n	80045dc <__kernel_rem_pio2f+0x48c>
 8004520:	ab30      	add	r3, sp, #192	@ 0xc0
 8004522:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8004448 <__kernel_rem_pio2f+0x2f8>
 8004526:	440b      	add	r3, r1
 8004528:	2c01      	cmp	r4, #1
 800452a:	dc67      	bgt.n	80045fc <__kernel_rem_pio2f+0x4ac>
 800452c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8004530:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8004534:	2e00      	cmp	r6, #0
 8004536:	d167      	bne.n	8004608 <__kernel_rem_pio2f+0x4b8>
 8004538:	edc7 6a00 	vstr	s13, [r7]
 800453c:	ed87 7a01 	vstr	s14, [r7, #4]
 8004540:	edc7 7a02 	vstr	s15, [r7, #8]
 8004544:	e7d8      	b.n	80044f8 <__kernel_rem_pio2f+0x3a8>
 8004546:	ab30      	add	r3, sp, #192	@ 0xc0
 8004548:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8004448 <__kernel_rem_pio2f+0x2f8>
 800454c:	440b      	add	r3, r1
 800454e:	4622      	mov	r2, r4
 8004550:	2a00      	cmp	r2, #0
 8004552:	da24      	bge.n	800459e <__kernel_rem_pio2f+0x44e>
 8004554:	b34e      	cbz	r6, 80045aa <__kernel_rem_pio2f+0x45a>
 8004556:	eef1 7a47 	vneg.f32	s15, s14
 800455a:	edc7 7a00 	vstr	s15, [r7]
 800455e:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8004562:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004566:	aa31      	add	r2, sp, #196	@ 0xc4
 8004568:	2301      	movs	r3, #1
 800456a:	429c      	cmp	r4, r3
 800456c:	da20      	bge.n	80045b0 <__kernel_rem_pio2f+0x460>
 800456e:	b10e      	cbz	r6, 8004574 <__kernel_rem_pio2f+0x424>
 8004570:	eef1 7a67 	vneg.f32	s15, s15
 8004574:	edc7 7a01 	vstr	s15, [r7, #4]
 8004578:	e7be      	b.n	80044f8 <__kernel_rem_pio2f+0x3a8>
 800457a:	ab30      	add	r3, sp, #192	@ 0xc0
 800457c:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8004448 <__kernel_rem_pio2f+0x2f8>
 8004580:	440b      	add	r3, r1
 8004582:	2c00      	cmp	r4, #0
 8004584:	da05      	bge.n	8004592 <__kernel_rem_pio2f+0x442>
 8004586:	b10e      	cbz	r6, 800458c <__kernel_rem_pio2f+0x43c>
 8004588:	eef1 7a67 	vneg.f32	s15, s15
 800458c:	edc7 7a00 	vstr	s15, [r7]
 8004590:	e7b2      	b.n	80044f8 <__kernel_rem_pio2f+0x3a8>
 8004592:	ed33 7a01 	vldmdb	r3!, {s14}
 8004596:	3c01      	subs	r4, #1
 8004598:	ee77 7a87 	vadd.f32	s15, s15, s14
 800459c:	e7f1      	b.n	8004582 <__kernel_rem_pio2f+0x432>
 800459e:	ed73 7a01 	vldmdb	r3!, {s15}
 80045a2:	3a01      	subs	r2, #1
 80045a4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80045a8:	e7d2      	b.n	8004550 <__kernel_rem_pio2f+0x400>
 80045aa:	eef0 7a47 	vmov.f32	s15, s14
 80045ae:	e7d4      	b.n	800455a <__kernel_rem_pio2f+0x40a>
 80045b0:	ecb2 7a01 	vldmia	r2!, {s14}
 80045b4:	3301      	adds	r3, #1
 80045b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045ba:	e7d6      	b.n	800456a <__kernel_rem_pio2f+0x41a>
 80045bc:	ed72 7a01 	vldmdb	r2!, {s15}
 80045c0:	edd2 6a01 	vldr	s13, [r2, #4]
 80045c4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80045c8:	3801      	subs	r0, #1
 80045ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80045ce:	ed82 7a00 	vstr	s14, [r2]
 80045d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80045d6:	edc2 7a01 	vstr	s15, [r2, #4]
 80045da:	e79c      	b.n	8004516 <__kernel_rem_pio2f+0x3c6>
 80045dc:	ed73 7a01 	vldmdb	r3!, {s15}
 80045e0:	edd3 6a01 	vldr	s13, [r3, #4]
 80045e4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80045e8:	3a01      	subs	r2, #1
 80045ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80045ee:	ed83 7a00 	vstr	s14, [r3]
 80045f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80045f6:	edc3 7a01 	vstr	s15, [r3, #4]
 80045fa:	e78f      	b.n	800451c <__kernel_rem_pio2f+0x3cc>
 80045fc:	ed33 7a01 	vldmdb	r3!, {s14}
 8004600:	3c01      	subs	r4, #1
 8004602:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004606:	e78f      	b.n	8004528 <__kernel_rem_pio2f+0x3d8>
 8004608:	eef1 6a66 	vneg.f32	s13, s13
 800460c:	eeb1 7a47 	vneg.f32	s14, s14
 8004610:	edc7 6a00 	vstr	s13, [r7]
 8004614:	ed87 7a01 	vstr	s14, [r7, #4]
 8004618:	eef1 7a67 	vneg.f32	s15, s15
 800461c:	e790      	b.n	8004540 <__kernel_rem_pio2f+0x3f0>
 800461e:	bf00      	nop

08004620 <scalbnf>:
 8004620:	ee10 3a10 	vmov	r3, s0
 8004624:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8004628:	d02b      	beq.n	8004682 <scalbnf+0x62>
 800462a:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 800462e:	d302      	bcc.n	8004636 <scalbnf+0x16>
 8004630:	ee30 0a00 	vadd.f32	s0, s0, s0
 8004634:	4770      	bx	lr
 8004636:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 800463a:	d123      	bne.n	8004684 <scalbnf+0x64>
 800463c:	4b24      	ldr	r3, [pc, #144]	@ (80046d0 <scalbnf+0xb0>)
 800463e:	eddf 7a25 	vldr	s15, [pc, #148]	@ 80046d4 <scalbnf+0xb4>
 8004642:	4298      	cmp	r0, r3
 8004644:	ee20 0a27 	vmul.f32	s0, s0, s15
 8004648:	db17      	blt.n	800467a <scalbnf+0x5a>
 800464a:	ee10 3a10 	vmov	r3, s0
 800464e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8004652:	3a19      	subs	r2, #25
 8004654:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8004658:	4288      	cmp	r0, r1
 800465a:	dd15      	ble.n	8004688 <scalbnf+0x68>
 800465c:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 80046d8 <scalbnf+0xb8>
 8004660:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80046dc <scalbnf+0xbc>
 8004664:	ee10 3a10 	vmov	r3, s0
 8004668:	eeb0 7a67 	vmov.f32	s14, s15
 800466c:	2b00      	cmp	r3, #0
 800466e:	bfb8      	it	lt
 8004670:	eef0 7a66 	vmovlt.f32	s15, s13
 8004674:	ee27 0a87 	vmul.f32	s0, s15, s14
 8004678:	4770      	bx	lr
 800467a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80046e0 <scalbnf+0xc0>
 800467e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8004682:	4770      	bx	lr
 8004684:	0dd2      	lsrs	r2, r2, #23
 8004686:	e7e5      	b.n	8004654 <scalbnf+0x34>
 8004688:	4410      	add	r0, r2
 800468a:	28fe      	cmp	r0, #254	@ 0xfe
 800468c:	dce6      	bgt.n	800465c <scalbnf+0x3c>
 800468e:	2800      	cmp	r0, #0
 8004690:	dd06      	ble.n	80046a0 <scalbnf+0x80>
 8004692:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8004696:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 800469a:	ee00 3a10 	vmov	s0, r3
 800469e:	4770      	bx	lr
 80046a0:	f110 0f16 	cmn.w	r0, #22
 80046a4:	da09      	bge.n	80046ba <scalbnf+0x9a>
 80046a6:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 80046e0 <scalbnf+0xc0>
 80046aa:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 80046e4 <scalbnf+0xc4>
 80046ae:	ee10 3a10 	vmov	r3, s0
 80046b2:	eeb0 7a67 	vmov.f32	s14, s15
 80046b6:	2b00      	cmp	r3, #0
 80046b8:	e7d9      	b.n	800466e <scalbnf+0x4e>
 80046ba:	3019      	adds	r0, #25
 80046bc:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80046c0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80046c4:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 80046e8 <scalbnf+0xc8>
 80046c8:	ee07 3a90 	vmov	s15, r3
 80046cc:	e7d7      	b.n	800467e <scalbnf+0x5e>
 80046ce:	bf00      	nop
 80046d0:	ffff3cb0 	.word	0xffff3cb0
 80046d4:	4c000000 	.word	0x4c000000
 80046d8:	7149f2ca 	.word	0x7149f2ca
 80046dc:	f149f2ca 	.word	0xf149f2ca
 80046e0:	0da24260 	.word	0x0da24260
 80046e4:	8da24260 	.word	0x8da24260
 80046e8:	33000000 	.word	0x33000000

080046ec <floorf>:
 80046ec:	ee10 3a10 	vmov	r3, s0
 80046f0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80046f4:	3a7f      	subs	r2, #127	@ 0x7f
 80046f6:	2a16      	cmp	r2, #22
 80046f8:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 80046fc:	dc2b      	bgt.n	8004756 <floorf+0x6a>
 80046fe:	2a00      	cmp	r2, #0
 8004700:	da12      	bge.n	8004728 <floorf+0x3c>
 8004702:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8004768 <floorf+0x7c>
 8004706:	ee30 0a27 	vadd.f32	s0, s0, s15
 800470a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800470e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004712:	dd06      	ble.n	8004722 <floorf+0x36>
 8004714:	2b00      	cmp	r3, #0
 8004716:	da24      	bge.n	8004762 <floorf+0x76>
 8004718:	2900      	cmp	r1, #0
 800471a:	4b14      	ldr	r3, [pc, #80]	@ (800476c <floorf+0x80>)
 800471c:	bf08      	it	eq
 800471e:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8004722:	ee00 3a10 	vmov	s0, r3
 8004726:	4770      	bx	lr
 8004728:	4911      	ldr	r1, [pc, #68]	@ (8004770 <floorf+0x84>)
 800472a:	4111      	asrs	r1, r2
 800472c:	420b      	tst	r3, r1
 800472e:	d0fa      	beq.n	8004726 <floorf+0x3a>
 8004730:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8004768 <floorf+0x7c>
 8004734:	ee30 0a27 	vadd.f32	s0, s0, s15
 8004738:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800473c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004740:	ddef      	ble.n	8004722 <floorf+0x36>
 8004742:	2b00      	cmp	r3, #0
 8004744:	bfbe      	ittt	lt
 8004746:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 800474a:	fa40 f202 	asrlt.w	r2, r0, r2
 800474e:	189b      	addlt	r3, r3, r2
 8004750:	ea23 0301 	bic.w	r3, r3, r1
 8004754:	e7e5      	b.n	8004722 <floorf+0x36>
 8004756:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 800475a:	d3e4      	bcc.n	8004726 <floorf+0x3a>
 800475c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8004760:	4770      	bx	lr
 8004762:	2300      	movs	r3, #0
 8004764:	e7dd      	b.n	8004722 <floorf+0x36>
 8004766:	bf00      	nop
 8004768:	7149f2ca 	.word	0x7149f2ca
 800476c:	bf800000 	.word	0xbf800000
 8004770:	007fffff 	.word	0x007fffff

08004774 <_init>:
 8004774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004776:	bf00      	nop
 8004778:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800477a:	bc08      	pop	{r3}
 800477c:	469e      	mov	lr, r3
 800477e:	4770      	bx	lr

08004780 <_fini>:
 8004780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004782:	bf00      	nop
 8004784:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004786:	bc08      	pop	{r3}
 8004788:	469e      	mov	lr, r3
 800478a:	4770      	bx	lr
