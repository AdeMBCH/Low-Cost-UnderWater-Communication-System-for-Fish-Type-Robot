
UWCD.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000044ec  08000198  08000198  00001198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003f0  08004684  08004684  00005684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004a74  08004a74  0000600c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08004a74  08004a74  00005a74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004a7c  08004a7c  0000600c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004a7c  08004a7c  00005a7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004a80  08004a80  00005a80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000000c  20000000  08004a84  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000044d8  2000000c  08004a90  0000600c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200044e4  08004a90  000064e4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000600c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00009d6d  00000000  00000000  0000603c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000019f9  00000000  00000000  0000fda9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000007e8  00000000  00000000  000117a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000619  00000000  00000000  00011f90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016b2f  00000000  00000000  000125a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000a171  00000000  00000000  000290d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000919e3  00000000  00000000  00033249  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000c4c2c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000223c  00000000  00000000  000c4c70  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005c  00000000  00000000  000c6eac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	2000000c 	.word	0x2000000c
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800466c 	.word	0x0800466c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000010 	.word	0x20000010
 80001d4:	0800466c 	.word	0x0800466c

080001d8 <__aeabi_dmul>:
 80001d8:	b570      	push	{r4, r5, r6, lr}
 80001da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80001de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80001e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80001e6:	bf1d      	ittte	ne
 80001e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80001ec:	ea94 0f0c 	teqne	r4, ip
 80001f0:	ea95 0f0c 	teqne	r5, ip
 80001f4:	f000 f8de 	bleq	80003b4 <__aeabi_dmul+0x1dc>
 80001f8:	442c      	add	r4, r5
 80001fa:	ea81 0603 	eor.w	r6, r1, r3
 80001fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000202:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000206:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800020a:	bf18      	it	ne
 800020c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000210:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000214:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000218:	d038      	beq.n	800028c <__aeabi_dmul+0xb4>
 800021a:	fba0 ce02 	umull	ip, lr, r0, r2
 800021e:	f04f 0500 	mov.w	r5, #0
 8000222:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000226:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800022a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800022e:	f04f 0600 	mov.w	r6, #0
 8000232:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000236:	f09c 0f00 	teq	ip, #0
 800023a:	bf18      	it	ne
 800023c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000240:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000244:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000248:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800024c:	d204      	bcs.n	8000258 <__aeabi_dmul+0x80>
 800024e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000252:	416d      	adcs	r5, r5
 8000254:	eb46 0606 	adc.w	r6, r6, r6
 8000258:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800025c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000260:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000264:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000268:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800026c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000270:	bf88      	it	hi
 8000272:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000276:	d81e      	bhi.n	80002b6 <__aeabi_dmul+0xde>
 8000278:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	bd70      	pop	{r4, r5, r6, pc}
 800028c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000290:	ea46 0101 	orr.w	r1, r6, r1
 8000294:	ea40 0002 	orr.w	r0, r0, r2
 8000298:	ea81 0103 	eor.w	r1, r1, r3
 800029c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80002a0:	bfc2      	ittt	gt
 80002a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80002a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80002aa:	bd70      	popgt	{r4, r5, r6, pc}
 80002ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80002b0:	f04f 0e00 	mov.w	lr, #0
 80002b4:	3c01      	subs	r4, #1
 80002b6:	f300 80ab 	bgt.w	8000410 <__aeabi_dmul+0x238>
 80002ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80002be:	bfde      	ittt	le
 80002c0:	2000      	movle	r0, #0
 80002c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80002c6:	bd70      	pople	{r4, r5, r6, pc}
 80002c8:	f1c4 0400 	rsb	r4, r4, #0
 80002cc:	3c20      	subs	r4, #32
 80002ce:	da35      	bge.n	800033c <__aeabi_dmul+0x164>
 80002d0:	340c      	adds	r4, #12
 80002d2:	dc1b      	bgt.n	800030c <__aeabi_dmul+0x134>
 80002d4:	f104 0414 	add.w	r4, r4, #20
 80002d8:	f1c4 0520 	rsb	r5, r4, #32
 80002dc:	fa00 f305 	lsl.w	r3, r0, r5
 80002e0:	fa20 f004 	lsr.w	r0, r0, r4
 80002e4:	fa01 f205 	lsl.w	r2, r1, r5
 80002e8:	ea40 0002 	orr.w	r0, r0, r2
 80002ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80002f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80002f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80002f8:	fa21 f604 	lsr.w	r6, r1, r4
 80002fc:	eb42 0106 	adc.w	r1, r2, r6
 8000300:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000304:	bf08      	it	eq
 8000306:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800030a:	bd70      	pop	{r4, r5, r6, pc}
 800030c:	f1c4 040c 	rsb	r4, r4, #12
 8000310:	f1c4 0520 	rsb	r5, r4, #32
 8000314:	fa00 f304 	lsl.w	r3, r0, r4
 8000318:	fa20 f005 	lsr.w	r0, r0, r5
 800031c:	fa01 f204 	lsl.w	r2, r1, r4
 8000320:	ea40 0002 	orr.w	r0, r0, r2
 8000324:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000328:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000334:	bf08      	it	eq
 8000336:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800033a:	bd70      	pop	{r4, r5, r6, pc}
 800033c:	f1c4 0520 	rsb	r5, r4, #32
 8000340:	fa00 f205 	lsl.w	r2, r0, r5
 8000344:	ea4e 0e02 	orr.w	lr, lr, r2
 8000348:	fa20 f304 	lsr.w	r3, r0, r4
 800034c:	fa01 f205 	lsl.w	r2, r1, r5
 8000350:	ea43 0302 	orr.w	r3, r3, r2
 8000354:	fa21 f004 	lsr.w	r0, r1, r4
 8000358:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800035c:	fa21 f204 	lsr.w	r2, r1, r4
 8000360:	ea20 0002 	bic.w	r0, r0, r2
 8000364:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000368:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800036c:	bf08      	it	eq
 800036e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000372:	bd70      	pop	{r4, r5, r6, pc}
 8000374:	f094 0f00 	teq	r4, #0
 8000378:	d10f      	bne.n	800039a <__aeabi_dmul+0x1c2>
 800037a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800037e:	0040      	lsls	r0, r0, #1
 8000380:	eb41 0101 	adc.w	r1, r1, r1
 8000384:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000388:	bf08      	it	eq
 800038a:	3c01      	subeq	r4, #1
 800038c:	d0f7      	beq.n	800037e <__aeabi_dmul+0x1a6>
 800038e:	ea41 0106 	orr.w	r1, r1, r6
 8000392:	f095 0f00 	teq	r5, #0
 8000396:	bf18      	it	ne
 8000398:	4770      	bxne	lr
 800039a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800039e:	0052      	lsls	r2, r2, #1
 80003a0:	eb43 0303 	adc.w	r3, r3, r3
 80003a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80003a8:	bf08      	it	eq
 80003aa:	3d01      	subeq	r5, #1
 80003ac:	d0f7      	beq.n	800039e <__aeabi_dmul+0x1c6>
 80003ae:	ea43 0306 	orr.w	r3, r3, r6
 80003b2:	4770      	bx	lr
 80003b4:	ea94 0f0c 	teq	r4, ip
 80003b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80003bc:	bf18      	it	ne
 80003be:	ea95 0f0c 	teqne	r5, ip
 80003c2:	d00c      	beq.n	80003de <__aeabi_dmul+0x206>
 80003c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80003c8:	bf18      	it	ne
 80003ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80003ce:	d1d1      	bne.n	8000374 <__aeabi_dmul+0x19c>
 80003d0:	ea81 0103 	eor.w	r1, r1, r3
 80003d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80003d8:	f04f 0000 	mov.w	r0, #0
 80003dc:	bd70      	pop	{r4, r5, r6, pc}
 80003de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80003e2:	bf06      	itte	eq
 80003e4:	4610      	moveq	r0, r2
 80003e6:	4619      	moveq	r1, r3
 80003e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80003ec:	d019      	beq.n	8000422 <__aeabi_dmul+0x24a>
 80003ee:	ea94 0f0c 	teq	r4, ip
 80003f2:	d102      	bne.n	80003fa <__aeabi_dmul+0x222>
 80003f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80003f8:	d113      	bne.n	8000422 <__aeabi_dmul+0x24a>
 80003fa:	ea95 0f0c 	teq	r5, ip
 80003fe:	d105      	bne.n	800040c <__aeabi_dmul+0x234>
 8000400:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000404:	bf1c      	itt	ne
 8000406:	4610      	movne	r0, r2
 8000408:	4619      	movne	r1, r3
 800040a:	d10a      	bne.n	8000422 <__aeabi_dmul+0x24a>
 800040c:	ea81 0103 	eor.w	r1, r1, r3
 8000410:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000414:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000418:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800041c:	f04f 0000 	mov.w	r0, #0
 8000420:	bd70      	pop	{r4, r5, r6, pc}
 8000422:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000426:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800042a:	bd70      	pop	{r4, r5, r6, pc}

0800042c <__aeabi_drsub>:
 800042c:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000430:	e002      	b.n	8000438 <__adddf3>
 8000432:	bf00      	nop

08000434 <__aeabi_dsub>:
 8000434:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000438 <__adddf3>:
 8000438:	b530      	push	{r4, r5, lr}
 800043a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800043e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000442:	ea94 0f05 	teq	r4, r5
 8000446:	bf08      	it	eq
 8000448:	ea90 0f02 	teqeq	r0, r2
 800044c:	bf1f      	itttt	ne
 800044e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000452:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000456:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800045a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800045e:	f000 80e2 	beq.w	8000626 <__adddf3+0x1ee>
 8000462:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000466:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800046a:	bfb8      	it	lt
 800046c:	426d      	neglt	r5, r5
 800046e:	dd0c      	ble.n	800048a <__adddf3+0x52>
 8000470:	442c      	add	r4, r5
 8000472:	ea80 0202 	eor.w	r2, r0, r2
 8000476:	ea81 0303 	eor.w	r3, r1, r3
 800047a:	ea82 0000 	eor.w	r0, r2, r0
 800047e:	ea83 0101 	eor.w	r1, r3, r1
 8000482:	ea80 0202 	eor.w	r2, r0, r2
 8000486:	ea81 0303 	eor.w	r3, r1, r3
 800048a:	2d36      	cmp	r5, #54	@ 0x36
 800048c:	bf88      	it	hi
 800048e:	bd30      	pophi	{r4, r5, pc}
 8000490:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000494:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000498:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 800049c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80004a0:	d002      	beq.n	80004a8 <__adddf3+0x70>
 80004a2:	4240      	negs	r0, r0
 80004a4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004a8:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80004ac:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80004b0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80004b4:	d002      	beq.n	80004bc <__adddf3+0x84>
 80004b6:	4252      	negs	r2, r2
 80004b8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80004bc:	ea94 0f05 	teq	r4, r5
 80004c0:	f000 80a7 	beq.w	8000612 <__adddf3+0x1da>
 80004c4:	f1a4 0401 	sub.w	r4, r4, #1
 80004c8:	f1d5 0e20 	rsbs	lr, r5, #32
 80004cc:	db0d      	blt.n	80004ea <__adddf3+0xb2>
 80004ce:	fa02 fc0e 	lsl.w	ip, r2, lr
 80004d2:	fa22 f205 	lsr.w	r2, r2, r5
 80004d6:	1880      	adds	r0, r0, r2
 80004d8:	f141 0100 	adc.w	r1, r1, #0
 80004dc:	fa03 f20e 	lsl.w	r2, r3, lr
 80004e0:	1880      	adds	r0, r0, r2
 80004e2:	fa43 f305 	asr.w	r3, r3, r5
 80004e6:	4159      	adcs	r1, r3
 80004e8:	e00e      	b.n	8000508 <__adddf3+0xd0>
 80004ea:	f1a5 0520 	sub.w	r5, r5, #32
 80004ee:	f10e 0e20 	add.w	lr, lr, #32
 80004f2:	2a01      	cmp	r2, #1
 80004f4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80004f8:	bf28      	it	cs
 80004fa:	f04c 0c02 	orrcs.w	ip, ip, #2
 80004fe:	fa43 f305 	asr.w	r3, r3, r5
 8000502:	18c0      	adds	r0, r0, r3
 8000504:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	d507      	bpl.n	800051e <__adddf3+0xe6>
 800050e:	f04f 0e00 	mov.w	lr, #0
 8000512:	f1dc 0c00 	rsbs	ip, ip, #0
 8000516:	eb7e 0000 	sbcs.w	r0, lr, r0
 800051a:	eb6e 0101 	sbc.w	r1, lr, r1
 800051e:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000522:	d31b      	bcc.n	800055c <__adddf3+0x124>
 8000524:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000528:	d30c      	bcc.n	8000544 <__adddf3+0x10c>
 800052a:	0849      	lsrs	r1, r1, #1
 800052c:	ea5f 0030 	movs.w	r0, r0, rrx
 8000530:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000534:	f104 0401 	add.w	r4, r4, #1
 8000538:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800053c:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000540:	f080 809a 	bcs.w	8000678 <__adddf3+0x240>
 8000544:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000548:	bf08      	it	eq
 800054a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800054e:	f150 0000 	adcs.w	r0, r0, #0
 8000552:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000556:	ea41 0105 	orr.w	r1, r1, r5
 800055a:	bd30      	pop	{r4, r5, pc}
 800055c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000560:	4140      	adcs	r0, r0
 8000562:	eb41 0101 	adc.w	r1, r1, r1
 8000566:	3c01      	subs	r4, #1
 8000568:	bf28      	it	cs
 800056a:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800056e:	d2e9      	bcs.n	8000544 <__adddf3+0x10c>
 8000570:	f091 0f00 	teq	r1, #0
 8000574:	bf04      	itt	eq
 8000576:	4601      	moveq	r1, r0
 8000578:	2000      	moveq	r0, #0
 800057a:	fab1 f381 	clz	r3, r1
 800057e:	bf08      	it	eq
 8000580:	3320      	addeq	r3, #32
 8000582:	f1a3 030b 	sub.w	r3, r3, #11
 8000586:	f1b3 0220 	subs.w	r2, r3, #32
 800058a:	da0c      	bge.n	80005a6 <__adddf3+0x16e>
 800058c:	320c      	adds	r2, #12
 800058e:	dd08      	ble.n	80005a2 <__adddf3+0x16a>
 8000590:	f102 0c14 	add.w	ip, r2, #20
 8000594:	f1c2 020c 	rsb	r2, r2, #12
 8000598:	fa01 f00c 	lsl.w	r0, r1, ip
 800059c:	fa21 f102 	lsr.w	r1, r1, r2
 80005a0:	e00c      	b.n	80005bc <__adddf3+0x184>
 80005a2:	f102 0214 	add.w	r2, r2, #20
 80005a6:	bfd8      	it	le
 80005a8:	f1c2 0c20 	rsble	ip, r2, #32
 80005ac:	fa01 f102 	lsl.w	r1, r1, r2
 80005b0:	fa20 fc0c 	lsr.w	ip, r0, ip
 80005b4:	bfdc      	itt	le
 80005b6:	ea41 010c 	orrle.w	r1, r1, ip
 80005ba:	4090      	lslle	r0, r2
 80005bc:	1ae4      	subs	r4, r4, r3
 80005be:	bfa2      	ittt	ge
 80005c0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80005c4:	4329      	orrge	r1, r5
 80005c6:	bd30      	popge	{r4, r5, pc}
 80005c8:	ea6f 0404 	mvn.w	r4, r4
 80005cc:	3c1f      	subs	r4, #31
 80005ce:	da1c      	bge.n	800060a <__adddf3+0x1d2>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc0e      	bgt.n	80005f2 <__adddf3+0x1ba>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0220 	rsb	r2, r4, #32
 80005dc:	fa20 f004 	lsr.w	r0, r0, r4
 80005e0:	fa01 f302 	lsl.w	r3, r1, r2
 80005e4:	ea40 0003 	orr.w	r0, r0, r3
 80005e8:	fa21 f304 	lsr.w	r3, r1, r4
 80005ec:	ea45 0103 	orr.w	r1, r5, r3
 80005f0:	bd30      	pop	{r4, r5, pc}
 80005f2:	f1c4 040c 	rsb	r4, r4, #12
 80005f6:	f1c4 0220 	rsb	r2, r4, #32
 80005fa:	fa20 f002 	lsr.w	r0, r0, r2
 80005fe:	fa01 f304 	lsl.w	r3, r1, r4
 8000602:	ea40 0003 	orr.w	r0, r0, r3
 8000606:	4629      	mov	r1, r5
 8000608:	bd30      	pop	{r4, r5, pc}
 800060a:	fa21 f004 	lsr.w	r0, r1, r4
 800060e:	4629      	mov	r1, r5
 8000610:	bd30      	pop	{r4, r5, pc}
 8000612:	f094 0f00 	teq	r4, #0
 8000616:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800061a:	bf06      	itte	eq
 800061c:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000620:	3401      	addeq	r4, #1
 8000622:	3d01      	subne	r5, #1
 8000624:	e74e      	b.n	80004c4 <__adddf3+0x8c>
 8000626:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800062a:	bf18      	it	ne
 800062c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000630:	d029      	beq.n	8000686 <__adddf3+0x24e>
 8000632:	ea94 0f05 	teq	r4, r5
 8000636:	bf08      	it	eq
 8000638:	ea90 0f02 	teqeq	r0, r2
 800063c:	d005      	beq.n	800064a <__adddf3+0x212>
 800063e:	ea54 0c00 	orrs.w	ip, r4, r0
 8000642:	bf04      	itt	eq
 8000644:	4619      	moveq	r1, r3
 8000646:	4610      	moveq	r0, r2
 8000648:	bd30      	pop	{r4, r5, pc}
 800064a:	ea91 0f03 	teq	r1, r3
 800064e:	bf1e      	ittt	ne
 8000650:	2100      	movne	r1, #0
 8000652:	2000      	movne	r0, #0
 8000654:	bd30      	popne	{r4, r5, pc}
 8000656:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800065a:	d105      	bne.n	8000668 <__adddf3+0x230>
 800065c:	0040      	lsls	r0, r0, #1
 800065e:	4149      	adcs	r1, r1
 8000660:	bf28      	it	cs
 8000662:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000666:	bd30      	pop	{r4, r5, pc}
 8000668:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 800066c:	bf3c      	itt	cc
 800066e:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000672:	bd30      	popcc	{r4, r5, pc}
 8000674:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000678:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 800067c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000680:	f04f 0000 	mov.w	r0, #0
 8000684:	bd30      	pop	{r4, r5, pc}
 8000686:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800068a:	bf1a      	itte	ne
 800068c:	4619      	movne	r1, r3
 800068e:	4610      	movne	r0, r2
 8000690:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000694:	bf1c      	itt	ne
 8000696:	460b      	movne	r3, r1
 8000698:	4602      	movne	r2, r0
 800069a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800069e:	bf06      	itte	eq
 80006a0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80006a4:	ea91 0f03 	teqeq	r1, r3
 80006a8:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80006ac:	bd30      	pop	{r4, r5, pc}
 80006ae:	bf00      	nop

080006b0 <__aeabi_ui2d>:
 80006b0:	f090 0f00 	teq	r0, #0
 80006b4:	bf04      	itt	eq
 80006b6:	2100      	moveq	r1, #0
 80006b8:	4770      	bxeq	lr
 80006ba:	b530      	push	{r4, r5, lr}
 80006bc:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80006c0:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80006c4:	f04f 0500 	mov.w	r5, #0
 80006c8:	f04f 0100 	mov.w	r1, #0
 80006cc:	e750      	b.n	8000570 <__adddf3+0x138>
 80006ce:	bf00      	nop

080006d0 <__aeabi_i2d>:
 80006d0:	f090 0f00 	teq	r0, #0
 80006d4:	bf04      	itt	eq
 80006d6:	2100      	moveq	r1, #0
 80006d8:	4770      	bxeq	lr
 80006da:	b530      	push	{r4, r5, lr}
 80006dc:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80006e0:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80006e4:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80006e8:	bf48      	it	mi
 80006ea:	4240      	negmi	r0, r0
 80006ec:	f04f 0100 	mov.w	r1, #0
 80006f0:	e73e      	b.n	8000570 <__adddf3+0x138>
 80006f2:	bf00      	nop

080006f4 <__aeabi_f2d>:
 80006f4:	0042      	lsls	r2, r0, #1
 80006f6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80006fa:	ea4f 0131 	mov.w	r1, r1, rrx
 80006fe:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000702:	bf1f      	itttt	ne
 8000704:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 8000708:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 800070c:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000710:	4770      	bxne	lr
 8000712:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 8000716:	bf08      	it	eq
 8000718:	4770      	bxeq	lr
 800071a:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 800071e:	bf04      	itt	eq
 8000720:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000724:	4770      	bxeq	lr
 8000726:	b530      	push	{r4, r5, lr}
 8000728:	f44f 7460 	mov.w	r4, #896	@ 0x380
 800072c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000734:	e71c      	b.n	8000570 <__adddf3+0x138>
 8000736:	bf00      	nop

08000738 <__aeabi_ul2d>:
 8000738:	ea50 0201 	orrs.w	r2, r0, r1
 800073c:	bf08      	it	eq
 800073e:	4770      	bxeq	lr
 8000740:	b530      	push	{r4, r5, lr}
 8000742:	f04f 0500 	mov.w	r5, #0
 8000746:	e00a      	b.n	800075e <__aeabi_l2d+0x16>

08000748 <__aeabi_l2d>:
 8000748:	ea50 0201 	orrs.w	r2, r0, r1
 800074c:	bf08      	it	eq
 800074e:	4770      	bxeq	lr
 8000750:	b530      	push	{r4, r5, lr}
 8000752:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000756:	d502      	bpl.n	800075e <__aeabi_l2d+0x16>
 8000758:	4240      	negs	r0, r0
 800075a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800075e:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000762:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000766:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800076a:	f43f aed8 	beq.w	800051e <__adddf3+0xe6>
 800076e:	f04f 0203 	mov.w	r2, #3
 8000772:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000776:	bf18      	it	ne
 8000778:	3203      	addne	r2, #3
 800077a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800077e:	bf18      	it	ne
 8000780:	3203      	addne	r2, #3
 8000782:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000786:	f1c2 0320 	rsb	r3, r2, #32
 800078a:	fa00 fc03 	lsl.w	ip, r0, r3
 800078e:	fa20 f002 	lsr.w	r0, r0, r2
 8000792:	fa01 fe03 	lsl.w	lr, r1, r3
 8000796:	ea40 000e 	orr.w	r0, r0, lr
 800079a:	fa21 f102 	lsr.w	r1, r1, r2
 800079e:	4414      	add	r4, r2
 80007a0:	e6bd      	b.n	800051e <__adddf3+0xe6>
 80007a2:	bf00      	nop

080007a4 <__aeabi_d2f>:
 80007a4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80007a8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 80007ac:	bf24      	itt	cs
 80007ae:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 80007b2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 80007b6:	d90d      	bls.n	80007d4 <__aeabi_d2f+0x30>
 80007b8:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 80007bc:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80007c0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 80007c4:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 80007c8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80007cc:	bf08      	it	eq
 80007ce:	f020 0001 	biceq.w	r0, r0, #1
 80007d2:	4770      	bx	lr
 80007d4:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 80007d8:	d121      	bne.n	800081e <__aeabi_d2f+0x7a>
 80007da:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 80007de:	bfbc      	itt	lt
 80007e0:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 80007e4:	4770      	bxlt	lr
 80007e6:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80007ea:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80007ee:	f1c2 0218 	rsb	r2, r2, #24
 80007f2:	f1c2 0c20 	rsb	ip, r2, #32
 80007f6:	fa10 f30c 	lsls.w	r3, r0, ip
 80007fa:	fa20 f002 	lsr.w	r0, r0, r2
 80007fe:	bf18      	it	ne
 8000800:	f040 0001 	orrne.w	r0, r0, #1
 8000804:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000808:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 800080c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000810:	ea40 000c 	orr.w	r0, r0, ip
 8000814:	fa23 f302 	lsr.w	r3, r3, r2
 8000818:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800081c:	e7cc      	b.n	80007b8 <__aeabi_d2f+0x14>
 800081e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000822:	d107      	bne.n	8000834 <__aeabi_d2f+0x90>
 8000824:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000828:	bf1e      	ittt	ne
 800082a:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 800082e:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000832:	4770      	bxne	lr
 8000834:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000838:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 800083c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000840:	4770      	bx	lr
 8000842:	bf00      	nop

08000844 <__aeabi_uldivmod>:
 8000844:	b953      	cbnz	r3, 800085c <__aeabi_uldivmod+0x18>
 8000846:	b94a      	cbnz	r2, 800085c <__aeabi_uldivmod+0x18>
 8000848:	2900      	cmp	r1, #0
 800084a:	bf08      	it	eq
 800084c:	2800      	cmpeq	r0, #0
 800084e:	bf1c      	itt	ne
 8000850:	f04f 31ff 	movne.w	r1, #4294967295
 8000854:	f04f 30ff 	movne.w	r0, #4294967295
 8000858:	f000 b988 	b.w	8000b6c <__aeabi_idiv0>
 800085c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000860:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000864:	f000 f806 	bl	8000874 <__udivmoddi4>
 8000868:	f8dd e004 	ldr.w	lr, [sp, #4]
 800086c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000870:	b004      	add	sp, #16
 8000872:	4770      	bx	lr

08000874 <__udivmoddi4>:
 8000874:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000878:	9d08      	ldr	r5, [sp, #32]
 800087a:	468e      	mov	lr, r1
 800087c:	4604      	mov	r4, r0
 800087e:	4688      	mov	r8, r1
 8000880:	2b00      	cmp	r3, #0
 8000882:	d14a      	bne.n	800091a <__udivmoddi4+0xa6>
 8000884:	428a      	cmp	r2, r1
 8000886:	4617      	mov	r7, r2
 8000888:	d962      	bls.n	8000950 <__udivmoddi4+0xdc>
 800088a:	fab2 f682 	clz	r6, r2
 800088e:	b14e      	cbz	r6, 80008a4 <__udivmoddi4+0x30>
 8000890:	f1c6 0320 	rsb	r3, r6, #32
 8000894:	fa01 f806 	lsl.w	r8, r1, r6
 8000898:	fa20 f303 	lsr.w	r3, r0, r3
 800089c:	40b7      	lsls	r7, r6
 800089e:	ea43 0808 	orr.w	r8, r3, r8
 80008a2:	40b4      	lsls	r4, r6
 80008a4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80008a8:	fa1f fc87 	uxth.w	ip, r7
 80008ac:	fbb8 f1fe 	udiv	r1, r8, lr
 80008b0:	0c23      	lsrs	r3, r4, #16
 80008b2:	fb0e 8811 	mls	r8, lr, r1, r8
 80008b6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80008ba:	fb01 f20c 	mul.w	r2, r1, ip
 80008be:	429a      	cmp	r2, r3
 80008c0:	d909      	bls.n	80008d6 <__udivmoddi4+0x62>
 80008c2:	18fb      	adds	r3, r7, r3
 80008c4:	f101 30ff 	add.w	r0, r1, #4294967295
 80008c8:	f080 80ea 	bcs.w	8000aa0 <__udivmoddi4+0x22c>
 80008cc:	429a      	cmp	r2, r3
 80008ce:	f240 80e7 	bls.w	8000aa0 <__udivmoddi4+0x22c>
 80008d2:	3902      	subs	r1, #2
 80008d4:	443b      	add	r3, r7
 80008d6:	1a9a      	subs	r2, r3, r2
 80008d8:	b2a3      	uxth	r3, r4
 80008da:	fbb2 f0fe 	udiv	r0, r2, lr
 80008de:	fb0e 2210 	mls	r2, lr, r0, r2
 80008e2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80008e6:	fb00 fc0c 	mul.w	ip, r0, ip
 80008ea:	459c      	cmp	ip, r3
 80008ec:	d909      	bls.n	8000902 <__udivmoddi4+0x8e>
 80008ee:	18fb      	adds	r3, r7, r3
 80008f0:	f100 32ff 	add.w	r2, r0, #4294967295
 80008f4:	f080 80d6 	bcs.w	8000aa4 <__udivmoddi4+0x230>
 80008f8:	459c      	cmp	ip, r3
 80008fa:	f240 80d3 	bls.w	8000aa4 <__udivmoddi4+0x230>
 80008fe:	443b      	add	r3, r7
 8000900:	3802      	subs	r0, #2
 8000902:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000906:	eba3 030c 	sub.w	r3, r3, ip
 800090a:	2100      	movs	r1, #0
 800090c:	b11d      	cbz	r5, 8000916 <__udivmoddi4+0xa2>
 800090e:	40f3      	lsrs	r3, r6
 8000910:	2200      	movs	r2, #0
 8000912:	e9c5 3200 	strd	r3, r2, [r5]
 8000916:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800091a:	428b      	cmp	r3, r1
 800091c:	d905      	bls.n	800092a <__udivmoddi4+0xb6>
 800091e:	b10d      	cbz	r5, 8000924 <__udivmoddi4+0xb0>
 8000920:	e9c5 0100 	strd	r0, r1, [r5]
 8000924:	2100      	movs	r1, #0
 8000926:	4608      	mov	r0, r1
 8000928:	e7f5      	b.n	8000916 <__udivmoddi4+0xa2>
 800092a:	fab3 f183 	clz	r1, r3
 800092e:	2900      	cmp	r1, #0
 8000930:	d146      	bne.n	80009c0 <__udivmoddi4+0x14c>
 8000932:	4573      	cmp	r3, lr
 8000934:	d302      	bcc.n	800093c <__udivmoddi4+0xc8>
 8000936:	4282      	cmp	r2, r0
 8000938:	f200 8105 	bhi.w	8000b46 <__udivmoddi4+0x2d2>
 800093c:	1a84      	subs	r4, r0, r2
 800093e:	eb6e 0203 	sbc.w	r2, lr, r3
 8000942:	2001      	movs	r0, #1
 8000944:	4690      	mov	r8, r2
 8000946:	2d00      	cmp	r5, #0
 8000948:	d0e5      	beq.n	8000916 <__udivmoddi4+0xa2>
 800094a:	e9c5 4800 	strd	r4, r8, [r5]
 800094e:	e7e2      	b.n	8000916 <__udivmoddi4+0xa2>
 8000950:	2a00      	cmp	r2, #0
 8000952:	f000 8090 	beq.w	8000a76 <__udivmoddi4+0x202>
 8000956:	fab2 f682 	clz	r6, r2
 800095a:	2e00      	cmp	r6, #0
 800095c:	f040 80a4 	bne.w	8000aa8 <__udivmoddi4+0x234>
 8000960:	1a8a      	subs	r2, r1, r2
 8000962:	0c03      	lsrs	r3, r0, #16
 8000964:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000968:	b280      	uxth	r0, r0
 800096a:	b2bc      	uxth	r4, r7
 800096c:	2101      	movs	r1, #1
 800096e:	fbb2 fcfe 	udiv	ip, r2, lr
 8000972:	fb0e 221c 	mls	r2, lr, ip, r2
 8000976:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800097a:	fb04 f20c 	mul.w	r2, r4, ip
 800097e:	429a      	cmp	r2, r3
 8000980:	d907      	bls.n	8000992 <__udivmoddi4+0x11e>
 8000982:	18fb      	adds	r3, r7, r3
 8000984:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000988:	d202      	bcs.n	8000990 <__udivmoddi4+0x11c>
 800098a:	429a      	cmp	r2, r3
 800098c:	f200 80e0 	bhi.w	8000b50 <__udivmoddi4+0x2dc>
 8000990:	46c4      	mov	ip, r8
 8000992:	1a9b      	subs	r3, r3, r2
 8000994:	fbb3 f2fe 	udiv	r2, r3, lr
 8000998:	fb0e 3312 	mls	r3, lr, r2, r3
 800099c:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80009a0:	fb02 f404 	mul.w	r4, r2, r4
 80009a4:	429c      	cmp	r4, r3
 80009a6:	d907      	bls.n	80009b8 <__udivmoddi4+0x144>
 80009a8:	18fb      	adds	r3, r7, r3
 80009aa:	f102 30ff 	add.w	r0, r2, #4294967295
 80009ae:	d202      	bcs.n	80009b6 <__udivmoddi4+0x142>
 80009b0:	429c      	cmp	r4, r3
 80009b2:	f200 80ca 	bhi.w	8000b4a <__udivmoddi4+0x2d6>
 80009b6:	4602      	mov	r2, r0
 80009b8:	1b1b      	subs	r3, r3, r4
 80009ba:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80009be:	e7a5      	b.n	800090c <__udivmoddi4+0x98>
 80009c0:	f1c1 0620 	rsb	r6, r1, #32
 80009c4:	408b      	lsls	r3, r1
 80009c6:	fa22 f706 	lsr.w	r7, r2, r6
 80009ca:	431f      	orrs	r7, r3
 80009cc:	fa0e f401 	lsl.w	r4, lr, r1
 80009d0:	fa20 f306 	lsr.w	r3, r0, r6
 80009d4:	fa2e fe06 	lsr.w	lr, lr, r6
 80009d8:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80009dc:	4323      	orrs	r3, r4
 80009de:	fa00 f801 	lsl.w	r8, r0, r1
 80009e2:	fa1f fc87 	uxth.w	ip, r7
 80009e6:	fbbe f0f9 	udiv	r0, lr, r9
 80009ea:	0c1c      	lsrs	r4, r3, #16
 80009ec:	fb09 ee10 	mls	lr, r9, r0, lr
 80009f0:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80009f4:	fb00 fe0c 	mul.w	lr, r0, ip
 80009f8:	45a6      	cmp	lr, r4
 80009fa:	fa02 f201 	lsl.w	r2, r2, r1
 80009fe:	d909      	bls.n	8000a14 <__udivmoddi4+0x1a0>
 8000a00:	193c      	adds	r4, r7, r4
 8000a02:	f100 3aff 	add.w	sl, r0, #4294967295
 8000a06:	f080 809c 	bcs.w	8000b42 <__udivmoddi4+0x2ce>
 8000a0a:	45a6      	cmp	lr, r4
 8000a0c:	f240 8099 	bls.w	8000b42 <__udivmoddi4+0x2ce>
 8000a10:	3802      	subs	r0, #2
 8000a12:	443c      	add	r4, r7
 8000a14:	eba4 040e 	sub.w	r4, r4, lr
 8000a18:	fa1f fe83 	uxth.w	lr, r3
 8000a1c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000a20:	fb09 4413 	mls	r4, r9, r3, r4
 8000a24:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000a28:	fb03 fc0c 	mul.w	ip, r3, ip
 8000a2c:	45a4      	cmp	ip, r4
 8000a2e:	d908      	bls.n	8000a42 <__udivmoddi4+0x1ce>
 8000a30:	193c      	adds	r4, r7, r4
 8000a32:	f103 3eff 	add.w	lr, r3, #4294967295
 8000a36:	f080 8082 	bcs.w	8000b3e <__udivmoddi4+0x2ca>
 8000a3a:	45a4      	cmp	ip, r4
 8000a3c:	d97f      	bls.n	8000b3e <__udivmoddi4+0x2ca>
 8000a3e:	3b02      	subs	r3, #2
 8000a40:	443c      	add	r4, r7
 8000a42:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000a46:	eba4 040c 	sub.w	r4, r4, ip
 8000a4a:	fba0 ec02 	umull	lr, ip, r0, r2
 8000a4e:	4564      	cmp	r4, ip
 8000a50:	4673      	mov	r3, lr
 8000a52:	46e1      	mov	r9, ip
 8000a54:	d362      	bcc.n	8000b1c <__udivmoddi4+0x2a8>
 8000a56:	d05f      	beq.n	8000b18 <__udivmoddi4+0x2a4>
 8000a58:	b15d      	cbz	r5, 8000a72 <__udivmoddi4+0x1fe>
 8000a5a:	ebb8 0203 	subs.w	r2, r8, r3
 8000a5e:	eb64 0409 	sbc.w	r4, r4, r9
 8000a62:	fa04 f606 	lsl.w	r6, r4, r6
 8000a66:	fa22 f301 	lsr.w	r3, r2, r1
 8000a6a:	431e      	orrs	r6, r3
 8000a6c:	40cc      	lsrs	r4, r1
 8000a6e:	e9c5 6400 	strd	r6, r4, [r5]
 8000a72:	2100      	movs	r1, #0
 8000a74:	e74f      	b.n	8000916 <__udivmoddi4+0xa2>
 8000a76:	fbb1 fcf2 	udiv	ip, r1, r2
 8000a7a:	0c01      	lsrs	r1, r0, #16
 8000a7c:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000a80:	b280      	uxth	r0, r0
 8000a82:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000a86:	463b      	mov	r3, r7
 8000a88:	4638      	mov	r0, r7
 8000a8a:	463c      	mov	r4, r7
 8000a8c:	46b8      	mov	r8, r7
 8000a8e:	46be      	mov	lr, r7
 8000a90:	2620      	movs	r6, #32
 8000a92:	fbb1 f1f7 	udiv	r1, r1, r7
 8000a96:	eba2 0208 	sub.w	r2, r2, r8
 8000a9a:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000a9e:	e766      	b.n	800096e <__udivmoddi4+0xfa>
 8000aa0:	4601      	mov	r1, r0
 8000aa2:	e718      	b.n	80008d6 <__udivmoddi4+0x62>
 8000aa4:	4610      	mov	r0, r2
 8000aa6:	e72c      	b.n	8000902 <__udivmoddi4+0x8e>
 8000aa8:	f1c6 0220 	rsb	r2, r6, #32
 8000aac:	fa2e f302 	lsr.w	r3, lr, r2
 8000ab0:	40b7      	lsls	r7, r6
 8000ab2:	40b1      	lsls	r1, r6
 8000ab4:	fa20 f202 	lsr.w	r2, r0, r2
 8000ab8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000abc:	430a      	orrs	r2, r1
 8000abe:	fbb3 f8fe 	udiv	r8, r3, lr
 8000ac2:	b2bc      	uxth	r4, r7
 8000ac4:	fb0e 3318 	mls	r3, lr, r8, r3
 8000ac8:	0c11      	lsrs	r1, r2, #16
 8000aca:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ace:	fb08 f904 	mul.w	r9, r8, r4
 8000ad2:	40b0      	lsls	r0, r6
 8000ad4:	4589      	cmp	r9, r1
 8000ad6:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000ada:	b280      	uxth	r0, r0
 8000adc:	d93e      	bls.n	8000b5c <__udivmoddi4+0x2e8>
 8000ade:	1879      	adds	r1, r7, r1
 8000ae0:	f108 3cff 	add.w	ip, r8, #4294967295
 8000ae4:	d201      	bcs.n	8000aea <__udivmoddi4+0x276>
 8000ae6:	4589      	cmp	r9, r1
 8000ae8:	d81f      	bhi.n	8000b2a <__udivmoddi4+0x2b6>
 8000aea:	eba1 0109 	sub.w	r1, r1, r9
 8000aee:	fbb1 f9fe 	udiv	r9, r1, lr
 8000af2:	fb09 f804 	mul.w	r8, r9, r4
 8000af6:	fb0e 1119 	mls	r1, lr, r9, r1
 8000afa:	b292      	uxth	r2, r2
 8000afc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b00:	4542      	cmp	r2, r8
 8000b02:	d229      	bcs.n	8000b58 <__udivmoddi4+0x2e4>
 8000b04:	18ba      	adds	r2, r7, r2
 8000b06:	f109 31ff 	add.w	r1, r9, #4294967295
 8000b0a:	d2c4      	bcs.n	8000a96 <__udivmoddi4+0x222>
 8000b0c:	4542      	cmp	r2, r8
 8000b0e:	d2c2      	bcs.n	8000a96 <__udivmoddi4+0x222>
 8000b10:	f1a9 0102 	sub.w	r1, r9, #2
 8000b14:	443a      	add	r2, r7
 8000b16:	e7be      	b.n	8000a96 <__udivmoddi4+0x222>
 8000b18:	45f0      	cmp	r8, lr
 8000b1a:	d29d      	bcs.n	8000a58 <__udivmoddi4+0x1e4>
 8000b1c:	ebbe 0302 	subs.w	r3, lr, r2
 8000b20:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000b24:	3801      	subs	r0, #1
 8000b26:	46e1      	mov	r9, ip
 8000b28:	e796      	b.n	8000a58 <__udivmoddi4+0x1e4>
 8000b2a:	eba7 0909 	sub.w	r9, r7, r9
 8000b2e:	4449      	add	r1, r9
 8000b30:	f1a8 0c02 	sub.w	ip, r8, #2
 8000b34:	fbb1 f9fe 	udiv	r9, r1, lr
 8000b38:	fb09 f804 	mul.w	r8, r9, r4
 8000b3c:	e7db      	b.n	8000af6 <__udivmoddi4+0x282>
 8000b3e:	4673      	mov	r3, lr
 8000b40:	e77f      	b.n	8000a42 <__udivmoddi4+0x1ce>
 8000b42:	4650      	mov	r0, sl
 8000b44:	e766      	b.n	8000a14 <__udivmoddi4+0x1a0>
 8000b46:	4608      	mov	r0, r1
 8000b48:	e6fd      	b.n	8000946 <__udivmoddi4+0xd2>
 8000b4a:	443b      	add	r3, r7
 8000b4c:	3a02      	subs	r2, #2
 8000b4e:	e733      	b.n	80009b8 <__udivmoddi4+0x144>
 8000b50:	f1ac 0c02 	sub.w	ip, ip, #2
 8000b54:	443b      	add	r3, r7
 8000b56:	e71c      	b.n	8000992 <__udivmoddi4+0x11e>
 8000b58:	4649      	mov	r1, r9
 8000b5a:	e79c      	b.n	8000a96 <__udivmoddi4+0x222>
 8000b5c:	eba1 0109 	sub.w	r1, r1, r9
 8000b60:	46c4      	mov	ip, r8
 8000b62:	fbb1 f9fe 	udiv	r9, r1, lr
 8000b66:	fb09 f804 	mul.w	r8, r9, r4
 8000b6a:	e7c4      	b.n	8000af6 <__udivmoddi4+0x282>

08000b6c <__aeabi_idiv0>:
 8000b6c:	4770      	bx	lr
 8000b6e:	bf00      	nop

08000b70 <OnFrameReceived>:
    }
}
*/

void OnFrameReceived(UartProtocol* proto, uint16_t cmd, uint16_t len, uint8_t* payload)
{
 8000b70:	b580      	push	{r7, lr}
 8000b72:	b098      	sub	sp, #96	@ 0x60
 8000b74:	af02      	add	r7, sp, #8
 8000b76:	60f8      	str	r0, [r7, #12]
 8000b78:	607b      	str	r3, [r7, #4]
 8000b7a:	460b      	mov	r3, r1
 8000b7c:	817b      	strh	r3, [r7, #10]
 8000b7e:	4613      	mov	r3, r2
 8000b80:	813b      	strh	r3, [r7, #8]
    if (cmd == CMD_QPSK_MOD_DEMOD) {
 8000b82:	897b      	ldrh	r3, [r7, #10]
 8000b84:	f241 0210 	movw	r2, #4112	@ 0x1010
 8000b88:	4293      	cmp	r3, r2
 8000b8a:	d152      	bne.n	8000c32 <OnFrameReceived+0xc2>
        QpskRingBuffer_Init(&tx_ringbuf);
 8000b8c:	482b      	ldr	r0, [pc, #172]	@ (8000c3c <OnFrameReceived+0xcc>)
 8000b8e:	f000 fd63 	bl	8001658 <QpskRingBuffer_Init>
        QpskRingBuffer_Init(&rx_ringbuf);
 8000b92:	482b      	ldr	r0, [pc, #172]	@ (8000c40 <OnFrameReceived+0xd0>)
 8000b94:	f000 fd60 	bl	8001658 <QpskRingBuffer_Init>
        QpskModem_Modulate(&huart2, &modem, payload, len);
 8000b98:	893b      	ldrh	r3, [r7, #8]
 8000b9a:	687a      	ldr	r2, [r7, #4]
 8000b9c:	4929      	ldr	r1, [pc, #164]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000b9e:	482a      	ldr	r0, [pc, #168]	@ (8000c48 <OnFrameReceived+0xd8>)
 8000ba0:	f000 fa42 	bl	8001028 <QpskModem_Modulate>
        QpskModem_SymbolsToIQ(&modem);
 8000ba4:	4827      	ldr	r0, [pc, #156]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000ba6:	f000 fc6f 	bl	8001488 <QpskModem_SymbolsToIQ>
        QpskModem_GenerateSignal(&modem, &tx_ringbuf, 1.0f);
 8000baa:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8000bae:	4923      	ldr	r1, [pc, #140]	@ (8000c3c <OnFrameReceived+0xcc>)
 8000bb0:	4824      	ldr	r0, [pc, #144]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000bb2:	f000 fca7 	bl	8001504 <QpskModem_GenerateSignal>
        Qpsk_SimulateReception(&tx_ringbuf, &rx_ringbuf);
 8000bb6:	4922      	ldr	r1, [pc, #136]	@ (8000c40 <OnFrameReceived+0xd0>)
 8000bb8:	4820      	ldr	r0, [pc, #128]	@ (8000c3c <OnFrameReceived+0xcc>)
 8000bba:	f000 fe05 	bl	80017c8 <Qpsk_SimulateReception>

        uint8_t data_out[QPSK_MAX_SYMBOLS/4];
        uint16_t len_out = 0;
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	f8a7 3054 	strh.w	r3, [r7, #84]	@ 0x54
        QpskModem_Demodulate(&huart2, &modem, &rx_ringbuf, data_out, &len_out);
 8000bc4:	f107 0214 	add.w	r2, r7, #20
 8000bc8:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8000bcc:	9300      	str	r3, [sp, #0]
 8000bce:	4613      	mov	r3, r2
 8000bd0:	4a1b      	ldr	r2, [pc, #108]	@ (8000c40 <OnFrameReceived+0xd0>)
 8000bd2:	491c      	ldr	r1, [pc, #112]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000bd4:	481c      	ldr	r0, [pc, #112]	@ (8000c48 <OnFrameReceived+0xd8>)
 8000bd6:	f000 fa8f 	bl	80010f8 <QpskModem_Demodulate>

        // Prépare les symboles pour la transmission optique
        for (uint16_t i = 0; i < modem.num_symbols; ++i)
 8000bda:	2300      	movs	r3, #0
 8000bdc:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
 8000be0:	e00c      	b.n	8000bfc <OnFrameReceived+0x8c>
            qpsk_symbols[i] = modem.symbols[i];
 8000be2:	f8b7 2056 	ldrh.w	r2, [r7, #86]	@ 0x56
 8000be6:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 8000bea:	4916      	ldr	r1, [pc, #88]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000bec:	5c89      	ldrb	r1, [r1, r2]
 8000bee:	4a17      	ldr	r2, [pc, #92]	@ (8000c4c <OnFrameReceived+0xdc>)
 8000bf0:	54d1      	strb	r1, [r2, r3]
        for (uint16_t i = 0; i < modem.num_symbols; ++i)
 8000bf2:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 8000bf6:	3301      	adds	r3, #1
 8000bf8:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
 8000bfc:	4b11      	ldr	r3, [pc, #68]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000bfe:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 8000c02:	f8b7 2056 	ldrh.w	r2, [r7, #86]	@ 0x56
 8000c06:	429a      	cmp	r2, r3
 8000c08:	d3eb      	bcc.n	8000be2 <OnFrameReceived+0x72>
        qpsk_num_symbols = modem.num_symbols;
 8000c0a:	4b0e      	ldr	r3, [pc, #56]	@ (8000c44 <OnFrameReceived+0xd4>)
 8000c0c:	f8b3 2100 	ldrh.w	r2, [r3, #256]	@ 0x100
 8000c10:	4b0f      	ldr	r3, [pc, #60]	@ (8000c50 <OnFrameReceived+0xe0>)
 8000c12:	801a      	strh	r2, [r3, #0]
        qpsk_symbol_idx = 0;
 8000c14:	4b0f      	ldr	r3, [pc, #60]	@ (8000c54 <OnFrameReceived+0xe4>)
 8000c16:	2200      	movs	r2, #0
 8000c18:	801a      	strh	r2, [r3, #0]
        qpsk_transmitting = 1; // Drapeau pour démarrer la transmission optique
 8000c1a:	4b0f      	ldr	r3, [pc, #60]	@ (8000c58 <OnFrameReceived+0xe8>)
 8000c1c:	2201      	movs	r2, #1
 8000c1e:	701a      	strb	r2, [r3, #0]

        UartProtocol_SendFrame(&huart2, CMD_QPSK_RESULT, len_out, data_out);
 8000c20:	f8b7 2054 	ldrh.w	r2, [r7, #84]	@ 0x54
 8000c24:	f107 0314 	add.w	r3, r7, #20
 8000c28:	f249 0110 	movw	r1, #36880	@ 0x9010
 8000c2c:	4806      	ldr	r0, [pc, #24]	@ (8000c48 <OnFrameReceived+0xd8>)
 8000c2e:	f001 f813 	bl	8001c58 <UartProtocol_SendFrame>
    }
}
 8000c32:	bf00      	nop
 8000c34:	3758      	adds	r7, #88	@ 0x58
 8000c36:	46bd      	mov	sp, r7
 8000c38:	bd80      	pop	{r7, pc}
 8000c3a:	bf00      	nop
 8000c3c:	200003c8 	.word	0x200003c8
 8000c40:	200023d0 	.word	0x200023d0
 8000c44:	200000b8 	.word	0x200000b8
 8000c48:	20000070 	.word	0x20000070
 8000c4c:	200043d8 	.word	0x200043d8
 8000c50:	200044d8 	.word	0x200044d8
 8000c54:	200044da 	.word	0x200044da
 8000c58:	200044dc 	.word	0x200044dc

08000c5c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000c5c:	b580      	push	{r7, lr}
 8000c5e:	b0c8      	sub	sp, #288	@ 0x120
 8000c60:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000c62:	f001 f901 	bl	8001e68 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000c66:	f000 f89d 	bl	8000da4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000c6a:	f000 f975 	bl	8000f58 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000c6e:	f000 f949 	bl	8000f04 <MX_USART2_UART_Init>
  MX_ADC1_Init();
 8000c72:	f000 f8f5 	bl	8000e60 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */
  UartProtocol_Init(&proto, OnFrameReceived);
 8000c76:	1d3b      	adds	r3, r7, #4
 8000c78:	4940      	ldr	r1, [pc, #256]	@ (8000d7c <main+0x120>)
 8000c7a:	4618      	mov	r0, r3
 8000c7c:	f000 ff03 	bl	8001a86 <UartProtocol_Init>

  QpskModem_Init(&modem, 16, 40000.0f, 640000.0f);
 8000c80:	eddf 0a3f 	vldr	s1, [pc, #252]	@ 8000d80 <main+0x124>
 8000c84:	ed9f 0a3f 	vldr	s0, [pc, #252]	@ 8000d84 <main+0x128>
 8000c88:	2110      	movs	r1, #16
 8000c8a:	483f      	ldr	r0, [pc, #252]	@ (8000d88 <main+0x12c>)
 8000c8c:	f000 f9b0 	bl	8000ff0 <QpskModem_Init>
              transmitting = 0;
          }
      }
  }*/

  uint32_t last_symbol_tick = 0;
 8000c90:	2300      	movs	r3, #0
 8000c92:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
  const uint32_t symbol_duration_ms = 83; // Ajuste selon la caméra
 8000c96:	2353      	movs	r3, #83	@ 0x53
 8000c98:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118

  while (1)
  {
      if (HAL_UART_Receive(&huart2, &c, 1, 10) == HAL_OK) {
 8000c9c:	1cf9      	adds	r1, r7, #3
 8000c9e:	230a      	movs	r3, #10
 8000ca0:	2201      	movs	r2, #1
 8000ca2:	483a      	ldr	r0, [pc, #232]	@ (8000d8c <main+0x130>)
 8000ca4:	f002 fb7b 	bl	800339e <HAL_UART_Receive>
 8000ca8:	4603      	mov	r3, r0
 8000caa:	2b00      	cmp	r3, #0
 8000cac:	d109      	bne.n	8000cc2 <main+0x66>
          UartProtocol_ParseByte(&proto, c);
 8000cae:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8000cb2:	f2a3 131d 	subw	r3, r3, #285	@ 0x11d
 8000cb6:	781a      	ldrb	r2, [r3, #0]
 8000cb8:	1d3b      	adds	r3, r7, #4
 8000cba:	4611      	mov	r1, r2
 8000cbc:	4618      	mov	r0, r3
 8000cbe:	f000 ff03 	bl	8001ac8 <UartProtocol_ParseByte>
      }

      // Transmission QPSK optique
      if (qpsk_transmitting && (HAL_GetTick() - last_symbol_tick >= symbol_duration_ms)) {
 8000cc2:	4b33      	ldr	r3, [pc, #204]	@ (8000d90 <main+0x134>)
 8000cc4:	781b      	ldrb	r3, [r3, #0]
 8000cc6:	b2db      	uxtb	r3, r3
 8000cc8:	2b00      	cmp	r3, #0
 8000cca:	d0e7      	beq.n	8000c9c <main+0x40>
 8000ccc:	f001 f932 	bl	8001f34 <HAL_GetTick>
 8000cd0:	4602      	mov	r2, r0
 8000cd2:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8000cd6:	1ad3      	subs	r3, r2, r3
 8000cd8:	f8d7 2118 	ldr.w	r2, [r7, #280]	@ 0x118
 8000cdc:	429a      	cmp	r2, r3
 8000cde:	d8dd      	bhi.n	8000c9c <main+0x40>
          if (qpsk_symbol_idx < qpsk_num_symbols) {
 8000ce0:	4b2c      	ldr	r3, [pc, #176]	@ (8000d94 <main+0x138>)
 8000ce2:	881b      	ldrh	r3, [r3, #0]
 8000ce4:	b29a      	uxth	r2, r3
 8000ce6:	4b2c      	ldr	r3, [pc, #176]	@ (8000d98 <main+0x13c>)
 8000ce8:	881b      	ldrh	r3, [r3, #0]
 8000cea:	b29b      	uxth	r3, r3
 8000cec:	429a      	cmp	r2, r3
 8000cee:	d236      	bcs.n	8000d5e <main+0x102>
              uint8_t symbol = qpsk_symbols[qpsk_symbol_idx++];
 8000cf0:	4b28      	ldr	r3, [pc, #160]	@ (8000d94 <main+0x138>)
 8000cf2:	881b      	ldrh	r3, [r3, #0]
 8000cf4:	b29b      	uxth	r3, r3
 8000cf6:	1c5a      	adds	r2, r3, #1
 8000cf8:	b291      	uxth	r1, r2
 8000cfa:	4a26      	ldr	r2, [pc, #152]	@ (8000d94 <main+0x138>)
 8000cfc:	8011      	strh	r1, [r2, #0]
 8000cfe:	461a      	mov	r2, r3
 8000d00:	4b26      	ldr	r3, [pc, #152]	@ (8000d9c <main+0x140>)
 8000d02:	5c9b      	ldrb	r3, [r3, r2]
 8000d04:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
              // Mapping QPSK -> LEDs (2 bits)
              uint8_t bit0 = (symbol >> 1) & 0x01; // MSB
 8000d08:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8000d0c:	085b      	lsrs	r3, r3, #1
 8000d0e:	b2db      	uxtb	r3, r3
 8000d10:	f003 0301 	and.w	r3, r3, #1
 8000d14:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
              uint8_t bit1 = symbol & 0x01;        // LSB
 8000d18:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8000d1c:	f003 0301 	and.w	r3, r3, #1
 8000d20:	f887 3115 	strb.w	r3, [r7, #277]	@ 0x115
              HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, bit0 ? GPIO_PIN_SET : GPIO_PIN_RESET); // LED_A
 8000d24:	f897 3116 	ldrb.w	r3, [r7, #278]	@ 0x116
 8000d28:	2b00      	cmp	r3, #0
 8000d2a:	bf14      	ite	ne
 8000d2c:	2301      	movne	r3, #1
 8000d2e:	2300      	moveq	r3, #0
 8000d30:	b2db      	uxtb	r3, r3
 8000d32:	461a      	mov	r2, r3
 8000d34:	2120      	movs	r1, #32
 8000d36:	481a      	ldr	r0, [pc, #104]	@ (8000da0 <main+0x144>)
 8000d38:	f001 fde4 	bl	8002904 <HAL_GPIO_WritePin>
              HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, bit1 ? GPIO_PIN_SET : GPIO_PIN_RESET); // LED_B
 8000d3c:	f897 3115 	ldrb.w	r3, [r7, #277]	@ 0x115
 8000d40:	2b00      	cmp	r3, #0
 8000d42:	bf14      	ite	ne
 8000d44:	2301      	movne	r3, #1
 8000d46:	2300      	moveq	r3, #0
 8000d48:	b2db      	uxtb	r3, r3
 8000d4a:	461a      	mov	r2, r3
 8000d4c:	2140      	movs	r1, #64	@ 0x40
 8000d4e:	4814      	ldr	r0, [pc, #80]	@ (8000da0 <main+0x144>)
 8000d50:	f001 fdd8 	bl	8002904 <HAL_GPIO_WritePin>
              last_symbol_tick = HAL_GetTick();
 8000d54:	f001 f8ee 	bl	8001f34 <HAL_GetTick>
 8000d58:	f8c7 011c 	str.w	r0, [r7, #284]	@ 0x11c
 8000d5c:	e79e      	b.n	8000c9c <main+0x40>
          } else {
              // Fin de transmission
              HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8000d5e:	2200      	movs	r2, #0
 8000d60:	2120      	movs	r1, #32
 8000d62:	480f      	ldr	r0, [pc, #60]	@ (8000da0 <main+0x144>)
 8000d64:	f001 fdce 	bl	8002904 <HAL_GPIO_WritePin>
              HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
 8000d68:	2200      	movs	r2, #0
 8000d6a:	2140      	movs	r1, #64	@ 0x40
 8000d6c:	480c      	ldr	r0, [pc, #48]	@ (8000da0 <main+0x144>)
 8000d6e:	f001 fdc9 	bl	8002904 <HAL_GPIO_WritePin>
              qpsk_transmitting = 0;
 8000d72:	4b07      	ldr	r3, [pc, #28]	@ (8000d90 <main+0x134>)
 8000d74:	2200      	movs	r2, #0
 8000d76:	701a      	strb	r2, [r3, #0]
      if (HAL_UART_Receive(&huart2, &c, 1, 10) == HAL_OK) {
 8000d78:	e790      	b.n	8000c9c <main+0x40>
 8000d7a:	bf00      	nop
 8000d7c:	08000b71 	.word	0x08000b71
 8000d80:	491c4000 	.word	0x491c4000
 8000d84:	471c4000 	.word	0x471c4000
 8000d88:	200000b8 	.word	0x200000b8
 8000d8c:	20000070 	.word	0x20000070
 8000d90:	200044dc 	.word	0x200044dc
 8000d94:	200044da 	.word	0x200044da
 8000d98:	200044d8 	.word	0x200044d8
 8000d9c:	200043d8 	.word	0x200043d8
 8000da0:	40020000 	.word	0x40020000

08000da4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000da4:	b580      	push	{r7, lr}
 8000da6:	b094      	sub	sp, #80	@ 0x50
 8000da8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000daa:	f107 0320 	add.w	r3, r7, #32
 8000dae:	2230      	movs	r2, #48	@ 0x30
 8000db0:	2100      	movs	r1, #0
 8000db2:	4618      	mov	r0, r3
 8000db4:	f002 feba 	bl	8003b2c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000db8:	f107 030c 	add.w	r3, r7, #12
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	601a      	str	r2, [r3, #0]
 8000dc0:	605a      	str	r2, [r3, #4]
 8000dc2:	609a      	str	r2, [r3, #8]
 8000dc4:	60da      	str	r2, [r3, #12]
 8000dc6:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000dc8:	2300      	movs	r3, #0
 8000dca:	60bb      	str	r3, [r7, #8]
 8000dcc:	4b22      	ldr	r3, [pc, #136]	@ (8000e58 <SystemClock_Config+0xb4>)
 8000dce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000dd0:	4a21      	ldr	r2, [pc, #132]	@ (8000e58 <SystemClock_Config+0xb4>)
 8000dd2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000dd6:	6413      	str	r3, [r2, #64]	@ 0x40
 8000dd8:	4b1f      	ldr	r3, [pc, #124]	@ (8000e58 <SystemClock_Config+0xb4>)
 8000dda:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ddc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000de0:	60bb      	str	r3, [r7, #8]
 8000de2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000de4:	2300      	movs	r3, #0
 8000de6:	607b      	str	r3, [r7, #4]
 8000de8:	4b1c      	ldr	r3, [pc, #112]	@ (8000e5c <SystemClock_Config+0xb8>)
 8000dea:	681b      	ldr	r3, [r3, #0]
 8000dec:	4a1b      	ldr	r2, [pc, #108]	@ (8000e5c <SystemClock_Config+0xb8>)
 8000dee:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000df2:	6013      	str	r3, [r2, #0]
 8000df4:	4b19      	ldr	r3, [pc, #100]	@ (8000e5c <SystemClock_Config+0xb8>)
 8000df6:	681b      	ldr	r3, [r3, #0]
 8000df8:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000dfc:	607b      	str	r3, [r7, #4]
 8000dfe:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000e00:	2302      	movs	r3, #2
 8000e02:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000e04:	2301      	movs	r3, #1
 8000e06:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000e08:	2310      	movs	r3, #16
 8000e0a:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000e0c:	2300      	movs	r3, #0
 8000e0e:	63bb      	str	r3, [r7, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000e10:	f107 0320 	add.w	r3, r7, #32
 8000e14:	4618      	mov	r0, r3
 8000e16:	f001 fd8f 	bl	8002938 <HAL_RCC_OscConfig>
 8000e1a:	4603      	mov	r3, r0
 8000e1c:	2b00      	cmp	r3, #0
 8000e1e:	d001      	beq.n	8000e24 <SystemClock_Config+0x80>
  {
    Error_Handler();
 8000e20:	f000 f8e0 	bl	8000fe4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000e24:	230f      	movs	r3, #15
 8000e26:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000e28:	2300      	movs	r3, #0
 8000e2a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000e30:	2300      	movs	r3, #0
 8000e32:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000e34:	2300      	movs	r3, #0
 8000e36:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000e38:	f107 030c 	add.w	r3, r7, #12
 8000e3c:	2100      	movs	r1, #0
 8000e3e:	4618      	mov	r0, r3
 8000e40:	f001 fff2 	bl	8002e28 <HAL_RCC_ClockConfig>
 8000e44:	4603      	mov	r3, r0
 8000e46:	2b00      	cmp	r3, #0
 8000e48:	d001      	beq.n	8000e4e <SystemClock_Config+0xaa>
  {
    Error_Handler();
 8000e4a:	f000 f8cb 	bl	8000fe4 <Error_Handler>
  }
}
 8000e4e:	bf00      	nop
 8000e50:	3750      	adds	r7, #80	@ 0x50
 8000e52:	46bd      	mov	sp, r7
 8000e54:	bd80      	pop	{r7, pc}
 8000e56:	bf00      	nop
 8000e58:	40023800 	.word	0x40023800
 8000e5c:	40007000 	.word	0x40007000

08000e60 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000e60:	b580      	push	{r7, lr}
 8000e62:	b084      	sub	sp, #16
 8000e64:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000e66:	463b      	mov	r3, r7
 8000e68:	2200      	movs	r2, #0
 8000e6a:	601a      	str	r2, [r3, #0]
 8000e6c:	605a      	str	r2, [r3, #4]
 8000e6e:	609a      	str	r2, [r3, #8]
 8000e70:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000e72:	4b21      	ldr	r3, [pc, #132]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000e74:	4a21      	ldr	r2, [pc, #132]	@ (8000efc <MX_ADC1_Init+0x9c>)
 8000e76:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8000e78:	4b1f      	ldr	r3, [pc, #124]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000e7a:	2200      	movs	r2, #0
 8000e7c:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000e7e:	4b1e      	ldr	r3, [pc, #120]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000e80:	2200      	movs	r2, #0
 8000e82:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000e84:	4b1c      	ldr	r3, [pc, #112]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000e86:	2200      	movs	r2, #0
 8000e88:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000e8a:	4b1b      	ldr	r3, [pc, #108]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000e8c:	2200      	movs	r2, #0
 8000e8e:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000e90:	4b19      	ldr	r3, [pc, #100]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000e92:	2200      	movs	r2, #0
 8000e94:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000e98:	4b17      	ldr	r3, [pc, #92]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000e9a:	2200      	movs	r2, #0
 8000e9c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000e9e:	4b16      	ldr	r3, [pc, #88]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000ea0:	4a17      	ldr	r2, [pc, #92]	@ (8000f00 <MX_ADC1_Init+0xa0>)
 8000ea2:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000ea4:	4b14      	ldr	r3, [pc, #80]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000ea6:	2200      	movs	r2, #0
 8000ea8:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000eaa:	4b13      	ldr	r3, [pc, #76]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000eac:	2201      	movs	r2, #1
 8000eae:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000eb0:	4b11      	ldr	r3, [pc, #68]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000eb2:	2200      	movs	r2, #0
 8000eb4:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000eb8:	4b0f      	ldr	r3, [pc, #60]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000eba:	2201      	movs	r2, #1
 8000ebc:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000ebe:	480e      	ldr	r0, [pc, #56]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000ec0:	f001 f844 	bl	8001f4c <HAL_ADC_Init>
 8000ec4:	4603      	mov	r3, r0
 8000ec6:	2b00      	cmp	r3, #0
 8000ec8:	d001      	beq.n	8000ece <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 8000eca:	f000 f88b 	bl	8000fe4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000ece:	2300      	movs	r3, #0
 8000ed0:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000ed2:	2301      	movs	r3, #1
 8000ed4:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000ed6:	2300      	movs	r3, #0
 8000ed8:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000eda:	463b      	mov	r3, r7
 8000edc:	4619      	mov	r1, r3
 8000ede:	4806      	ldr	r0, [pc, #24]	@ (8000ef8 <MX_ADC1_Init+0x98>)
 8000ee0:	f001 f878 	bl	8001fd4 <HAL_ADC_ConfigChannel>
 8000ee4:	4603      	mov	r3, r0
 8000ee6:	2b00      	cmp	r3, #0
 8000ee8:	d001      	beq.n	8000eee <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 8000eea:	f000 f87b 	bl	8000fe4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000eee:	bf00      	nop
 8000ef0:	3710      	adds	r7, #16
 8000ef2:	46bd      	mov	sp, r7
 8000ef4:	bd80      	pop	{r7, pc}
 8000ef6:	bf00      	nop
 8000ef8:	20000028 	.word	0x20000028
 8000efc:	40012000 	.word	0x40012000
 8000f00:	0f000001 	.word	0x0f000001

08000f04 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000f04:	b580      	push	{r7, lr}
 8000f06:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000f08:	4b11      	ldr	r3, [pc, #68]	@ (8000f50 <MX_USART2_UART_Init+0x4c>)
 8000f0a:	4a12      	ldr	r2, [pc, #72]	@ (8000f54 <MX_USART2_UART_Init+0x50>)
 8000f0c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000f0e:	4b10      	ldr	r3, [pc, #64]	@ (8000f50 <MX_USART2_UART_Init+0x4c>)
 8000f10:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000f14:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000f16:	4b0e      	ldr	r3, [pc, #56]	@ (8000f50 <MX_USART2_UART_Init+0x4c>)
 8000f18:	2200      	movs	r2, #0
 8000f1a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000f1c:	4b0c      	ldr	r3, [pc, #48]	@ (8000f50 <MX_USART2_UART_Init+0x4c>)
 8000f1e:	2200      	movs	r2, #0
 8000f20:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000f22:	4b0b      	ldr	r3, [pc, #44]	@ (8000f50 <MX_USART2_UART_Init+0x4c>)
 8000f24:	2200      	movs	r2, #0
 8000f26:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000f28:	4b09      	ldr	r3, [pc, #36]	@ (8000f50 <MX_USART2_UART_Init+0x4c>)
 8000f2a:	220c      	movs	r2, #12
 8000f2c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000f2e:	4b08      	ldr	r3, [pc, #32]	@ (8000f50 <MX_USART2_UART_Init+0x4c>)
 8000f30:	2200      	movs	r2, #0
 8000f32:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000f34:	4b06      	ldr	r3, [pc, #24]	@ (8000f50 <MX_USART2_UART_Init+0x4c>)
 8000f36:	2200      	movs	r2, #0
 8000f38:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000f3a:	4805      	ldr	r0, [pc, #20]	@ (8000f50 <MX_USART2_UART_Init+0x4c>)
 8000f3c:	f002 f954 	bl	80031e8 <HAL_UART_Init>
 8000f40:	4603      	mov	r3, r0
 8000f42:	2b00      	cmp	r3, #0
 8000f44:	d001      	beq.n	8000f4a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000f46:	f000 f84d 	bl	8000fe4 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000f4a:	bf00      	nop
 8000f4c:	bd80      	pop	{r7, pc}
 8000f4e:	bf00      	nop
 8000f50:	20000070 	.word	0x20000070
 8000f54:	40004400 	.word	0x40004400

08000f58 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000f58:	b580      	push	{r7, lr}
 8000f5a:	b088      	sub	sp, #32
 8000f5c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MX_GPIO_Init_1 */
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f5e:	f107 030c 	add.w	r3, r7, #12
 8000f62:	2200      	movs	r2, #0
 8000f64:	601a      	str	r2, [r3, #0]
 8000f66:	605a      	str	r2, [r3, #4]
 8000f68:	609a      	str	r2, [r3, #8]
 8000f6a:	60da      	str	r2, [r3, #12]
 8000f6c:	611a      	str	r2, [r3, #16]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8000f6e:	2300      	movs	r3, #0
 8000f70:	60bb      	str	r3, [r7, #8]
 8000f72:	4b1a      	ldr	r3, [pc, #104]	@ (8000fdc <MX_GPIO_Init+0x84>)
 8000f74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f76:	4a19      	ldr	r2, [pc, #100]	@ (8000fdc <MX_GPIO_Init+0x84>)
 8000f78:	f043 0301 	orr.w	r3, r3, #1
 8000f7c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000f7e:	4b17      	ldr	r3, [pc, #92]	@ (8000fdc <MX_GPIO_Init+0x84>)
 8000f80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f82:	f003 0301 	and.w	r3, r3, #1
 8000f86:	60bb      	str	r3, [r7, #8]
 8000f88:	68bb      	ldr	r3, [r7, #8]
	GPIO_InitStruct.Pin = GPIO_PIN_5;
 8000f8a:	2320      	movs	r3, #32
 8000f8c:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000f8e:	2301      	movs	r3, #1
 8000f90:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f92:	2300      	movs	r3, #0
 8000f94:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f96:	2300      	movs	r3, #0
 8000f98:	61bb      	str	r3, [r7, #24]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f9a:	f107 030c 	add.w	r3, r7, #12
 8000f9e:	4619      	mov	r1, r3
 8000fa0:	480f      	ldr	r0, [pc, #60]	@ (8000fe0 <MX_GPIO_Init+0x88>)
 8000fa2:	f001 fb2b 	bl	80025fc <HAL_GPIO_Init>


	GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000fa6:	2340      	movs	r3, #64	@ 0x40
 8000fa8:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000faa:	f107 030c 	add.w	r3, r7, #12
 8000fae:	4619      	mov	r1, r3
 8000fb0:	480b      	ldr	r0, [pc, #44]	@ (8000fe0 <MX_GPIO_Init+0x88>)
 8000fb2:	f001 fb23 	bl	80025fc <HAL_GPIO_Init>
  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000fb6:	2300      	movs	r3, #0
 8000fb8:	607b      	str	r3, [r7, #4]
 8000fba:	4b08      	ldr	r3, [pc, #32]	@ (8000fdc <MX_GPIO_Init+0x84>)
 8000fbc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000fbe:	4a07      	ldr	r2, [pc, #28]	@ (8000fdc <MX_GPIO_Init+0x84>)
 8000fc0:	f043 0301 	orr.w	r3, r3, #1
 8000fc4:	6313      	str	r3, [r2, #48]	@ 0x30
 8000fc6:	4b05      	ldr	r3, [pc, #20]	@ (8000fdc <MX_GPIO_Init+0x84>)
 8000fc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000fca:	f003 0301 	and.w	r3, r3, #1
 8000fce:	607b      	str	r3, [r7, #4]
 8000fd0:	687b      	ldr	r3, [r7, #4]

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8000fd2:	bf00      	nop
 8000fd4:	3720      	adds	r7, #32
 8000fd6:	46bd      	mov	sp, r7
 8000fd8:	bd80      	pop	{r7, pc}
 8000fda:	bf00      	nop
 8000fdc:	40023800 	.word	0x40023800
 8000fe0:	40020000 	.word	0x40020000

08000fe4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000fe4:	b480      	push	{r7}
 8000fe6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000fe8:	b672      	cpsid	i
}
 8000fea:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000fec:	bf00      	nop
 8000fee:	e7fd      	b.n	8000fec <Error_Handler+0x8>

08000ff0 <QpskModem_Init>:
static const float PI = 3.14159265358979323846f;
//static const float QPSK_PHASE[4] = { PI/4, 3*PI/4, 5*PI/4, 7*PI/4 };

//QPSK modulation Functions

void QpskModem_Init(QpskModem* modem, uint16_t sample_per_symbol, float f0, float fs){
 8000ff0:	b480      	push	{r7}
 8000ff2:	b085      	sub	sp, #20
 8000ff4:	af00      	add	r7, sp, #0
 8000ff6:	60f8      	str	r0, [r7, #12]
 8000ff8:	460b      	mov	r3, r1
 8000ffa:	ed87 0a01 	vstr	s0, [r7, #4]
 8000ffe:	edc7 0a00 	vstr	s1, [r7]
 8001002:	817b      	strh	r3, [r7, #10]
	modem->samples_per_symbol = sample_per_symbol;
 8001004:	68fb      	ldr	r3, [r7, #12]
 8001006:	897a      	ldrh	r2, [r7, #10]
 8001008:	f8a3 2304 	strh.w	r2, [r3, #772]	@ 0x304
	modem->f0 = f0;
 800100c:	68fb      	ldr	r3, [r7, #12]
 800100e:	687a      	ldr	r2, [r7, #4]
 8001010:	f8c3 2308 	str.w	r2, [r3, #776]	@ 0x308
	modem->fs = fs;
 8001014:	68fb      	ldr	r3, [r7, #12]
 8001016:	683a      	ldr	r2, [r7, #0]
 8001018:	f8c3 230c 	str.w	r2, [r3, #780]	@ 0x30c
}
 800101c:	bf00      	nop
 800101e:	3714      	adds	r7, #20
 8001020:	46bd      	mov	sp, r7
 8001022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001026:	4770      	bx	lr

08001028 <QpskModem_Modulate>:
			modem->symbols[idx++] = (byte >> b) & 0x03;
		}
	}
}*/

void QpskModem_Modulate(UART_HandleTypeDef* huart2, QpskModem* modem, const uint8_t* data, uint16_t len){
 8001028:	b580      	push	{r7, lr}
 800102a:	b088      	sub	sp, #32
 800102c:	af00      	add	r7, sp, #0
 800102e:	60f8      	str	r0, [r7, #12]
 8001030:	60b9      	str	r1, [r7, #8]
 8001032:	607a      	str	r2, [r7, #4]
 8001034:	807b      	strh	r3, [r7, #2]
    modem->num_symbols = len*4;
 8001036:	887b      	ldrh	r3, [r7, #2]
 8001038:	009b      	lsls	r3, r3, #2
 800103a:	b29a      	uxth	r2, r3
 800103c:	68bb      	ldr	r3, [r7, #8]
 800103e:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
    uint16_t idx = 0;
 8001042:	2300      	movs	r3, #0
 8001044:	83fb      	strh	r3, [r7, #30]
    for (uint16_t i =0 ; i < len ; i++){
 8001046:	2300      	movs	r3, #0
 8001048:	83bb      	strh	r3, [r7, #28]
 800104a:	e04a      	b.n	80010e2 <QpskModem_Modulate+0xba>
        uint8_t byte = data[i];
 800104c:	8bbb      	ldrh	r3, [r7, #28]
 800104e:	687a      	ldr	r2, [r7, #4]
 8001050:	4413      	add	r3, r2
 8001052:	781b      	ldrb	r3, [r3, #0]
 8001054:	757b      	strb	r3, [r7, #21]
        for(int b=6; b>= 0 ; b-=2){
 8001056:	2306      	movs	r3, #6
 8001058:	61bb      	str	r3, [r7, #24]
 800105a:	e03c      	b.n	80010d6 <QpskModem_Modulate+0xae>
            uint8_t symbol = (byte >> b) & 0x03;
 800105c:	7d7a      	ldrb	r2, [r7, #21]
 800105e:	69bb      	ldr	r3, [r7, #24]
 8001060:	fa42 f303 	asr.w	r3, r2, r3
 8001064:	b2db      	uxtb	r3, r3
 8001066:	f003 0303 	and.w	r3, r3, #3
 800106a:	753b      	strb	r3, [r7, #20]
            modem->symbols[idx++] = symbol;
 800106c:	8bfb      	ldrh	r3, [r7, #30]
 800106e:	1c5a      	adds	r2, r3, #1
 8001070:	83fa      	strh	r2, [r7, #30]
 8001072:	4619      	mov	r1, r3
 8001074:	68bb      	ldr	r3, [r7, #8]
 8001076:	7d3a      	ldrb	r2, [r7, #20]
 8001078:	545a      	strb	r2, [r3, r1]

           //Sending the TX IQ Constellation
            int8_t i_val, q_val;
            switch(symbol) {
 800107a:	7d3b      	ldrb	r3, [r7, #20]
 800107c:	2b03      	cmp	r3, #3
 800107e:	d81f      	bhi.n	80010c0 <QpskModem_Modulate+0x98>
 8001080:	a201      	add	r2, pc, #4	@ (adr r2, 8001088 <QpskModem_Modulate+0x60>)
 8001082:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001086:	bf00      	nop
 8001088:	08001099 	.word	0x08001099
 800108c:	080010a3 	.word	0x080010a3
 8001090:	080010ad 	.word	0x080010ad
 8001094:	080010b7 	.word	0x080010b7
                case 0: i_val =  127; q_val =  127; break; // 00
 8001098:	237f      	movs	r3, #127	@ 0x7f
 800109a:	75fb      	strb	r3, [r7, #23]
 800109c:	237f      	movs	r3, #127	@ 0x7f
 800109e:	75bb      	strb	r3, [r7, #22]
 80010a0:	e00e      	b.n	80010c0 <QpskModem_Modulate+0x98>
                case 1: i_val = -127; q_val =  127; break; // 01
 80010a2:	2381      	movs	r3, #129	@ 0x81
 80010a4:	75fb      	strb	r3, [r7, #23]
 80010a6:	237f      	movs	r3, #127	@ 0x7f
 80010a8:	75bb      	strb	r3, [r7, #22]
 80010aa:	e009      	b.n	80010c0 <QpskModem_Modulate+0x98>
                case 2: i_val = -127; q_val = -127; break; // 10
 80010ac:	2381      	movs	r3, #129	@ 0x81
 80010ae:	75fb      	strb	r3, [r7, #23]
 80010b0:	2381      	movs	r3, #129	@ 0x81
 80010b2:	75bb      	strb	r3, [r7, #22]
 80010b4:	e004      	b.n	80010c0 <QpskModem_Modulate+0x98>
                case 3: i_val =  127; q_val = -127; break; // 11
 80010b6:	237f      	movs	r3, #127	@ 0x7f
 80010b8:	75fb      	strb	r3, [r7, #23]
 80010ba:	2381      	movs	r3, #129	@ 0x81
 80010bc:	75bb      	strb	r3, [r7, #22]
 80010be:	bf00      	nop
            }
            SendIQFrame(huart2, i_val, q_val);
 80010c0:	f997 2016 	ldrsb.w	r2, [r7, #22]
 80010c4:	f997 3017 	ldrsb.w	r3, [r7, #23]
 80010c8:	4619      	mov	r1, r3
 80010ca:	68f8      	ldr	r0, [r7, #12]
 80010cc:	f000 fe88 	bl	8001de0 <SendIQFrame>
        for(int b=6; b>= 0 ; b-=2){
 80010d0:	69bb      	ldr	r3, [r7, #24]
 80010d2:	3b02      	subs	r3, #2
 80010d4:	61bb      	str	r3, [r7, #24]
 80010d6:	69bb      	ldr	r3, [r7, #24]
 80010d8:	2b00      	cmp	r3, #0
 80010da:	dabf      	bge.n	800105c <QpskModem_Modulate+0x34>
    for (uint16_t i =0 ; i < len ; i++){
 80010dc:	8bbb      	ldrh	r3, [r7, #28]
 80010de:	3301      	adds	r3, #1
 80010e0:	83bb      	strh	r3, [r7, #28]
 80010e2:	8bba      	ldrh	r2, [r7, #28]
 80010e4:	887b      	ldrh	r3, [r7, #2]
 80010e6:	429a      	cmp	r2, r3
 80010e8:	d3b0      	bcc.n	800104c <QpskModem_Modulate+0x24>
        }
    }
}
 80010ea:	bf00      	nop
 80010ec:	bf00      	nop
 80010ee:	3720      	adds	r7, #32
 80010f0:	46bd      	mov	sp, r7
 80010f2:	bd80      	pop	{r7, pc}
 80010f4:	0000      	movs	r0, r0
	...

080010f8 <QpskModem_Demodulate>:


void QpskModem_Demodulate(UART_HandleTypeDef* huart2,QpskModem* modem, QpskRingBuffer* rxbuf, uint8_t* data_out, uint16_t* len_out) {
 80010f8:	b5b0      	push	{r4, r5, r7, lr}
 80010fa:	b0d0      	sub	sp, #320	@ 0x140
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	f507 74a0 	add.w	r4, r7, #320	@ 0x140
 8001102:	f5a4 749a 	sub.w	r4, r4, #308	@ 0x134
 8001106:	6020      	str	r0, [r4, #0]
 8001108:	f507 70a0 	add.w	r0, r7, #320	@ 0x140
 800110c:	f5a0 709c 	sub.w	r0, r0, #312	@ 0x138
 8001110:	6001      	str	r1, [r0, #0]
 8001112:	f507 71a0 	add.w	r1, r7, #320	@ 0x140
 8001116:	f5a1 719e 	sub.w	r1, r1, #316	@ 0x13c
 800111a:	600a      	str	r2, [r1, #0]
 800111c:	f507 72a0 	add.w	r2, r7, #320	@ 0x140
 8001120:	f5a2 72a0 	sub.w	r2, r2, #320	@ 0x140
 8001124:	6013      	str	r3, [r2, #0]
    uint16_t nb_symbols = 0;
 8001126:	2300      	movs	r3, #0
 8001128:	f8a7 313e 	strh.w	r3, [r7, #318]	@ 0x13e
    uint8_t symbols[QPSK_MAX_SYMBOLS];
    uint32_t global_sample = 0;
 800112c:	2300      	movs	r3, #0
 800112e:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
    for (uint16_t s = 0; s < QPSK_MAX_SYMBOLS; s++) {
 8001132:	2300      	movs	r3, #0
 8001134:	f8a7 3136 	strh.w	r3, [r7, #310]	@ 0x136
 8001138:	e13e      	b.n	80013b8 <QpskModem_Demodulate+0x2c0>
        if (QpskRingBuffer_Available(rxbuf) < modem->samples_per_symbol)
 800113a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 800113e:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8001142:	6818      	ldr	r0, [r3, #0]
 8001144:	f000 fb17 	bl	8001776 <QpskRingBuffer_Available>
 8001148:	4602      	mov	r2, r0
 800114a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 800114e:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8001152:	681b      	ldr	r3, [r3, #0]
 8001154:	f8b3 3304 	ldrh.w	r3, [r3, #772]	@ 0x304
 8001158:	429a      	cmp	r2, r3
 800115a:	f0c0 8133 	bcc.w	80013c4 <QpskModem_Demodulate+0x2cc>
            break;
        float I = 0.0f, Q = 0.0f;
 800115e:	f04f 0300 	mov.w	r3, #0
 8001162:	f8c7 3130 	str.w	r3, [r7, #304]	@ 0x130
 8001166:	f04f 0300 	mov.w	r3, #0
 800116a:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
        for (uint16_t n = 0; n < modem->samples_per_symbol; n++, global_sample++) {
 800116e:	2300      	movs	r3, #0
 8001170:	f8a7 312a 	strh.w	r3, [r7, #298]	@ 0x12a
 8001174:	e098      	b.n	80012a8 <QpskModem_Demodulate+0x1b0>
            float t = (float)global_sample / modem->fs;
 8001176:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 800117a:	ee07 3a90 	vmov	s15, r3
 800117e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8001182:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001186:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	ed93 7ac3 	vldr	s14, [r3, #780]	@ 0x30c
 8001190:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001194:	edc7 7a48 	vstr	s15, [r7, #288]	@ 0x120
            float ref_cos = cosf(2 * M_PI * modem->f0 * t);
 8001198:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 800119c:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 80011a0:	681b      	ldr	r3, [r3, #0]
 80011a2:	f8d3 3308 	ldr.w	r3, [r3, #776]	@ 0x308
 80011a6:	4618      	mov	r0, r3
 80011a8:	f7ff faa4 	bl	80006f4 <__aeabi_f2d>
 80011ac:	a3b4      	add	r3, pc, #720	@ (adr r3, 8001480 <QpskModem_Demodulate+0x388>)
 80011ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011b2:	f7ff f811 	bl	80001d8 <__aeabi_dmul>
 80011b6:	4602      	mov	r2, r0
 80011b8:	460b      	mov	r3, r1
 80011ba:	4614      	mov	r4, r2
 80011bc:	461d      	mov	r5, r3
 80011be:	f8d7 0120 	ldr.w	r0, [r7, #288]	@ 0x120
 80011c2:	f7ff fa97 	bl	80006f4 <__aeabi_f2d>
 80011c6:	4602      	mov	r2, r0
 80011c8:	460b      	mov	r3, r1
 80011ca:	4620      	mov	r0, r4
 80011cc:	4629      	mov	r1, r5
 80011ce:	f7ff f803 	bl	80001d8 <__aeabi_dmul>
 80011d2:	4602      	mov	r2, r0
 80011d4:	460b      	mov	r3, r1
 80011d6:	4610      	mov	r0, r2
 80011d8:	4619      	mov	r1, r3
 80011da:	f7ff fae3 	bl	80007a4 <__aeabi_d2f>
 80011de:	4603      	mov	r3, r0
 80011e0:	ee00 3a10 	vmov	s0, r3
 80011e4:	f002 fcce 	bl	8003b84 <cosf>
 80011e8:	ed87 0a47 	vstr	s0, [r7, #284]	@ 0x11c
            float ref_sin = sinf(2 * M_PI * modem->f0 * t);
 80011ec:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80011f0:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 80011f4:	681b      	ldr	r3, [r3, #0]
 80011f6:	f8d3 3308 	ldr.w	r3, [r3, #776]	@ 0x308
 80011fa:	4618      	mov	r0, r3
 80011fc:	f7ff fa7a 	bl	80006f4 <__aeabi_f2d>
 8001200:	a39f      	add	r3, pc, #636	@ (adr r3, 8001480 <QpskModem_Demodulate+0x388>)
 8001202:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001206:	f7fe ffe7 	bl	80001d8 <__aeabi_dmul>
 800120a:	4602      	mov	r2, r0
 800120c:	460b      	mov	r3, r1
 800120e:	4614      	mov	r4, r2
 8001210:	461d      	mov	r5, r3
 8001212:	f8d7 0120 	ldr.w	r0, [r7, #288]	@ 0x120
 8001216:	f7ff fa6d 	bl	80006f4 <__aeabi_f2d>
 800121a:	4602      	mov	r2, r0
 800121c:	460b      	mov	r3, r1
 800121e:	4620      	mov	r0, r4
 8001220:	4629      	mov	r1, r5
 8001222:	f7fe ffd9 	bl	80001d8 <__aeabi_dmul>
 8001226:	4602      	mov	r2, r0
 8001228:	460b      	mov	r3, r1
 800122a:	4610      	mov	r0, r2
 800122c:	4619      	mov	r1, r3
 800122e:	f7ff fab9 	bl	80007a4 <__aeabi_d2f>
 8001232:	4603      	mov	r3, r0
 8001234:	ee00 3a10 	vmov	s0, r3
 8001238:	f002 fce8 	bl	8003c0c <sinf>
 800123c:	ed87 0a46 	vstr	s0, [r7, #280]	@ 0x118
            int16_t sample = QpskRingBuffer_Get(rxbuf);
 8001240:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001244:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8001248:	6818      	ldr	r0, [r3, #0]
 800124a:	f000 fa6f 	bl	800172c <QpskRingBuffer_Get>
 800124e:	4603      	mov	r3, r0
 8001250:	f8a7 3116 	strh.w	r3, [r7, #278]	@ 0x116
            I += sample * ref_cos;
 8001254:	f9b7 3116 	ldrsh.w	r3, [r7, #278]	@ 0x116
 8001258:	ee07 3a90 	vmov	s15, r3
 800125c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001260:	edd7 7a47 	vldr	s15, [r7, #284]	@ 0x11c
 8001264:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001268:	ed97 7a4c 	vldr	s14, [r7, #304]	@ 0x130
 800126c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001270:	edc7 7a4c 	vstr	s15, [r7, #304]	@ 0x130
            Q += sample * ref_sin;
 8001274:	f9b7 3116 	ldrsh.w	r3, [r7, #278]	@ 0x116
 8001278:	ee07 3a90 	vmov	s15, r3
 800127c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001280:	edd7 7a46 	vldr	s15, [r7, #280]	@ 0x118
 8001284:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001288:	ed97 7a4b 	vldr	s14, [r7, #300]	@ 0x12c
 800128c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001290:	edc7 7a4b 	vstr	s15, [r7, #300]	@ 0x12c
        for (uint16_t n = 0; n < modem->samples_per_symbol; n++, global_sample++) {
 8001294:	f8b7 312a 	ldrh.w	r3, [r7, #298]	@ 0x12a
 8001298:	3301      	adds	r3, #1
 800129a:	f8a7 312a 	strh.w	r3, [r7, #298]	@ 0x12a
 800129e:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 80012a2:	3301      	adds	r3, #1
 80012a4:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
 80012a8:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80012ac:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	f8b3 3304 	ldrh.w	r3, [r3, #772]	@ 0x304
 80012b6:	f8b7 212a 	ldrh.w	r2, [r7, #298]	@ 0x12a
 80012ba:	429a      	cmp	r2, r3
 80012bc:	f4ff af5b 	bcc.w	8001176 <QpskModem_Demodulate+0x7e>
        }

        uint8_t i_val, q_val;
        uint8_t payload[3];
        payload[0] = 'R';
 80012c0:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80012c4:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80012c8:	2252      	movs	r2, #82	@ 0x52
 80012ca:	701a      	strb	r2, [r3, #0]
        payload[1] = (uint8_t)i_val;
 80012cc:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80012d0:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80012d4:	f897 2125 	ldrb.w	r2, [r7, #293]	@ 0x125
 80012d8:	705a      	strb	r2, [r3, #1]
        payload[2] = (uint8_t)q_val;
 80012da:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80012de:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80012e2:	f897 2124 	ldrb.w	r2, [r7, #292]	@ 0x124
 80012e6:	709a      	strb	r2, [r3, #2]
        UartProtocol_SendFrame(huart2, 0x55AA, 3, payload);
 80012e8:	f107 0310 	add.w	r3, r7, #16
 80012ec:	f507 72a0 	add.w	r2, r7, #320	@ 0x140
 80012f0:	f5a2 709a 	sub.w	r0, r2, #308	@ 0x134
 80012f4:	2203      	movs	r2, #3
 80012f6:	f245 51aa 	movw	r1, #21930	@ 0x55aa
 80012fa:	6800      	ldr	r0, [r0, #0]
 80012fc:	f000 fcac 	bl	8001c58 <UartProtocol_SendFrame>

        uint8_t symbol = 0;
 8001300:	2300      	movs	r3, #0
 8001302:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
        if (I >= 0 && Q >= 0) symbol = 0;
 8001306:	edd7 7a4c 	vldr	s15, [r7, #304]	@ 0x130
 800130a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800130e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001312:	db0a      	blt.n	800132a <QpskModem_Demodulate+0x232>
 8001314:	edd7 7a4b 	vldr	s15, [r7, #300]	@ 0x12c
 8001318:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800131c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001320:	db03      	blt.n	800132a <QpskModem_Demodulate+0x232>
 8001322:	2300      	movs	r3, #0
 8001324:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
 8001328:	e034      	b.n	8001394 <QpskModem_Demodulate+0x29c>
        else if (I < 0 && Q >= 0) symbol = 1;
 800132a:	edd7 7a4c 	vldr	s15, [r7, #304]	@ 0x130
 800132e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001336:	d50a      	bpl.n	800134e <QpskModem_Demodulate+0x256>
 8001338:	edd7 7a4b 	vldr	s15, [r7, #300]	@ 0x12c
 800133c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001340:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001344:	db03      	blt.n	800134e <QpskModem_Demodulate+0x256>
 8001346:	2301      	movs	r3, #1
 8001348:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
 800134c:	e022      	b.n	8001394 <QpskModem_Demodulate+0x29c>
        else if (I < 0 && Q < 0) symbol = 2;
 800134e:	edd7 7a4c 	vldr	s15, [r7, #304]	@ 0x130
 8001352:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001356:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800135a:	d50a      	bpl.n	8001372 <QpskModem_Demodulate+0x27a>
 800135c:	edd7 7a4b 	vldr	s15, [r7, #300]	@ 0x12c
 8001360:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001364:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001368:	d503      	bpl.n	8001372 <QpskModem_Demodulate+0x27a>
 800136a:	2302      	movs	r3, #2
 800136c:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
 8001370:	e010      	b.n	8001394 <QpskModem_Demodulate+0x29c>
        else if (I >= 0 && Q < 0) symbol = 3;
 8001372:	edd7 7a4c 	vldr	s15, [r7, #304]	@ 0x130
 8001376:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800137a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800137e:	db09      	blt.n	8001394 <QpskModem_Demodulate+0x29c>
 8001380:	edd7 7a4b 	vldr	s15, [r7, #300]	@ 0x12c
 8001384:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800138c:	d502      	bpl.n	8001394 <QpskModem_Demodulate+0x29c>
 800138e:	2303      	movs	r3, #3
 8001390:	f887 3129 	strb.w	r3, [r7, #297]	@ 0x129
        symbols[nb_symbols++] = symbol;
 8001394:	f8b7 313e 	ldrh.w	r3, [r7, #318]	@ 0x13e
 8001398:	1c5a      	adds	r2, r3, #1
 800139a:	f8a7 213e 	strh.w	r2, [r7, #318]	@ 0x13e
 800139e:	4619      	mov	r1, r3
 80013a0:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80013a4:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 80013a8:	f897 2129 	ldrb.w	r2, [r7, #297]	@ 0x129
 80013ac:	545a      	strb	r2, [r3, r1]
    for (uint16_t s = 0; s < QPSK_MAX_SYMBOLS; s++) {
 80013ae:	f8b7 3136 	ldrh.w	r3, [r7, #310]	@ 0x136
 80013b2:	3301      	adds	r3, #1
 80013b4:	f8a7 3136 	strh.w	r3, [r7, #310]	@ 0x136
 80013b8:	f8b7 3136 	ldrh.w	r3, [r7, #310]	@ 0x136
 80013bc:	2bff      	cmp	r3, #255	@ 0xff
 80013be:	f67f aebc 	bls.w	800113a <QpskModem_Demodulate+0x42>
 80013c2:	e000      	b.n	80013c6 <QpskModem_Demodulate+0x2ce>
            break;
 80013c4:	bf00      	nop
    }
    *len_out = nb_symbols / 4;
 80013c6:	f8b7 313e 	ldrh.w	r3, [r7, #318]	@ 0x13e
 80013ca:	089b      	lsrs	r3, r3, #2
 80013cc:	b29a      	uxth	r2, r3
 80013ce:	f8d7 3150 	ldr.w	r3, [r7, #336]	@ 0x150
 80013d2:	801a      	strh	r2, [r3, #0]
    for (uint16_t i = 0; i < *len_out; i++) {
 80013d4:	2300      	movs	r3, #0
 80013d6:	f8a7 3126 	strh.w	r3, [r7, #294]	@ 0x126
 80013da:	e041      	b.n	8001460 <QpskModem_Demodulate+0x368>
        data_out[i] = (symbols[i*4+0] << 6) | (symbols[i*4+1] << 4) | (symbols[i*4+2] << 2) | (symbols[i*4+3]);
 80013dc:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 80013e0:	009b      	lsls	r3, r3, #2
 80013e2:	f507 72a0 	add.w	r2, r7, #320	@ 0x140
 80013e6:	f5a2 7296 	sub.w	r2, r2, #300	@ 0x12c
 80013ea:	5cd3      	ldrb	r3, [r2, r3]
 80013ec:	b25b      	sxtb	r3, r3
 80013ee:	019b      	lsls	r3, r3, #6
 80013f0:	b25a      	sxtb	r2, r3
 80013f2:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 80013f6:	009b      	lsls	r3, r3, #2
 80013f8:	3301      	adds	r3, #1
 80013fa:	f507 71a0 	add.w	r1, r7, #320	@ 0x140
 80013fe:	f5a1 7196 	sub.w	r1, r1, #300	@ 0x12c
 8001402:	5ccb      	ldrb	r3, [r1, r3]
 8001404:	b25b      	sxtb	r3, r3
 8001406:	011b      	lsls	r3, r3, #4
 8001408:	b25b      	sxtb	r3, r3
 800140a:	4313      	orrs	r3, r2
 800140c:	b25a      	sxtb	r2, r3
 800140e:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 8001412:	009b      	lsls	r3, r3, #2
 8001414:	3302      	adds	r3, #2
 8001416:	f507 71a0 	add.w	r1, r7, #320	@ 0x140
 800141a:	f5a1 7196 	sub.w	r1, r1, #300	@ 0x12c
 800141e:	5ccb      	ldrb	r3, [r1, r3]
 8001420:	b25b      	sxtb	r3, r3
 8001422:	009b      	lsls	r3, r3, #2
 8001424:	b25b      	sxtb	r3, r3
 8001426:	4313      	orrs	r3, r2
 8001428:	b25a      	sxtb	r2, r3
 800142a:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 800142e:	009b      	lsls	r3, r3, #2
 8001430:	3303      	adds	r3, #3
 8001432:	f507 71a0 	add.w	r1, r7, #320	@ 0x140
 8001436:	f5a1 7196 	sub.w	r1, r1, #300	@ 0x12c
 800143a:	5ccb      	ldrb	r3, [r1, r3]
 800143c:	b25b      	sxtb	r3, r3
 800143e:	4313      	orrs	r3, r2
 8001440:	b259      	sxtb	r1, r3
 8001442:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 8001446:	f507 72a0 	add.w	r2, r7, #320	@ 0x140
 800144a:	f5a2 72a0 	sub.w	r2, r2, #320	@ 0x140
 800144e:	6812      	ldr	r2, [r2, #0]
 8001450:	4413      	add	r3, r2
 8001452:	b2ca      	uxtb	r2, r1
 8001454:	701a      	strb	r2, [r3, #0]
    for (uint16_t i = 0; i < *len_out; i++) {
 8001456:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 800145a:	3301      	adds	r3, #1
 800145c:	f8a7 3126 	strh.w	r3, [r7, #294]	@ 0x126
 8001460:	f8d7 3150 	ldr.w	r3, [r7, #336]	@ 0x150
 8001464:	881b      	ldrh	r3, [r3, #0]
 8001466:	f8b7 2126 	ldrh.w	r2, [r7, #294]	@ 0x126
 800146a:	429a      	cmp	r2, r3
 800146c:	d3b6      	bcc.n	80013dc <QpskModem_Demodulate+0x2e4>
    }
}
 800146e:	bf00      	nop
 8001470:	bf00      	nop
 8001472:	f507 77a0 	add.w	r7, r7, #320	@ 0x140
 8001476:	46bd      	mov	sp, r7
 8001478:	bdb0      	pop	{r4, r5, r7, pc}
 800147a:	bf00      	nop
 800147c:	f3af 8000 	nop.w
 8001480:	54442d18 	.word	0x54442d18
 8001484:	401921fb 	.word	0x401921fb

08001488 <QpskModem_SymbolsToIQ>:


void QpskModem_SymbolsToIQ(QpskModem* modem){
 8001488:	b480      	push	{r7}
 800148a:	b085      	sub	sp, #20
 800148c:	af00      	add	r7, sp, #0
 800148e:	6078      	str	r0, [r7, #4]
	for (uint16_t i=0; i < modem ->num_symbols; i++){
 8001490:	2300      	movs	r3, #0
 8001492:	81fb      	strh	r3, [r7, #14]
 8001494:	e01d      	b.n	80014d2 <QpskModem_SymbolsToIQ+0x4a>
		modem->iq[2*i] = QPSK_I[modem->symbols[i]];
 8001496:	89fb      	ldrh	r3, [r7, #14]
 8001498:	687a      	ldr	r2, [r7, #4]
 800149a:	5cd3      	ldrb	r3, [r2, r3]
 800149c:	4619      	mov	r1, r3
 800149e:	89fb      	ldrh	r3, [r7, #14]
 80014a0:	005b      	lsls	r3, r3, #1
 80014a2:	4a16      	ldr	r2, [pc, #88]	@ (80014fc <QpskModem_SymbolsToIQ+0x74>)
 80014a4:	5651      	ldrsb	r1, [r2, r1]
 80014a6:	687a      	ldr	r2, [r7, #4]
 80014a8:	4413      	add	r3, r2
 80014aa:	460a      	mov	r2, r1
 80014ac:	f883 2102 	strb.w	r2, [r3, #258]	@ 0x102
		modem->iq[2*i+1] = QPSK_Q[modem->symbols[i]];
 80014b0:	89fb      	ldrh	r3, [r7, #14]
 80014b2:	687a      	ldr	r2, [r7, #4]
 80014b4:	5cd3      	ldrb	r3, [r2, r3]
 80014b6:	4619      	mov	r1, r3
 80014b8:	89fb      	ldrh	r3, [r7, #14]
 80014ba:	005b      	lsls	r3, r3, #1
 80014bc:	3301      	adds	r3, #1
 80014be:	4a10      	ldr	r2, [pc, #64]	@ (8001500 <QpskModem_SymbolsToIQ+0x78>)
 80014c0:	5651      	ldrsb	r1, [r2, r1]
 80014c2:	687a      	ldr	r2, [r7, #4]
 80014c4:	4413      	add	r3, r2
 80014c6:	460a      	mov	r2, r1
 80014c8:	f883 2102 	strb.w	r2, [r3, #258]	@ 0x102
	for (uint16_t i=0; i < modem ->num_symbols; i++){
 80014cc:	89fb      	ldrh	r3, [r7, #14]
 80014ce:	3301      	adds	r3, #1
 80014d0:	81fb      	strh	r3, [r7, #14]
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80014d8:	89fa      	ldrh	r2, [r7, #14]
 80014da:	429a      	cmp	r2, r3
 80014dc:	d3db      	bcc.n	8001496 <QpskModem_SymbolsToIQ+0xe>
	}
	modem->num_iq = modem->num_symbols*2;
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80014e4:	005b      	lsls	r3, r3, #1
 80014e6:	b29a      	uxth	r2, r3
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	f8a3 2302 	strh.w	r2, [r3, #770]	@ 0x302
}
 80014ee:	bf00      	nop
 80014f0:	3714      	adds	r7, #20
 80014f2:	46bd      	mov	sp, r7
 80014f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f8:	4770      	bx	lr
 80014fa:	bf00      	nop
 80014fc:	08004684 	.word	0x08004684
 8001500:	08004688 	.word	0x08004688

08001504 <QpskModem_GenerateSignal>:

void QpskModem_GenerateSignal(QpskModem* modem, QpskRingBuffer* txbuf, float amplitude) {
 8001504:	b580      	push	{r7, lr}
 8001506:	ed2d 8b02 	vpush	{d8}
 800150a:	b08a      	sub	sp, #40	@ 0x28
 800150c:	af00      	add	r7, sp, #0
 800150e:	60f8      	str	r0, [r7, #12]
 8001510:	60b9      	str	r1, [r7, #8]
 8001512:	ed87 0a01 	vstr	s0, [r7, #4]
    uint32_t global_sample = 0;
 8001516:	2300      	movs	r3, #0
 8001518:	627b      	str	r3, [r7, #36]	@ 0x24
    for (uint16_t s = 0; s < modem->num_symbols; s++) {
 800151a:	2300      	movs	r3, #0
 800151c:	847b      	strh	r3, [r7, #34]	@ 0x22
 800151e:	e082      	b.n	8001626 <QpskModem_GenerateSignal+0x122>
        float I = QPSK_I[modem->symbols[s]] / 127.0f;
 8001520:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8001522:	68fa      	ldr	r2, [r7, #12]
 8001524:	5cd3      	ldrb	r3, [r2, r3]
 8001526:	461a      	mov	r2, r3
 8001528:	4b46      	ldr	r3, [pc, #280]	@ (8001644 <QpskModem_GenerateSignal+0x140>)
 800152a:	569b      	ldrsb	r3, [r3, r2]
 800152c:	ee07 3a90 	vmov	s15, r3
 8001530:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001534:	eddf 6a44 	vldr	s13, [pc, #272]	@ 8001648 <QpskModem_GenerateSignal+0x144>
 8001538:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800153c:	edc7 7a07 	vstr	s15, [r7, #28]
        float Q = QPSK_Q[modem->symbols[s]] / 127.0f;
 8001540:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8001542:	68fa      	ldr	r2, [r7, #12]
 8001544:	5cd3      	ldrb	r3, [r2, r3]
 8001546:	461a      	mov	r2, r3
 8001548:	4b40      	ldr	r3, [pc, #256]	@ (800164c <QpskModem_GenerateSignal+0x148>)
 800154a:	569b      	ldrsb	r3, [r3, r2]
 800154c:	ee07 3a90 	vmov	s15, r3
 8001550:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001554:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 8001648 <QpskModem_GenerateSignal+0x144>
 8001558:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800155c:	edc7 7a06 	vstr	s15, [r7, #24]
        for (uint16_t n = 0; n < modem->samples_per_symbol; n++, global_sample++) {
 8001560:	2300      	movs	r3, #0
 8001562:	843b      	strh	r3, [r7, #32]
 8001564:	e056      	b.n	8001614 <QpskModem_GenerateSignal+0x110>
            float t = (float)global_sample / modem->fs;
 8001566:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001568:	ee07 3a90 	vmov	s15, r3
 800156c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8001570:	68fb      	ldr	r3, [r7, #12]
 8001572:	ed93 7ac3 	vldr	s14, [r3, #780]	@ 0x30c
 8001576:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800157a:	edc7 7a05 	vstr	s15, [r7, #20]
            float sample = amplitude * (I * cosf(2 * PI * modem->f0 * t) + Q * sinf(2 * PI * modem->f0 * t));
 800157e:	eddf 7a34 	vldr	s15, [pc, #208]	@ 8001650 <QpskModem_GenerateSignal+0x14c>
 8001582:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8001586:	68fb      	ldr	r3, [r7, #12]
 8001588:	edd3 7ac2 	vldr	s15, [r3, #776]	@ 0x308
 800158c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001590:	edd7 7a05 	vldr	s15, [r7, #20]
 8001594:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001598:	eeb0 0a67 	vmov.f32	s0, s15
 800159c:	f002 faf2 	bl	8003b84 <cosf>
 80015a0:	eeb0 7a40 	vmov.f32	s14, s0
 80015a4:	edd7 7a07 	vldr	s15, [r7, #28]
 80015a8:	ee27 8a27 	vmul.f32	s16, s14, s15
 80015ac:	eddf 7a28 	vldr	s15, [pc, #160]	@ 8001650 <QpskModem_GenerateSignal+0x14c>
 80015b0:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80015b4:	68fb      	ldr	r3, [r7, #12]
 80015b6:	edd3 7ac2 	vldr	s15, [r3, #776]	@ 0x308
 80015ba:	ee27 7a27 	vmul.f32	s14, s14, s15
 80015be:	edd7 7a05 	vldr	s15, [r7, #20]
 80015c2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80015c6:	eeb0 0a67 	vmov.f32	s0, s15
 80015ca:	f002 fb1f 	bl	8003c0c <sinf>
 80015ce:	eeb0 7a40 	vmov.f32	s14, s0
 80015d2:	edd7 7a06 	vldr	s15, [r7, #24]
 80015d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80015da:	ee78 7a27 	vadd.f32	s15, s16, s15
 80015de:	ed97 7a01 	vldr	s14, [r7, #4]
 80015e2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80015e6:	edc7 7a04 	vstr	s15, [r7, #16]
            QpskRingBuffer_Put(txbuf, (int16_t)(sample * 2047.0f));
 80015ea:	edd7 7a04 	vldr	s15, [r7, #16]
 80015ee:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8001654 <QpskModem_GenerateSignal+0x150>
 80015f2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80015f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80015fa:	ee17 3a90 	vmov	r3, s15
 80015fe:	b21b      	sxth	r3, r3
 8001600:	4619      	mov	r1, r3
 8001602:	68b8      	ldr	r0, [r7, #8]
 8001604:	f000 f86f 	bl	80016e6 <QpskRingBuffer_Put>
        for (uint16_t n = 0; n < modem->samples_per_symbol; n++, global_sample++) {
 8001608:	8c3b      	ldrh	r3, [r7, #32]
 800160a:	3301      	adds	r3, #1
 800160c:	843b      	strh	r3, [r7, #32]
 800160e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001610:	3301      	adds	r3, #1
 8001612:	627b      	str	r3, [r7, #36]	@ 0x24
 8001614:	68fb      	ldr	r3, [r7, #12]
 8001616:	f8b3 3304 	ldrh.w	r3, [r3, #772]	@ 0x304
 800161a:	8c3a      	ldrh	r2, [r7, #32]
 800161c:	429a      	cmp	r2, r3
 800161e:	d3a2      	bcc.n	8001566 <QpskModem_GenerateSignal+0x62>
    for (uint16_t s = 0; s < modem->num_symbols; s++) {
 8001620:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8001622:	3301      	adds	r3, #1
 8001624:	847b      	strh	r3, [r7, #34]	@ 0x22
 8001626:	68fb      	ldr	r3, [r7, #12]
 8001628:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 800162c:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 800162e:	429a      	cmp	r2, r3
 8001630:	f4ff af76 	bcc.w	8001520 <QpskModem_GenerateSignal+0x1c>
        }
    }
}
 8001634:	bf00      	nop
 8001636:	bf00      	nop
 8001638:	3728      	adds	r7, #40	@ 0x28
 800163a:	46bd      	mov	sp, r7
 800163c:	ecbd 8b02 	vpop	{d8}
 8001640:	bd80      	pop	{r7, pc}
 8001642:	bf00      	nop
 8001644:	08004684 	.word	0x08004684
 8001648:	42fe0000 	.word	0x42fe0000
 800164c:	08004688 	.word	0x08004688
 8001650:	40490fdb 	.word	0x40490fdb
 8001654:	44ffe000 	.word	0x44ffe000

08001658 <QpskRingBuffer_Init>:

//Buffer Functions

void QpskRingBuffer_Init(QpskRingBuffer* rb){
 8001658:	b480      	push	{r7}
 800165a:	b083      	sub	sp, #12
 800165c:	af00      	add	r7, sp, #0
 800165e:	6078      	str	r0, [r7, #4]
	rb->head = 0;
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001666:	461a      	mov	r2, r3
 8001668:	2300      	movs	r3, #0
 800166a:	6013      	str	r3, [r2, #0]
	rb->tail = 0;
 800166c:	687b      	ldr	r3, [r7, #4]
 800166e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001672:	461a      	mov	r2, r3
 8001674:	2300      	movs	r3, #0
 8001676:	6053      	str	r3, [r2, #4]
}
 8001678:	bf00      	nop
 800167a:	370c      	adds	r7, #12
 800167c:	46bd      	mov	sp, r7
 800167e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001682:	4770      	bx	lr

08001684 <QpskRingBuffer_IsFull>:

uint8_t QpskRingBuffer_IsFull(const QpskRingBuffer* rb){
 8001684:	b480      	push	{r7}
 8001686:	b083      	sub	sp, #12
 8001688:	af00      	add	r7, sp, #0
 800168a:	6078      	str	r0, [r7, #4]
	return ((rb->head + 1) % QPSK_RINGBUF_SIZE) == rb->tail;
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001692:	681b      	ldr	r3, [r3, #0]
 8001694:	3301      	adds	r3, #1
 8001696:	f3c3 020b 	ubfx	r2, r3, #0, #12
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80016a0:	685b      	ldr	r3, [r3, #4]
 80016a2:	429a      	cmp	r2, r3
 80016a4:	bf0c      	ite	eq
 80016a6:	2301      	moveq	r3, #1
 80016a8:	2300      	movne	r3, #0
 80016aa:	b2db      	uxtb	r3, r3
}
 80016ac:	4618      	mov	r0, r3
 80016ae:	370c      	adds	r7, #12
 80016b0:	46bd      	mov	sp, r7
 80016b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016b6:	4770      	bx	lr

080016b8 <QpskRingBuffer_IsEmpty>:

uint8_t QpskRingBuffer_IsEmpty(const QpskRingBuffer* rb){
 80016b8:	b480      	push	{r7}
 80016ba:	b083      	sub	sp, #12
 80016bc:	af00      	add	r7, sp, #0
 80016be:	6078      	str	r0, [r7, #4]
	return rb->head == rb->tail;
 80016c0:	687b      	ldr	r3, [r7, #4]
 80016c2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80016c6:	681a      	ldr	r2, [r3, #0]
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80016ce:	685b      	ldr	r3, [r3, #4]
 80016d0:	429a      	cmp	r2, r3
 80016d2:	bf0c      	ite	eq
 80016d4:	2301      	moveq	r3, #1
 80016d6:	2300      	movne	r3, #0
 80016d8:	b2db      	uxtb	r3, r3
}
 80016da:	4618      	mov	r0, r3
 80016dc:	370c      	adds	r7, #12
 80016de:	46bd      	mov	sp, r7
 80016e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e4:	4770      	bx	lr

080016e6 <QpskRingBuffer_Put>:

void QpskRingBuffer_Put(QpskRingBuffer* rb, int16_t value) {
 80016e6:	b580      	push	{r7, lr}
 80016e8:	b082      	sub	sp, #8
 80016ea:	af00      	add	r7, sp, #0
 80016ec:	6078      	str	r0, [r7, #4]
 80016ee:	460b      	mov	r3, r1
 80016f0:	807b      	strh	r3, [r7, #2]
    if (!QpskRingBuffer_IsFull(rb)) {
 80016f2:	6878      	ldr	r0, [r7, #4]
 80016f4:	f7ff ffc6 	bl	8001684 <QpskRingBuffer_IsFull>
 80016f8:	4603      	mov	r3, r0
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	d112      	bne.n	8001724 <QpskRingBuffer_Put+0x3e>
        rb->buf[rb->head] = value;
 80016fe:	687b      	ldr	r3, [r7, #4]
 8001700:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001704:	681a      	ldr	r2, [r3, #0]
 8001706:	687b      	ldr	r3, [r7, #4]
 8001708:	8879      	ldrh	r1, [r7, #2]
 800170a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
        rb->head = (rb->head + 1) % QPSK_RINGBUF_SIZE;
 800170e:	687b      	ldr	r3, [r7, #4]
 8001710:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001714:	681b      	ldr	r3, [r3, #0]
 8001716:	3301      	adds	r3, #1
 8001718:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800171c:	687a      	ldr	r2, [r7, #4]
 800171e:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 8001722:	6013      	str	r3, [r2, #0]
    }
}
 8001724:	bf00      	nop
 8001726:	3708      	adds	r7, #8
 8001728:	46bd      	mov	sp, r7
 800172a:	bd80      	pop	{r7, pc}

0800172c <QpskRingBuffer_Get>:

int16_t QpskRingBuffer_Get(QpskRingBuffer* rb) {
 800172c:	b580      	push	{r7, lr}
 800172e:	b084      	sub	sp, #16
 8001730:	af00      	add	r7, sp, #0
 8001732:	6078      	str	r0, [r7, #4]
    int16_t val = 0;
 8001734:	2300      	movs	r3, #0
 8001736:	81fb      	strh	r3, [r7, #14]
    if (!QpskRingBuffer_IsEmpty(rb)) {
 8001738:	6878      	ldr	r0, [r7, #4]
 800173a:	f7ff ffbd 	bl	80016b8 <QpskRingBuffer_IsEmpty>
 800173e:	4603      	mov	r3, r0
 8001740:	2b00      	cmp	r3, #0
 8001742:	d112      	bne.n	800176a <QpskRingBuffer_Get+0x3e>
        val = rb->buf[rb->tail];
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800174a:	685a      	ldr	r2, [r3, #4]
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8001752:	81fb      	strh	r3, [r7, #14]
        rb->tail = (rb->tail + 1) % QPSK_RINGBUF_SIZE;
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800175a:	685b      	ldr	r3, [r3, #4]
 800175c:	3301      	adds	r3, #1
 800175e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001762:	687a      	ldr	r2, [r7, #4]
 8001764:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 8001768:	6053      	str	r3, [r2, #4]
    }
    return val;
 800176a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
}
 800176e:	4618      	mov	r0, r3
 8001770:	3710      	adds	r7, #16
 8001772:	46bd      	mov	sp, r7
 8001774:	bd80      	pop	{r7, pc}

08001776 <QpskRingBuffer_Available>:

uint32_t QpskRingBuffer_Available(const QpskRingBuffer* rb) {
 8001776:	b480      	push	{r7}
 8001778:	b083      	sub	sp, #12
 800177a:	af00      	add	r7, sp, #0
 800177c:	6078      	str	r0, [r7, #4]
    // Returns the number of elements currently in the buffer
    if (rb->head >= rb->tail)
 800177e:	687b      	ldr	r3, [r7, #4]
 8001780:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001784:	681a      	ldr	r2, [r3, #0]
 8001786:	687b      	ldr	r3, [r7, #4]
 8001788:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800178c:	685b      	ldr	r3, [r3, #4]
 800178e:	429a      	cmp	r2, r3
 8001790:	d309      	bcc.n	80017a6 <QpskRingBuffer_Available+0x30>
        return rb->head - rb->tail;
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001798:	681a      	ldr	r2, [r3, #0]
 800179a:	687b      	ldr	r3, [r7, #4]
 800179c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80017a0:	685b      	ldr	r3, [r3, #4]
 80017a2:	1ad3      	subs	r3, r2, r3
 80017a4:	e00a      	b.n	80017bc <QpskRingBuffer_Available+0x46>
    else
        return QPSK_RINGBUF_SIZE - (rb->tail - rb->head);
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80017ac:	681a      	ldr	r2, [r3, #0]
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80017b4:	685b      	ldr	r3, [r3, #4]
 80017b6:	1ad3      	subs	r3, r2, r3
 80017b8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
}
 80017bc:	4618      	mov	r0, r3
 80017be:	370c      	adds	r7, #12
 80017c0:	46bd      	mov	sp, r7
 80017c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017c6:	4770      	bx	lr

080017c8 <Qpsk_SimulateReception>:

// TESTS FUNCTION

void Qpsk_SimulateReception(QpskRingBuffer* txbuf, QpskRingBuffer* rxbuf) {
 80017c8:	b580      	push	{r7, lr}
 80017ca:	b084      	sub	sp, #16
 80017cc:	af00      	add	r7, sp, #0
 80017ce:	6078      	str	r0, [r7, #4]
 80017d0:	6039      	str	r1, [r7, #0]
    while (!QpskRingBuffer_IsEmpty(txbuf) && !QpskRingBuffer_IsFull(rxbuf)) {
 80017d2:	e00a      	b.n	80017ea <Qpsk_SimulateReception+0x22>
        int16_t val = QpskRingBuffer_Get(txbuf);
 80017d4:	6878      	ldr	r0, [r7, #4]
 80017d6:	f7ff ffa9 	bl	800172c <QpskRingBuffer_Get>
 80017da:	4603      	mov	r3, r0
 80017dc:	81fb      	strh	r3, [r7, #14]
        QpskRingBuffer_Put(rxbuf, val);
 80017de:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80017e2:	4619      	mov	r1, r3
 80017e4:	6838      	ldr	r0, [r7, #0]
 80017e6:	f7ff ff7e 	bl	80016e6 <QpskRingBuffer_Put>
    while (!QpskRingBuffer_IsEmpty(txbuf) && !QpskRingBuffer_IsFull(rxbuf)) {
 80017ea:	6878      	ldr	r0, [r7, #4]
 80017ec:	f7ff ff64 	bl	80016b8 <QpskRingBuffer_IsEmpty>
 80017f0:	4603      	mov	r3, r0
 80017f2:	2b00      	cmp	r3, #0
 80017f4:	d105      	bne.n	8001802 <Qpsk_SimulateReception+0x3a>
 80017f6:	6838      	ldr	r0, [r7, #0]
 80017f8:	f7ff ff44 	bl	8001684 <QpskRingBuffer_IsFull>
 80017fc:	4603      	mov	r3, r0
 80017fe:	2b00      	cmp	r3, #0
 8001800:	d0e8      	beq.n	80017d4 <Qpsk_SimulateReception+0xc>
    }
}
 8001802:	bf00      	nop
 8001804:	3710      	adds	r7, #16
 8001806:	46bd      	mov	sp, r7
 8001808:	bd80      	pop	{r7, pc}
	...

0800180c <HAL_MspInit>:
 800180c:	b480      	push	{r7}
 800180e:	b083      	sub	sp, #12
 8001810:	af00      	add	r7, sp, #0
 8001812:	2300      	movs	r3, #0
 8001814:	607b      	str	r3, [r7, #4]
 8001816:	4b10      	ldr	r3, [pc, #64]	@ (8001858 <HAL_MspInit+0x4c>)
 8001818:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800181a:	4a0f      	ldr	r2, [pc, #60]	@ (8001858 <HAL_MspInit+0x4c>)
 800181c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001820:	6453      	str	r3, [r2, #68]	@ 0x44
 8001822:	4b0d      	ldr	r3, [pc, #52]	@ (8001858 <HAL_MspInit+0x4c>)
 8001824:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001826:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800182a:	607b      	str	r3, [r7, #4]
 800182c:	687b      	ldr	r3, [r7, #4]
 800182e:	2300      	movs	r3, #0
 8001830:	603b      	str	r3, [r7, #0]
 8001832:	4b09      	ldr	r3, [pc, #36]	@ (8001858 <HAL_MspInit+0x4c>)
 8001834:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001836:	4a08      	ldr	r2, [pc, #32]	@ (8001858 <HAL_MspInit+0x4c>)
 8001838:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800183c:	6413      	str	r3, [r2, #64]	@ 0x40
 800183e:	4b06      	ldr	r3, [pc, #24]	@ (8001858 <HAL_MspInit+0x4c>)
 8001840:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001842:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001846:	603b      	str	r3, [r7, #0]
 8001848:	683b      	ldr	r3, [r7, #0]
 800184a:	bf00      	nop
 800184c:	370c      	adds	r7, #12
 800184e:	46bd      	mov	sp, r7
 8001850:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001854:	4770      	bx	lr
 8001856:	bf00      	nop
 8001858:	40023800 	.word	0x40023800

0800185c <HAL_ADC_MspInit>:
 800185c:	b580      	push	{r7, lr}
 800185e:	b08a      	sub	sp, #40	@ 0x28
 8001860:	af00      	add	r7, sp, #0
 8001862:	6078      	str	r0, [r7, #4]
 8001864:	f107 0314 	add.w	r3, r7, #20
 8001868:	2200      	movs	r2, #0
 800186a:	601a      	str	r2, [r3, #0]
 800186c:	605a      	str	r2, [r3, #4]
 800186e:	609a      	str	r2, [r3, #8]
 8001870:	60da      	str	r2, [r3, #12]
 8001872:	611a      	str	r2, [r3, #16]
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	4a17      	ldr	r2, [pc, #92]	@ (80018d8 <HAL_ADC_MspInit+0x7c>)
 800187a:	4293      	cmp	r3, r2
 800187c:	d127      	bne.n	80018ce <HAL_ADC_MspInit+0x72>
 800187e:	2300      	movs	r3, #0
 8001880:	613b      	str	r3, [r7, #16]
 8001882:	4b16      	ldr	r3, [pc, #88]	@ (80018dc <HAL_ADC_MspInit+0x80>)
 8001884:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001886:	4a15      	ldr	r2, [pc, #84]	@ (80018dc <HAL_ADC_MspInit+0x80>)
 8001888:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800188c:	6453      	str	r3, [r2, #68]	@ 0x44
 800188e:	4b13      	ldr	r3, [pc, #76]	@ (80018dc <HAL_ADC_MspInit+0x80>)
 8001890:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001892:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001896:	613b      	str	r3, [r7, #16]
 8001898:	693b      	ldr	r3, [r7, #16]
 800189a:	2300      	movs	r3, #0
 800189c:	60fb      	str	r3, [r7, #12]
 800189e:	4b0f      	ldr	r3, [pc, #60]	@ (80018dc <HAL_ADC_MspInit+0x80>)
 80018a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018a2:	4a0e      	ldr	r2, [pc, #56]	@ (80018dc <HAL_ADC_MspInit+0x80>)
 80018a4:	f043 0301 	orr.w	r3, r3, #1
 80018a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80018aa:	4b0c      	ldr	r3, [pc, #48]	@ (80018dc <HAL_ADC_MspInit+0x80>)
 80018ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018ae:	f003 0301 	and.w	r3, r3, #1
 80018b2:	60fb      	str	r3, [r7, #12]
 80018b4:	68fb      	ldr	r3, [r7, #12]
 80018b6:	2301      	movs	r3, #1
 80018b8:	617b      	str	r3, [r7, #20]
 80018ba:	2303      	movs	r3, #3
 80018bc:	61bb      	str	r3, [r7, #24]
 80018be:	2300      	movs	r3, #0
 80018c0:	61fb      	str	r3, [r7, #28]
 80018c2:	f107 0314 	add.w	r3, r7, #20
 80018c6:	4619      	mov	r1, r3
 80018c8:	4805      	ldr	r0, [pc, #20]	@ (80018e0 <HAL_ADC_MspInit+0x84>)
 80018ca:	f000 fe97 	bl	80025fc <HAL_GPIO_Init>
 80018ce:	bf00      	nop
 80018d0:	3728      	adds	r7, #40	@ 0x28
 80018d2:	46bd      	mov	sp, r7
 80018d4:	bd80      	pop	{r7, pc}
 80018d6:	bf00      	nop
 80018d8:	40012000 	.word	0x40012000
 80018dc:	40023800 	.word	0x40023800
 80018e0:	40020000 	.word	0x40020000

080018e4 <HAL_UART_MspInit>:
 80018e4:	b580      	push	{r7, lr}
 80018e6:	b08a      	sub	sp, #40	@ 0x28
 80018e8:	af00      	add	r7, sp, #0
 80018ea:	6078      	str	r0, [r7, #4]
 80018ec:	f107 0314 	add.w	r3, r7, #20
 80018f0:	2200      	movs	r2, #0
 80018f2:	601a      	str	r2, [r3, #0]
 80018f4:	605a      	str	r2, [r3, #4]
 80018f6:	609a      	str	r2, [r3, #8]
 80018f8:	60da      	str	r2, [r3, #12]
 80018fa:	611a      	str	r2, [r3, #16]
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	4a19      	ldr	r2, [pc, #100]	@ (8001968 <HAL_UART_MspInit+0x84>)
 8001902:	4293      	cmp	r3, r2
 8001904:	d12b      	bne.n	800195e <HAL_UART_MspInit+0x7a>
 8001906:	2300      	movs	r3, #0
 8001908:	613b      	str	r3, [r7, #16]
 800190a:	4b18      	ldr	r3, [pc, #96]	@ (800196c <HAL_UART_MspInit+0x88>)
 800190c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800190e:	4a17      	ldr	r2, [pc, #92]	@ (800196c <HAL_UART_MspInit+0x88>)
 8001910:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001914:	6413      	str	r3, [r2, #64]	@ 0x40
 8001916:	4b15      	ldr	r3, [pc, #84]	@ (800196c <HAL_UART_MspInit+0x88>)
 8001918:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800191a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800191e:	613b      	str	r3, [r7, #16]
 8001920:	693b      	ldr	r3, [r7, #16]
 8001922:	2300      	movs	r3, #0
 8001924:	60fb      	str	r3, [r7, #12]
 8001926:	4b11      	ldr	r3, [pc, #68]	@ (800196c <HAL_UART_MspInit+0x88>)
 8001928:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800192a:	4a10      	ldr	r2, [pc, #64]	@ (800196c <HAL_UART_MspInit+0x88>)
 800192c:	f043 0301 	orr.w	r3, r3, #1
 8001930:	6313      	str	r3, [r2, #48]	@ 0x30
 8001932:	4b0e      	ldr	r3, [pc, #56]	@ (800196c <HAL_UART_MspInit+0x88>)
 8001934:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001936:	f003 0301 	and.w	r3, r3, #1
 800193a:	60fb      	str	r3, [r7, #12]
 800193c:	68fb      	ldr	r3, [r7, #12]
 800193e:	230c      	movs	r3, #12
 8001940:	617b      	str	r3, [r7, #20]
 8001942:	2302      	movs	r3, #2
 8001944:	61bb      	str	r3, [r7, #24]
 8001946:	2300      	movs	r3, #0
 8001948:	61fb      	str	r3, [r7, #28]
 800194a:	2303      	movs	r3, #3
 800194c:	623b      	str	r3, [r7, #32]
 800194e:	2307      	movs	r3, #7
 8001950:	627b      	str	r3, [r7, #36]	@ 0x24
 8001952:	f107 0314 	add.w	r3, r7, #20
 8001956:	4619      	mov	r1, r3
 8001958:	4805      	ldr	r0, [pc, #20]	@ (8001970 <HAL_UART_MspInit+0x8c>)
 800195a:	f000 fe4f 	bl	80025fc <HAL_GPIO_Init>
 800195e:	bf00      	nop
 8001960:	3728      	adds	r7, #40	@ 0x28
 8001962:	46bd      	mov	sp, r7
 8001964:	bd80      	pop	{r7, pc}
 8001966:	bf00      	nop
 8001968:	40004400 	.word	0x40004400
 800196c:	40023800 	.word	0x40023800
 8001970:	40020000 	.word	0x40020000

08001974 <NMI_Handler>:
 8001974:	b480      	push	{r7}
 8001976:	af00      	add	r7, sp, #0
 8001978:	bf00      	nop
 800197a:	e7fd      	b.n	8001978 <NMI_Handler+0x4>

0800197c <HardFault_Handler>:
 800197c:	b480      	push	{r7}
 800197e:	af00      	add	r7, sp, #0
 8001980:	bf00      	nop
 8001982:	e7fd      	b.n	8001980 <HardFault_Handler+0x4>

08001984 <MemManage_Handler>:
 8001984:	b480      	push	{r7}
 8001986:	af00      	add	r7, sp, #0
 8001988:	bf00      	nop
 800198a:	e7fd      	b.n	8001988 <MemManage_Handler+0x4>

0800198c <BusFault_Handler>:
 800198c:	b480      	push	{r7}
 800198e:	af00      	add	r7, sp, #0
 8001990:	bf00      	nop
 8001992:	e7fd      	b.n	8001990 <BusFault_Handler+0x4>

08001994 <UsageFault_Handler>:
 8001994:	b480      	push	{r7}
 8001996:	af00      	add	r7, sp, #0
 8001998:	bf00      	nop
 800199a:	e7fd      	b.n	8001998 <UsageFault_Handler+0x4>

0800199c <SVC_Handler>:
 800199c:	b480      	push	{r7}
 800199e:	af00      	add	r7, sp, #0
 80019a0:	bf00      	nop
 80019a2:	46bd      	mov	sp, r7
 80019a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019a8:	4770      	bx	lr

080019aa <DebugMon_Handler>:
 80019aa:	b480      	push	{r7}
 80019ac:	af00      	add	r7, sp, #0
 80019ae:	bf00      	nop
 80019b0:	46bd      	mov	sp, r7
 80019b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b6:	4770      	bx	lr

080019b8 <PendSV_Handler>:
 80019b8:	b480      	push	{r7}
 80019ba:	af00      	add	r7, sp, #0
 80019bc:	bf00      	nop
 80019be:	46bd      	mov	sp, r7
 80019c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019c4:	4770      	bx	lr

080019c6 <SysTick_Handler>:
 80019c6:	b580      	push	{r7, lr}
 80019c8:	af00      	add	r7, sp, #0
 80019ca:	f000 fa9f 	bl	8001f0c <HAL_IncTick>
 80019ce:	bf00      	nop
 80019d0:	bd80      	pop	{r7, pc}
	...

080019d4 <SystemInit>:
 80019d4:	b480      	push	{r7}
 80019d6:	af00      	add	r7, sp, #0
 80019d8:	4b06      	ldr	r3, [pc, #24]	@ (80019f4 <SystemInit+0x20>)
 80019da:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80019de:	4a05      	ldr	r2, [pc, #20]	@ (80019f4 <SystemInit+0x20>)
 80019e0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80019e4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80019e8:	bf00      	nop
 80019ea:	46bd      	mov	sp, r7
 80019ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019f0:	4770      	bx	lr
 80019f2:	bf00      	nop
 80019f4:	e000ed00 	.word	0xe000ed00

080019f8 <CalcChecksum>:

#include "uart_protocol.h"
#include "stm32f4xx_hal.h"
#include "CMD.h"

static uint8_t CalcChecksum(uint16_t cmd, uint16_t len, uint8_t* payload) {
 80019f8:	b480      	push	{r7}
 80019fa:	b085      	sub	sp, #20
 80019fc:	af00      	add	r7, sp, #0
 80019fe:	4603      	mov	r3, r0
 8001a00:	603a      	str	r2, [r7, #0]
 8001a02:	80fb      	strh	r3, [r7, #6]
 8001a04:	460b      	mov	r3, r1
 8001a06:	80bb      	strh	r3, [r7, #4]
    uint8_t cs = 0;
 8001a08:	2300      	movs	r3, #0
 8001a0a:	73fb      	strb	r3, [r7, #15]
    cs ^= 0xFE;
 8001a0c:	7bfb      	ldrb	r3, [r7, #15]
 8001a0e:	f083 0301 	eor.w	r3, r3, #1
 8001a12:	43db      	mvns	r3, r3
 8001a14:	73fb      	strb	r3, [r7, #15]
    cs ^= (cmd >> 8) & 0xFF;
 8001a16:	88fb      	ldrh	r3, [r7, #6]
 8001a18:	0a1b      	lsrs	r3, r3, #8
 8001a1a:	b29b      	uxth	r3, r3
 8001a1c:	b25a      	sxtb	r2, r3
 8001a1e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a22:	4053      	eors	r3, r2
 8001a24:	b25b      	sxtb	r3, r3
 8001a26:	73fb      	strb	r3, [r7, #15]
    cs ^= (cmd >> 0) & 0xFF;
 8001a28:	88fb      	ldrh	r3, [r7, #6]
 8001a2a:	b25a      	sxtb	r2, r3
 8001a2c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a30:	4053      	eors	r3, r2
 8001a32:	b25b      	sxtb	r3, r3
 8001a34:	73fb      	strb	r3, [r7, #15]
    cs ^= (len >> 8) & 0xFF;
 8001a36:	88bb      	ldrh	r3, [r7, #4]
 8001a38:	0a1b      	lsrs	r3, r3, #8
 8001a3a:	b29b      	uxth	r3, r3
 8001a3c:	b25a      	sxtb	r2, r3
 8001a3e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a42:	4053      	eors	r3, r2
 8001a44:	b25b      	sxtb	r3, r3
 8001a46:	73fb      	strb	r3, [r7, #15]
    cs ^= (len >> 0) & 0xFF;
 8001a48:	88bb      	ldrh	r3, [r7, #4]
 8001a4a:	b25a      	sxtb	r2, r3
 8001a4c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a50:	4053      	eors	r3, r2
 8001a52:	b25b      	sxtb	r3, r3
 8001a54:	73fb      	strb	r3, [r7, #15]
    for (uint16_t i = 0; i < len; i++) {
 8001a56:	2300      	movs	r3, #0
 8001a58:	81bb      	strh	r3, [r7, #12]
 8001a5a:	e009      	b.n	8001a70 <CalcChecksum+0x78>
        cs ^= payload[i];
 8001a5c:	89bb      	ldrh	r3, [r7, #12]
 8001a5e:	683a      	ldr	r2, [r7, #0]
 8001a60:	4413      	add	r3, r2
 8001a62:	781a      	ldrb	r2, [r3, #0]
 8001a64:	7bfb      	ldrb	r3, [r7, #15]
 8001a66:	4053      	eors	r3, r2
 8001a68:	73fb      	strb	r3, [r7, #15]
    for (uint16_t i = 0; i < len; i++) {
 8001a6a:	89bb      	ldrh	r3, [r7, #12]
 8001a6c:	3301      	adds	r3, #1
 8001a6e:	81bb      	strh	r3, [r7, #12]
 8001a70:	89ba      	ldrh	r2, [r7, #12]
 8001a72:	88bb      	ldrh	r3, [r7, #4]
 8001a74:	429a      	cmp	r2, r3
 8001a76:	d3f1      	bcc.n	8001a5c <CalcChecksum+0x64>
    }
    return cs;
 8001a78:	7bfb      	ldrb	r3, [r7, #15]
}
 8001a7a:	4618      	mov	r0, r3
 8001a7c:	3714      	adds	r7, #20
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a84:	4770      	bx	lr

08001a86 <UartProtocol_Init>:

void UartProtocol_Init(UartProtocol* proto, FrameReceivedCallback cb) {
 8001a86:	b480      	push	{r7}
 8001a88:	b083      	sub	sp, #12
 8001a8a:	af00      	add	r7, sp, #0
 8001a8c:	6078      	str	r0, [r7, #4]
 8001a8e:	6039      	str	r1, [r7, #0]
    proto->rx_state = WAIT_SOF;
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	2200      	movs	r2, #0
 8001a94:	701a      	strb	r2, [r3, #0]
    proto->rx_cmd = 0;
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	2200      	movs	r2, #0
 8001a9a:	805a      	strh	r2, [r3, #2]
    proto->rx_len = 0;
 8001a9c:	687b      	ldr	r3, [r7, #4]
 8001a9e:	2200      	movs	r2, #0
 8001aa0:	809a      	strh	r2, [r3, #4]
    proto->rx_payload_idx = 0;
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	2200      	movs	r2, #0
 8001aa6:	80da      	strh	r2, [r3, #6]
    proto->rx_checksum = 0;
 8001aa8:	687b      	ldr	r3, [r7, #4]
 8001aaa:	2200      	movs	r2, #0
 8001aac:	721a      	strb	r2, [r3, #8]
    proto->rx_calc_checksum = 0;
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	2200      	movs	r2, #0
 8001ab2:	725a      	strb	r2, [r3, #9]
    proto->onFrameReceived = cb;
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	683a      	ldr	r2, [r7, #0]
 8001ab8:	f8c3 210c 	str.w	r2, [r3, #268]	@ 0x10c
}
 8001abc:	bf00      	nop
 8001abe:	370c      	adds	r7, #12
 8001ac0:	46bd      	mov	sp, r7
 8001ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ac6:	4770      	bx	lr

08001ac8 <UartProtocol_ParseByte>:

void UartProtocol_ParseByte(UartProtocol* proto, uint8_t c) {
 8001ac8:	b590      	push	{r4, r7, lr}
 8001aca:	b083      	sub	sp, #12
 8001acc:	af00      	add	r7, sp, #0
 8001ace:	6078      	str	r0, [r7, #4]
 8001ad0:	460b      	mov	r3, r1
 8001ad2:	70fb      	strb	r3, [r7, #3]
    switch(proto->rx_state) {
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	781b      	ldrb	r3, [r3, #0]
 8001ad8:	2b06      	cmp	r3, #6
 8001ada:	f200 80b1 	bhi.w	8001c40 <UartProtocol_ParseByte+0x178>
 8001ade:	a201      	add	r2, pc, #4	@ (adr r2, 8001ae4 <UartProtocol_ParseByte+0x1c>)
 8001ae0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001ae4:	08001b01 	.word	0x08001b01
 8001ae8:	08001b17 	.word	0x08001b17
 8001aec:	08001b39 	.word	0x08001b39
 8001af0:	08001b5f 	.word	0x08001b5f
 8001af4:	08001b81 	.word	0x08001b81
 8001af8:	08001bcf 	.word	0x08001bcf
 8001afc:	08001c07 	.word	0x08001c07
        case WAIT_SOF:
            if (c == 0xFE) {
 8001b00:	78fb      	ldrb	r3, [r7, #3]
 8001b02:	2bfe      	cmp	r3, #254	@ 0xfe
 8001b04:	f040 80a0 	bne.w	8001c48 <UartProtocol_ParseByte+0x180>
                proto->rx_state = READ_CMD_MSB;
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	2201      	movs	r2, #1
 8001b0c:	701a      	strb	r2, [r3, #0]
                proto->rx_calc_checksum = 0xFE;
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	22fe      	movs	r2, #254	@ 0xfe
 8001b12:	725a      	strb	r2, [r3, #9]
            }
            break;
 8001b14:	e098      	b.n	8001c48 <UartProtocol_ParseByte+0x180>
        case READ_CMD_MSB:
            proto->rx_cmd = ((uint16_t)c) << 8;
 8001b16:	78fb      	ldrb	r3, [r7, #3]
 8001b18:	b29b      	uxth	r3, r3
 8001b1a:	021b      	lsls	r3, r3, #8
 8001b1c:	b29a      	uxth	r2, r3
 8001b1e:	687b      	ldr	r3, [r7, #4]
 8001b20:	805a      	strh	r2, [r3, #2]
            proto->rx_calc_checksum ^= c;
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	7a5a      	ldrb	r2, [r3, #9]
 8001b26:	78fb      	ldrb	r3, [r7, #3]
 8001b28:	4053      	eors	r3, r2
 8001b2a:	b2da      	uxtb	r2, r3
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	725a      	strb	r2, [r3, #9]
            proto->rx_state = READ_CMD_LSB;
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	2202      	movs	r2, #2
 8001b34:	701a      	strb	r2, [r3, #0]
            break;
 8001b36:	e08a      	b.n	8001c4e <UartProtocol_ParseByte+0x186>
        case READ_CMD_LSB:
            proto->rx_cmd |= c;
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	885a      	ldrh	r2, [r3, #2]
 8001b3c:	78fb      	ldrb	r3, [r7, #3]
 8001b3e:	b29b      	uxth	r3, r3
 8001b40:	4313      	orrs	r3, r2
 8001b42:	b29a      	uxth	r2, r3
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	805a      	strh	r2, [r3, #2]
            proto->rx_calc_checksum ^= c;
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	7a5a      	ldrb	r2, [r3, #9]
 8001b4c:	78fb      	ldrb	r3, [r7, #3]
 8001b4e:	4053      	eors	r3, r2
 8001b50:	b2da      	uxtb	r2, r3
 8001b52:	687b      	ldr	r3, [r7, #4]
 8001b54:	725a      	strb	r2, [r3, #9]
            proto->rx_state = READ_LEN_MSB;
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	2203      	movs	r2, #3
 8001b5a:	701a      	strb	r2, [r3, #0]
            break;
 8001b5c:	e077      	b.n	8001c4e <UartProtocol_ParseByte+0x186>
        case READ_LEN_MSB:
            proto->rx_len = ((uint16_t)c) << 8;
 8001b5e:	78fb      	ldrb	r3, [r7, #3]
 8001b60:	b29b      	uxth	r3, r3
 8001b62:	021b      	lsls	r3, r3, #8
 8001b64:	b29a      	uxth	r2, r3
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	809a      	strh	r2, [r3, #4]
            proto->rx_calc_checksum ^= c;
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	7a5a      	ldrb	r2, [r3, #9]
 8001b6e:	78fb      	ldrb	r3, [r7, #3]
 8001b70:	4053      	eors	r3, r2
 8001b72:	b2da      	uxtb	r2, r3
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	725a      	strb	r2, [r3, #9]
            proto->rx_state = READ_LEN_LSB;
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	2204      	movs	r2, #4
 8001b7c:	701a      	strb	r2, [r3, #0]
            break;
 8001b7e:	e066      	b.n	8001c4e <UartProtocol_ParseByte+0x186>
        case READ_LEN_LSB:
            proto->rx_len |= c;
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	889a      	ldrh	r2, [r3, #4]
 8001b84:	78fb      	ldrb	r3, [r7, #3]
 8001b86:	b29b      	uxth	r3, r3
 8001b88:	4313      	orrs	r3, r2
 8001b8a:	b29a      	uxth	r2, r3
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	809a      	strh	r2, [r3, #4]
            proto->rx_calc_checksum ^= c;
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	7a5a      	ldrb	r2, [r3, #9]
 8001b94:	78fb      	ldrb	r3, [r7, #3]
 8001b96:	4053      	eors	r3, r2
 8001b98:	b2da      	uxtb	r2, r3
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	725a      	strb	r2, [r3, #9]
            if (proto->rx_len > FRAME_MAX_PAYLOAD) {
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	889b      	ldrh	r3, [r3, #4]
 8001ba2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001ba6:	d903      	bls.n	8001bb0 <UartProtocol_ParseByte+0xe8>
                proto->rx_state = WAIT_SOF;
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	2200      	movs	r2, #0
 8001bac:	701a      	strb	r2, [r3, #0]
                proto->rx_state = READ_CHECKSUM;
            } else {
                proto->rx_payload_idx = 0;
                proto->rx_state = READ_PAYLOAD;
            }
            break;
 8001bae:	e04e      	b.n	8001c4e <UartProtocol_ParseByte+0x186>
            } else if (proto->rx_len == 0) {
 8001bb0:	687b      	ldr	r3, [r7, #4]
 8001bb2:	889b      	ldrh	r3, [r3, #4]
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d103      	bne.n	8001bc0 <UartProtocol_ParseByte+0xf8>
                proto->rx_state = READ_CHECKSUM;
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	2206      	movs	r2, #6
 8001bbc:	701a      	strb	r2, [r3, #0]
            break;
 8001bbe:	e046      	b.n	8001c4e <UartProtocol_ParseByte+0x186>
                proto->rx_payload_idx = 0;
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	2200      	movs	r2, #0
 8001bc4:	80da      	strh	r2, [r3, #6]
                proto->rx_state = READ_PAYLOAD;
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	2205      	movs	r2, #5
 8001bca:	701a      	strb	r2, [r3, #0]
            break;
 8001bcc:	e03f      	b.n	8001c4e <UartProtocol_ParseByte+0x186>
        case READ_PAYLOAD:
            proto->frame_payload[proto->rx_payload_idx++] = c;
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	88db      	ldrh	r3, [r3, #6]
 8001bd2:	1c5a      	adds	r2, r3, #1
 8001bd4:	b291      	uxth	r1, r2
 8001bd6:	687a      	ldr	r2, [r7, #4]
 8001bd8:	80d1      	strh	r1, [r2, #6]
 8001bda:	461a      	mov	r2, r3
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	4413      	add	r3, r2
 8001be0:	78fa      	ldrb	r2, [r7, #3]
 8001be2:	729a      	strb	r2, [r3, #10]
            proto->rx_calc_checksum ^= c;
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	7a5a      	ldrb	r2, [r3, #9]
 8001be8:	78fb      	ldrb	r3, [r7, #3]
 8001bea:	4053      	eors	r3, r2
 8001bec:	b2da      	uxtb	r2, r3
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	725a      	strb	r2, [r3, #9]
            if (proto->rx_payload_idx >= proto->rx_len) {
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	88da      	ldrh	r2, [r3, #6]
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	889b      	ldrh	r3, [r3, #4]
 8001bfa:	429a      	cmp	r2, r3
 8001bfc:	d326      	bcc.n	8001c4c <UartProtocol_ParseByte+0x184>
                proto->rx_state = READ_CHECKSUM;
 8001bfe:	687b      	ldr	r3, [r7, #4]
 8001c00:	2206      	movs	r2, #6
 8001c02:	701a      	strb	r2, [r3, #0]
            }
            break;
 8001c04:	e022      	b.n	8001c4c <UartProtocol_ParseByte+0x184>
        case READ_CHECKSUM:
            proto->rx_checksum = c;
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	78fa      	ldrb	r2, [r7, #3]
 8001c0a:	721a      	strb	r2, [r3, #8]
            if (proto->rx_checksum == proto->rx_calc_checksum && proto->onFrameReceived) {
 8001c0c:	687b      	ldr	r3, [r7, #4]
 8001c0e:	7a1a      	ldrb	r2, [r3, #8]
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	7a5b      	ldrb	r3, [r3, #9]
 8001c14:	429a      	cmp	r2, r3
 8001c16:	d10f      	bne.n	8001c38 <UartProtocol_ParseByte+0x170>
 8001c18:	687b      	ldr	r3, [r7, #4]
 8001c1a:	f8d3 310c 	ldr.w	r3, [r3, #268]	@ 0x10c
 8001c1e:	2b00      	cmp	r3, #0
 8001c20:	d00a      	beq.n	8001c38 <UartProtocol_ParseByte+0x170>
                proto->onFrameReceived(proto, proto->rx_cmd, proto->rx_len, proto->frame_payload);
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	f8d3 410c 	ldr.w	r4, [r3, #268]	@ 0x10c
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	8859      	ldrh	r1, [r3, #2]
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	889a      	ldrh	r2, [r3, #4]
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	330a      	adds	r3, #10
 8001c34:	6878      	ldr	r0, [r7, #4]
 8001c36:	47a0      	blx	r4
            }
            proto->rx_state = WAIT_SOF;
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	2200      	movs	r2, #0
 8001c3c:	701a      	strb	r2, [r3, #0]
            break;
 8001c3e:	e006      	b.n	8001c4e <UartProtocol_ParseByte+0x186>
        default:
            proto->rx_state = WAIT_SOF;
 8001c40:	687b      	ldr	r3, [r7, #4]
 8001c42:	2200      	movs	r2, #0
 8001c44:	701a      	strb	r2, [r3, #0]
            break;
 8001c46:	e002      	b.n	8001c4e <UartProtocol_ParseByte+0x186>
            break;
 8001c48:	bf00      	nop
 8001c4a:	e000      	b.n	8001c4e <UartProtocol_ParseByte+0x186>
            break;
 8001c4c:	bf00      	nop
    }
}
 8001c4e:	bf00      	nop
 8001c50:	370c      	adds	r7, #12
 8001c52:	46bd      	mov	sp, r7
 8001c54:	bd90      	pop	{r4, r7, pc}
 8001c56:	bf00      	nop

08001c58 <UartProtocol_SendFrame>:

void UartProtocol_SendFrame(UART_HandleTypeDef* huart, uint16_t cmd, uint16_t len, uint8_t* payload) {
 8001c58:	b590      	push	{r4, r7, lr}
 8001c5a:	b0c9      	sub	sp, #292	@ 0x124
 8001c5c:	af00      	add	r7, sp, #0
 8001c5e:	f507 7490 	add.w	r4, r7, #288	@ 0x120
 8001c62:	f5a4 748a 	sub.w	r4, r4, #276	@ 0x114
 8001c66:	6020      	str	r0, [r4, #0]
 8001c68:	4608      	mov	r0, r1
 8001c6a:	4611      	mov	r1, r2
 8001c6c:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001c70:	f5a2 728e 	sub.w	r2, r2, #284	@ 0x11c
 8001c74:	6013      	str	r3, [r2, #0]
 8001c76:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001c7a:	f5a3 738b 	sub.w	r3, r3, #278	@ 0x116
 8001c7e:	4602      	mov	r2, r0
 8001c80:	801a      	strh	r2, [r3, #0]
 8001c82:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001c86:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001c8a:	460a      	mov	r2, r1
 8001c8c:	801a      	strh	r2, [r3, #0]
    uint8_t tx_buf[6 + FRAME_MAX_PAYLOAD];
    int pos = 0;
 8001c8e:	2300      	movs	r3, #0
 8001c90:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
    tx_buf[pos++] = 0xFE;
 8001c94:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001c98:	1c5a      	adds	r2, r3, #1
 8001c9a:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001c9e:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001ca2:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001ca6:	21fe      	movs	r1, #254	@ 0xfe
 8001ca8:	54d1      	strb	r1, [r2, r3]
    tx_buf[pos++] = (cmd >> 8) & 0xFF;
 8001caa:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001cae:	f5a3 738b 	sub.w	r3, r3, #278	@ 0x116
 8001cb2:	881b      	ldrh	r3, [r3, #0]
 8001cb4:	0a1b      	lsrs	r3, r3, #8
 8001cb6:	b299      	uxth	r1, r3
 8001cb8:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001cbc:	1c5a      	adds	r2, r3, #1
 8001cbe:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001cc2:	b2c9      	uxtb	r1, r1
 8001cc4:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001cc8:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001ccc:	54d1      	strb	r1, [r2, r3]
    tx_buf[pos++] = (cmd >> 0) & 0xFF;
 8001cce:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001cd2:	1c5a      	adds	r2, r3, #1
 8001cd4:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001cd8:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001cdc:	f5a2 728b 	sub.w	r2, r2, #278	@ 0x116
 8001ce0:	8812      	ldrh	r2, [r2, #0]
 8001ce2:	b2d1      	uxtb	r1, r2
 8001ce4:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001ce8:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001cec:	54d1      	strb	r1, [r2, r3]
    tx_buf[pos++] = (len >> 8) & 0xFF;
 8001cee:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001cf2:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001cf6:	881b      	ldrh	r3, [r3, #0]
 8001cf8:	0a1b      	lsrs	r3, r3, #8
 8001cfa:	b299      	uxth	r1, r3
 8001cfc:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001d00:	1c5a      	adds	r2, r3, #1
 8001d02:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001d06:	b2c9      	uxtb	r1, r1
 8001d08:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d0c:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001d10:	54d1      	strb	r1, [r2, r3]
    tx_buf[pos++] = (len >> 0) & 0xFF;
 8001d12:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001d16:	1c5a      	adds	r2, r3, #1
 8001d18:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001d1c:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d20:	f5a2 728c 	sub.w	r2, r2, #280	@ 0x118
 8001d24:	8812      	ldrh	r2, [r2, #0]
 8001d26:	b2d1      	uxtb	r1, r2
 8001d28:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d2c:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001d30:	54d1      	strb	r1, [r2, r3]
    for (int i = 0; i < len; i++) {
 8001d32:	2300      	movs	r3, #0
 8001d34:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118
 8001d38:	e017      	b.n	8001d6a <UartProtocol_SendFrame+0x112>
        tx_buf[pos++] = payload[i];
 8001d3a:	f8d7 3118 	ldr.w	r3, [r7, #280]	@ 0x118
 8001d3e:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d42:	f5a2 728e 	sub.w	r2, r2, #284	@ 0x11c
 8001d46:	6812      	ldr	r2, [r2, #0]
 8001d48:	441a      	add	r2, r3
 8001d4a:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001d4e:	1c59      	adds	r1, r3, #1
 8001d50:	f8c7 111c 	str.w	r1, [r7, #284]	@ 0x11c
 8001d54:	7811      	ldrb	r1, [r2, #0]
 8001d56:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d5a:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001d5e:	54d1      	strb	r1, [r2, r3]
    for (int i = 0; i < len; i++) {
 8001d60:	f8d7 3118 	ldr.w	r3, [r7, #280]	@ 0x118
 8001d64:	3301      	adds	r3, #1
 8001d66:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118
 8001d6a:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001d6e:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001d72:	881b      	ldrh	r3, [r3, #0]
 8001d74:	f8d7 2118 	ldr.w	r2, [r7, #280]	@ 0x118
 8001d78:	429a      	cmp	r2, r3
 8001d7a:	dbde      	blt.n	8001d3a <UartProtocol_SendFrame+0xe2>
    }
    uint8_t cs = CalcChecksum(cmd, len, payload);
 8001d7c:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001d80:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 8001d84:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d88:	f5a2 728c 	sub.w	r2, r2, #280	@ 0x118
 8001d8c:	8811      	ldrh	r1, [r2, #0]
 8001d8e:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001d92:	f5a2 728b 	sub.w	r2, r2, #278	@ 0x116
 8001d96:	8810      	ldrh	r0, [r2, #0]
 8001d98:	681a      	ldr	r2, [r3, #0]
 8001d9a:	f7ff fe2d 	bl	80019f8 <CalcChecksum>
 8001d9e:	4603      	mov	r3, r0
 8001da0:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
    tx_buf[pos++] = cs;
 8001da4:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001da8:	1c5a      	adds	r2, r3, #1
 8001daa:	f8c7 211c 	str.w	r2, [r7, #284]	@ 0x11c
 8001dae:	f507 7290 	add.w	r2, r7, #288	@ 0x120
 8001db2:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 8001db6:	f897 1117 	ldrb.w	r1, [r7, #279]	@ 0x117
 8001dba:	54d1      	strb	r1, [r2, r3]
    HAL_UART_Transmit(huart, tx_buf, pos, 100);
 8001dbc:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8001dc0:	b29a      	uxth	r2, r3
 8001dc2:	f107 0110 	add.w	r1, r7, #16
 8001dc6:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 8001dca:	f5a3 708a 	sub.w	r0, r3, #276	@ 0x114
 8001dce:	2364      	movs	r3, #100	@ 0x64
 8001dd0:	6800      	ldr	r0, [r0, #0]
 8001dd2:	f001 fa59 	bl	8003288 <HAL_UART_Transmit>
}
 8001dd6:	bf00      	nop
 8001dd8:	f507 7792 	add.w	r7, r7, #292	@ 0x124
 8001ddc:	46bd      	mov	sp, r7
 8001dde:	bd90      	pop	{r4, r7, pc}

08001de0 <SendIQFrame>:

void SendIQFrame(UART_HandleTypeDef* huart, int8_t i, int8_t q) {
 8001de0:	b580      	push	{r7, lr}
 8001de2:	b084      	sub	sp, #16
 8001de4:	af00      	add	r7, sp, #0
 8001de6:	6078      	str	r0, [r7, #4]
 8001de8:	460b      	mov	r3, r1
 8001dea:	70fb      	strb	r3, [r7, #3]
 8001dec:	4613      	mov	r3, r2
 8001dee:	70bb      	strb	r3, [r7, #2]
    uint8_t payload[3];
    payload[0] = 'T'; // Pour TX
 8001df0:	2354      	movs	r3, #84	@ 0x54
 8001df2:	733b      	strb	r3, [r7, #12]
    payload[1] = (uint8_t)i;
 8001df4:	78fb      	ldrb	r3, [r7, #3]
 8001df6:	737b      	strb	r3, [r7, #13]
    payload[2] = (uint8_t)q;
 8001df8:	78bb      	ldrb	r3, [r7, #2]
 8001dfa:	73bb      	strb	r3, [r7, #14]
    UartProtocol_SendFrame(huart, CMD_IQ_DATA, 3, payload);
 8001dfc:	f107 030c 	add.w	r3, r7, #12
 8001e00:	2203      	movs	r2, #3
 8001e02:	f245 51aa 	movw	r1, #21930	@ 0x55aa
 8001e06:	6878      	ldr	r0, [r7, #4]
 8001e08:	f7ff ff26 	bl	8001c58 <UartProtocol_SendFrame>
}
 8001e0c:	bf00      	nop
 8001e0e:	3710      	adds	r7, #16
 8001e10:	46bd      	mov	sp, r7
 8001e12:	bd80      	pop	{r7, pc}

08001e14 <Reset_Handler>:
 8001e14:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001e4c <LoopFillZerobss+0xe>
 8001e18:	f7ff fddc 	bl	80019d4 <SystemInit>
 8001e1c:	480c      	ldr	r0, [pc, #48]	@ (8001e50 <LoopFillZerobss+0x12>)
 8001e1e:	490d      	ldr	r1, [pc, #52]	@ (8001e54 <LoopFillZerobss+0x16>)
 8001e20:	4a0d      	ldr	r2, [pc, #52]	@ (8001e58 <LoopFillZerobss+0x1a>)
 8001e22:	2300      	movs	r3, #0
 8001e24:	e002      	b.n	8001e2c <LoopCopyDataInit>

08001e26 <CopyDataInit>:
 8001e26:	58d4      	ldr	r4, [r2, r3]
 8001e28:	50c4      	str	r4, [r0, r3]
 8001e2a:	3304      	adds	r3, #4

08001e2c <LoopCopyDataInit>:
 8001e2c:	18c4      	adds	r4, r0, r3
 8001e2e:	428c      	cmp	r4, r1
 8001e30:	d3f9      	bcc.n	8001e26 <CopyDataInit>
 8001e32:	4a0a      	ldr	r2, [pc, #40]	@ (8001e5c <LoopFillZerobss+0x1e>)
 8001e34:	4c0a      	ldr	r4, [pc, #40]	@ (8001e60 <LoopFillZerobss+0x22>)
 8001e36:	2300      	movs	r3, #0
 8001e38:	e001      	b.n	8001e3e <LoopFillZerobss>

08001e3a <FillZerobss>:
 8001e3a:	6013      	str	r3, [r2, #0]
 8001e3c:	3204      	adds	r2, #4

08001e3e <LoopFillZerobss>:
 8001e3e:	42a2      	cmp	r2, r4
 8001e40:	d3fb      	bcc.n	8001e3a <FillZerobss>
 8001e42:	f001 fe7b 	bl	8003b3c <__libc_init_array>
 8001e46:	f7fe ff09 	bl	8000c5c <main>
 8001e4a:	4770      	bx	lr
 8001e4c:	20020000 	.word	0x20020000
 8001e50:	20000000 	.word	0x20000000
 8001e54:	2000000c 	.word	0x2000000c
 8001e58:	08004a84 	.word	0x08004a84
 8001e5c:	2000000c 	.word	0x2000000c
 8001e60:	200044e4 	.word	0x200044e4

08001e64 <ADC_IRQHandler>:
 8001e64:	e7fe      	b.n	8001e64 <ADC_IRQHandler>
	...

08001e68 <HAL_Init>:
 8001e68:	b580      	push	{r7, lr}
 8001e6a:	af00      	add	r7, sp, #0
 8001e6c:	4b0e      	ldr	r3, [pc, #56]	@ (8001ea8 <HAL_Init+0x40>)
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	4a0d      	ldr	r2, [pc, #52]	@ (8001ea8 <HAL_Init+0x40>)
 8001e72:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001e76:	6013      	str	r3, [r2, #0]
 8001e78:	4b0b      	ldr	r3, [pc, #44]	@ (8001ea8 <HAL_Init+0x40>)
 8001e7a:	681b      	ldr	r3, [r3, #0]
 8001e7c:	4a0a      	ldr	r2, [pc, #40]	@ (8001ea8 <HAL_Init+0x40>)
 8001e7e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001e82:	6013      	str	r3, [r2, #0]
 8001e84:	4b08      	ldr	r3, [pc, #32]	@ (8001ea8 <HAL_Init+0x40>)
 8001e86:	681b      	ldr	r3, [r3, #0]
 8001e88:	4a07      	ldr	r2, [pc, #28]	@ (8001ea8 <HAL_Init+0x40>)
 8001e8a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001e8e:	6013      	str	r3, [r2, #0]
 8001e90:	2003      	movs	r0, #3
 8001e92:	f000 fb7f 	bl	8002594 <HAL_NVIC_SetPriorityGrouping>
 8001e96:	200f      	movs	r0, #15
 8001e98:	f000 f808 	bl	8001eac <HAL_InitTick>
 8001e9c:	f7ff fcb6 	bl	800180c <HAL_MspInit>
 8001ea0:	2300      	movs	r3, #0
 8001ea2:	4618      	mov	r0, r3
 8001ea4:	bd80      	pop	{r7, pc}
 8001ea6:	bf00      	nop
 8001ea8:	40023c00 	.word	0x40023c00

08001eac <HAL_InitTick>:
 8001eac:	b580      	push	{r7, lr}
 8001eae:	b082      	sub	sp, #8
 8001eb0:	af00      	add	r7, sp, #0
 8001eb2:	6078      	str	r0, [r7, #4]
 8001eb4:	4b12      	ldr	r3, [pc, #72]	@ (8001f00 <HAL_InitTick+0x54>)
 8001eb6:	681a      	ldr	r2, [r3, #0]
 8001eb8:	4b12      	ldr	r3, [pc, #72]	@ (8001f04 <HAL_InitTick+0x58>)
 8001eba:	781b      	ldrb	r3, [r3, #0]
 8001ebc:	4619      	mov	r1, r3
 8001ebe:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001ec2:	fbb3 f3f1 	udiv	r3, r3, r1
 8001ec6:	fbb2 f3f3 	udiv	r3, r2, r3
 8001eca:	4618      	mov	r0, r3
 8001ecc:	f000 fb89 	bl	80025e2 <HAL_SYSTICK_Config>
 8001ed0:	4603      	mov	r3, r0
 8001ed2:	2b00      	cmp	r3, #0
 8001ed4:	d001      	beq.n	8001eda <HAL_InitTick+0x2e>
 8001ed6:	2301      	movs	r3, #1
 8001ed8:	e00e      	b.n	8001ef8 <HAL_InitTick+0x4c>
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	2b0f      	cmp	r3, #15
 8001ede:	d80a      	bhi.n	8001ef6 <HAL_InitTick+0x4a>
 8001ee0:	2200      	movs	r2, #0
 8001ee2:	6879      	ldr	r1, [r7, #4]
 8001ee4:	f04f 30ff 	mov.w	r0, #4294967295
 8001ee8:	f000 fb5f 	bl	80025aa <HAL_NVIC_SetPriority>
 8001eec:	4a06      	ldr	r2, [pc, #24]	@ (8001f08 <HAL_InitTick+0x5c>)
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	6013      	str	r3, [r2, #0]
 8001ef2:	2300      	movs	r3, #0
 8001ef4:	e000      	b.n	8001ef8 <HAL_InitTick+0x4c>
 8001ef6:	2301      	movs	r3, #1
 8001ef8:	4618      	mov	r0, r3
 8001efa:	3708      	adds	r7, #8
 8001efc:	46bd      	mov	sp, r7
 8001efe:	bd80      	pop	{r7, pc}
 8001f00:	20000000 	.word	0x20000000
 8001f04:	20000008 	.word	0x20000008
 8001f08:	20000004 	.word	0x20000004

08001f0c <HAL_IncTick>:
 8001f0c:	b480      	push	{r7}
 8001f0e:	af00      	add	r7, sp, #0
 8001f10:	4b06      	ldr	r3, [pc, #24]	@ (8001f2c <HAL_IncTick+0x20>)
 8001f12:	781b      	ldrb	r3, [r3, #0]
 8001f14:	461a      	mov	r2, r3
 8001f16:	4b06      	ldr	r3, [pc, #24]	@ (8001f30 <HAL_IncTick+0x24>)
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	4413      	add	r3, r2
 8001f1c:	4a04      	ldr	r2, [pc, #16]	@ (8001f30 <HAL_IncTick+0x24>)
 8001f1e:	6013      	str	r3, [r2, #0]
 8001f20:	bf00      	nop
 8001f22:	46bd      	mov	sp, r7
 8001f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f28:	4770      	bx	lr
 8001f2a:	bf00      	nop
 8001f2c:	20000008 	.word	0x20000008
 8001f30:	200044e0 	.word	0x200044e0

08001f34 <HAL_GetTick>:
 8001f34:	b480      	push	{r7}
 8001f36:	af00      	add	r7, sp, #0
 8001f38:	4b03      	ldr	r3, [pc, #12]	@ (8001f48 <HAL_GetTick+0x14>)
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	4618      	mov	r0, r3
 8001f3e:	46bd      	mov	sp, r7
 8001f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f44:	4770      	bx	lr
 8001f46:	bf00      	nop
 8001f48:	200044e0 	.word	0x200044e0

08001f4c <HAL_ADC_Init>:
 8001f4c:	b580      	push	{r7, lr}
 8001f4e:	b084      	sub	sp, #16
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	6078      	str	r0, [r7, #4]
 8001f54:	2300      	movs	r3, #0
 8001f56:	73fb      	strb	r3, [r7, #15]
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	2b00      	cmp	r3, #0
 8001f5c:	d101      	bne.n	8001f62 <HAL_ADC_Init+0x16>
 8001f5e:	2301      	movs	r3, #1
 8001f60:	e033      	b.n	8001fca <HAL_ADC_Init+0x7e>
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f66:	2b00      	cmp	r3, #0
 8001f68:	d109      	bne.n	8001f7e <HAL_ADC_Init+0x32>
 8001f6a:	6878      	ldr	r0, [r7, #4]
 8001f6c:	f7ff fc76 	bl	800185c <HAL_ADC_MspInit>
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	2200      	movs	r2, #0
 8001f74:	645a      	str	r2, [r3, #68]	@ 0x44
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	2200      	movs	r2, #0
 8001f7a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001f7e:	687b      	ldr	r3, [r7, #4]
 8001f80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f82:	f003 0310 	and.w	r3, r3, #16
 8001f86:	2b00      	cmp	r3, #0
 8001f88:	d118      	bne.n	8001fbc <HAL_ADC_Init+0x70>
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f8e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001f92:	f023 0302 	bic.w	r3, r3, #2
 8001f96:	f043 0202 	orr.w	r2, r3, #2
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f9e:	6878      	ldr	r0, [r7, #4]
 8001fa0:	f000 f94a 	bl	8002238 <ADC_Init>
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	2200      	movs	r2, #0
 8001fa8:	645a      	str	r2, [r3, #68]	@ 0x44
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fae:	f023 0303 	bic.w	r3, r3, #3
 8001fb2:	f043 0201 	orr.w	r2, r3, #1
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	641a      	str	r2, [r3, #64]	@ 0x40
 8001fba:	e001      	b.n	8001fc0 <HAL_ADC_Init+0x74>
 8001fbc:	2301      	movs	r3, #1
 8001fbe:	73fb      	strb	r3, [r7, #15]
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	2200      	movs	r2, #0
 8001fc4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001fc8:	7bfb      	ldrb	r3, [r7, #15]
 8001fca:	4618      	mov	r0, r3
 8001fcc:	3710      	adds	r7, #16
 8001fce:	46bd      	mov	sp, r7
 8001fd0:	bd80      	pop	{r7, pc}
	...

08001fd4 <HAL_ADC_ConfigChannel>:
 8001fd4:	b480      	push	{r7}
 8001fd6:	b085      	sub	sp, #20
 8001fd8:	af00      	add	r7, sp, #0
 8001fda:	6078      	str	r0, [r7, #4]
 8001fdc:	6039      	str	r1, [r7, #0]
 8001fde:	2300      	movs	r3, #0
 8001fe0:	60bb      	str	r3, [r7, #8]
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001fe8:	2b01      	cmp	r3, #1
 8001fea:	d101      	bne.n	8001ff0 <HAL_ADC_ConfigChannel+0x1c>
 8001fec:	2302      	movs	r3, #2
 8001fee:	e113      	b.n	8002218 <HAL_ADC_ConfigChannel+0x244>
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	2201      	movs	r2, #1
 8001ff4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001ff8:	683b      	ldr	r3, [r7, #0]
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	2b09      	cmp	r3, #9
 8001ffe:	d925      	bls.n	800204c <HAL_ADC_ConfigChannel+0x78>
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	68d9      	ldr	r1, [r3, #12]
 8002006:	683b      	ldr	r3, [r7, #0]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	b29b      	uxth	r3, r3
 800200c:	461a      	mov	r2, r3
 800200e:	4613      	mov	r3, r2
 8002010:	005b      	lsls	r3, r3, #1
 8002012:	4413      	add	r3, r2
 8002014:	3b1e      	subs	r3, #30
 8002016:	2207      	movs	r2, #7
 8002018:	fa02 f303 	lsl.w	r3, r2, r3
 800201c:	43da      	mvns	r2, r3
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	400a      	ands	r2, r1
 8002024:	60da      	str	r2, [r3, #12]
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	68d9      	ldr	r1, [r3, #12]
 800202c:	683b      	ldr	r3, [r7, #0]
 800202e:	689a      	ldr	r2, [r3, #8]
 8002030:	683b      	ldr	r3, [r7, #0]
 8002032:	681b      	ldr	r3, [r3, #0]
 8002034:	b29b      	uxth	r3, r3
 8002036:	4618      	mov	r0, r3
 8002038:	4603      	mov	r3, r0
 800203a:	005b      	lsls	r3, r3, #1
 800203c:	4403      	add	r3, r0
 800203e:	3b1e      	subs	r3, #30
 8002040:	409a      	lsls	r2, r3
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	430a      	orrs	r2, r1
 8002048:	60da      	str	r2, [r3, #12]
 800204a:	e022      	b.n	8002092 <HAL_ADC_ConfigChannel+0xbe>
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	6919      	ldr	r1, [r3, #16]
 8002052:	683b      	ldr	r3, [r7, #0]
 8002054:	681b      	ldr	r3, [r3, #0]
 8002056:	b29b      	uxth	r3, r3
 8002058:	461a      	mov	r2, r3
 800205a:	4613      	mov	r3, r2
 800205c:	005b      	lsls	r3, r3, #1
 800205e:	4413      	add	r3, r2
 8002060:	2207      	movs	r2, #7
 8002062:	fa02 f303 	lsl.w	r3, r2, r3
 8002066:	43da      	mvns	r2, r3
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	681b      	ldr	r3, [r3, #0]
 800206c:	400a      	ands	r2, r1
 800206e:	611a      	str	r2, [r3, #16]
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	6919      	ldr	r1, [r3, #16]
 8002076:	683b      	ldr	r3, [r7, #0]
 8002078:	689a      	ldr	r2, [r3, #8]
 800207a:	683b      	ldr	r3, [r7, #0]
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	b29b      	uxth	r3, r3
 8002080:	4618      	mov	r0, r3
 8002082:	4603      	mov	r3, r0
 8002084:	005b      	lsls	r3, r3, #1
 8002086:	4403      	add	r3, r0
 8002088:	409a      	lsls	r2, r3
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	430a      	orrs	r2, r1
 8002090:	611a      	str	r2, [r3, #16]
 8002092:	683b      	ldr	r3, [r7, #0]
 8002094:	685b      	ldr	r3, [r3, #4]
 8002096:	2b06      	cmp	r3, #6
 8002098:	d824      	bhi.n	80020e4 <HAL_ADC_ConfigChannel+0x110>
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	681b      	ldr	r3, [r3, #0]
 800209e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80020a0:	683b      	ldr	r3, [r7, #0]
 80020a2:	685a      	ldr	r2, [r3, #4]
 80020a4:	4613      	mov	r3, r2
 80020a6:	009b      	lsls	r3, r3, #2
 80020a8:	4413      	add	r3, r2
 80020aa:	3b05      	subs	r3, #5
 80020ac:	221f      	movs	r2, #31
 80020ae:	fa02 f303 	lsl.w	r3, r2, r3
 80020b2:	43da      	mvns	r2, r3
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	400a      	ands	r2, r1
 80020ba:	635a      	str	r2, [r3, #52]	@ 0x34
 80020bc:	687b      	ldr	r3, [r7, #4]
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80020c2:	683b      	ldr	r3, [r7, #0]
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	b29b      	uxth	r3, r3
 80020c8:	4618      	mov	r0, r3
 80020ca:	683b      	ldr	r3, [r7, #0]
 80020cc:	685a      	ldr	r2, [r3, #4]
 80020ce:	4613      	mov	r3, r2
 80020d0:	009b      	lsls	r3, r3, #2
 80020d2:	4413      	add	r3, r2
 80020d4:	3b05      	subs	r3, #5
 80020d6:	fa00 f203 	lsl.w	r2, r0, r3
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	430a      	orrs	r2, r1
 80020e0:	635a      	str	r2, [r3, #52]	@ 0x34
 80020e2:	e04c      	b.n	800217e <HAL_ADC_ConfigChannel+0x1aa>
 80020e4:	683b      	ldr	r3, [r7, #0]
 80020e6:	685b      	ldr	r3, [r3, #4]
 80020e8:	2b0c      	cmp	r3, #12
 80020ea:	d824      	bhi.n	8002136 <HAL_ADC_ConfigChannel+0x162>
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	681b      	ldr	r3, [r3, #0]
 80020f0:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80020f2:	683b      	ldr	r3, [r7, #0]
 80020f4:	685a      	ldr	r2, [r3, #4]
 80020f6:	4613      	mov	r3, r2
 80020f8:	009b      	lsls	r3, r3, #2
 80020fa:	4413      	add	r3, r2
 80020fc:	3b23      	subs	r3, #35	@ 0x23
 80020fe:	221f      	movs	r2, #31
 8002100:	fa02 f303 	lsl.w	r3, r2, r3
 8002104:	43da      	mvns	r2, r3
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	400a      	ands	r2, r1
 800210c:	631a      	str	r2, [r3, #48]	@ 0x30
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002114:	683b      	ldr	r3, [r7, #0]
 8002116:	681b      	ldr	r3, [r3, #0]
 8002118:	b29b      	uxth	r3, r3
 800211a:	4618      	mov	r0, r3
 800211c:	683b      	ldr	r3, [r7, #0]
 800211e:	685a      	ldr	r2, [r3, #4]
 8002120:	4613      	mov	r3, r2
 8002122:	009b      	lsls	r3, r3, #2
 8002124:	4413      	add	r3, r2
 8002126:	3b23      	subs	r3, #35	@ 0x23
 8002128:	fa00 f203 	lsl.w	r2, r0, r3
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	681b      	ldr	r3, [r3, #0]
 8002130:	430a      	orrs	r2, r1
 8002132:	631a      	str	r2, [r3, #48]	@ 0x30
 8002134:	e023      	b.n	800217e <HAL_ADC_ConfigChannel+0x1aa>
 8002136:	687b      	ldr	r3, [r7, #4]
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800213c:	683b      	ldr	r3, [r7, #0]
 800213e:	685a      	ldr	r2, [r3, #4]
 8002140:	4613      	mov	r3, r2
 8002142:	009b      	lsls	r3, r3, #2
 8002144:	4413      	add	r3, r2
 8002146:	3b41      	subs	r3, #65	@ 0x41
 8002148:	221f      	movs	r2, #31
 800214a:	fa02 f303 	lsl.w	r3, r2, r3
 800214e:	43da      	mvns	r2, r3
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	400a      	ands	r2, r1
 8002156:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	681b      	ldr	r3, [r3, #0]
 800215c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800215e:	683b      	ldr	r3, [r7, #0]
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	b29b      	uxth	r3, r3
 8002164:	4618      	mov	r0, r3
 8002166:	683b      	ldr	r3, [r7, #0]
 8002168:	685a      	ldr	r2, [r3, #4]
 800216a:	4613      	mov	r3, r2
 800216c:	009b      	lsls	r3, r3, #2
 800216e:	4413      	add	r3, r2
 8002170:	3b41      	subs	r3, #65	@ 0x41
 8002172:	fa00 f203 	lsl.w	r2, r0, r3
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	430a      	orrs	r2, r1
 800217c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800217e:	4b29      	ldr	r3, [pc, #164]	@ (8002224 <HAL_ADC_ConfigChannel+0x250>)
 8002180:	60fb      	str	r3, [r7, #12]
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	4a28      	ldr	r2, [pc, #160]	@ (8002228 <HAL_ADC_ConfigChannel+0x254>)
 8002188:	4293      	cmp	r3, r2
 800218a:	d10f      	bne.n	80021ac <HAL_ADC_ConfigChannel+0x1d8>
 800218c:	683b      	ldr	r3, [r7, #0]
 800218e:	681b      	ldr	r3, [r3, #0]
 8002190:	2b12      	cmp	r3, #18
 8002192:	d10b      	bne.n	80021ac <HAL_ADC_ConfigChannel+0x1d8>
 8002194:	68fb      	ldr	r3, [r7, #12]
 8002196:	685b      	ldr	r3, [r3, #4]
 8002198:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 800219c:	68fb      	ldr	r3, [r7, #12]
 800219e:	605a      	str	r2, [r3, #4]
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	685b      	ldr	r3, [r3, #4]
 80021a4:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80021a8:	68fb      	ldr	r3, [r7, #12]
 80021aa:	605a      	str	r2, [r3, #4]
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	4a1d      	ldr	r2, [pc, #116]	@ (8002228 <HAL_ADC_ConfigChannel+0x254>)
 80021b2:	4293      	cmp	r3, r2
 80021b4:	d12b      	bne.n	800220e <HAL_ADC_ConfigChannel+0x23a>
 80021b6:	683b      	ldr	r3, [r7, #0]
 80021b8:	681b      	ldr	r3, [r3, #0]
 80021ba:	4a1c      	ldr	r2, [pc, #112]	@ (800222c <HAL_ADC_ConfigChannel+0x258>)
 80021bc:	4293      	cmp	r3, r2
 80021be:	d003      	beq.n	80021c8 <HAL_ADC_ConfigChannel+0x1f4>
 80021c0:	683b      	ldr	r3, [r7, #0]
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	2b11      	cmp	r3, #17
 80021c6:	d122      	bne.n	800220e <HAL_ADC_ConfigChannel+0x23a>
 80021c8:	68fb      	ldr	r3, [r7, #12]
 80021ca:	685b      	ldr	r3, [r3, #4]
 80021cc:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80021d0:	68fb      	ldr	r3, [r7, #12]
 80021d2:	605a      	str	r2, [r3, #4]
 80021d4:	68fb      	ldr	r3, [r7, #12]
 80021d6:	685b      	ldr	r3, [r3, #4]
 80021d8:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	605a      	str	r2, [r3, #4]
 80021e0:	683b      	ldr	r3, [r7, #0]
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	4a11      	ldr	r2, [pc, #68]	@ (800222c <HAL_ADC_ConfigChannel+0x258>)
 80021e6:	4293      	cmp	r3, r2
 80021e8:	d111      	bne.n	800220e <HAL_ADC_ConfigChannel+0x23a>
 80021ea:	4b11      	ldr	r3, [pc, #68]	@ (8002230 <HAL_ADC_ConfigChannel+0x25c>)
 80021ec:	681b      	ldr	r3, [r3, #0]
 80021ee:	4a11      	ldr	r2, [pc, #68]	@ (8002234 <HAL_ADC_ConfigChannel+0x260>)
 80021f0:	fba2 2303 	umull	r2, r3, r2, r3
 80021f4:	0c9a      	lsrs	r2, r3, #18
 80021f6:	4613      	mov	r3, r2
 80021f8:	009b      	lsls	r3, r3, #2
 80021fa:	4413      	add	r3, r2
 80021fc:	005b      	lsls	r3, r3, #1
 80021fe:	60bb      	str	r3, [r7, #8]
 8002200:	e002      	b.n	8002208 <HAL_ADC_ConfigChannel+0x234>
 8002202:	68bb      	ldr	r3, [r7, #8]
 8002204:	3b01      	subs	r3, #1
 8002206:	60bb      	str	r3, [r7, #8]
 8002208:	68bb      	ldr	r3, [r7, #8]
 800220a:	2b00      	cmp	r3, #0
 800220c:	d1f9      	bne.n	8002202 <HAL_ADC_ConfigChannel+0x22e>
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	2200      	movs	r2, #0
 8002212:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002216:	2300      	movs	r3, #0
 8002218:	4618      	mov	r0, r3
 800221a:	3714      	adds	r7, #20
 800221c:	46bd      	mov	sp, r7
 800221e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002222:	4770      	bx	lr
 8002224:	40012300 	.word	0x40012300
 8002228:	40012000 	.word	0x40012000
 800222c:	10000012 	.word	0x10000012
 8002230:	20000000 	.word	0x20000000
 8002234:	431bde83 	.word	0x431bde83

08002238 <ADC_Init>:
 8002238:	b480      	push	{r7}
 800223a:	b085      	sub	sp, #20
 800223c:	af00      	add	r7, sp, #0
 800223e:	6078      	str	r0, [r7, #4]
 8002240:	4b79      	ldr	r3, [pc, #484]	@ (8002428 <ADC_Init+0x1f0>)
 8002242:	60fb      	str	r3, [r7, #12]
 8002244:	68fb      	ldr	r3, [r7, #12]
 8002246:	685b      	ldr	r3, [r3, #4]
 8002248:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800224c:	68fb      	ldr	r3, [r7, #12]
 800224e:	605a      	str	r2, [r3, #4]
 8002250:	68fb      	ldr	r3, [r7, #12]
 8002252:	685a      	ldr	r2, [r3, #4]
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	685b      	ldr	r3, [r3, #4]
 8002258:	431a      	orrs	r2, r3
 800225a:	68fb      	ldr	r3, [r7, #12]
 800225c:	605a      	str	r2, [r3, #4]
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	685a      	ldr	r2, [r3, #4]
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800226c:	605a      	str	r2, [r3, #4]
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	681b      	ldr	r3, [r3, #0]
 8002272:	6859      	ldr	r1, [r3, #4]
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	691b      	ldr	r3, [r3, #16]
 8002278:	021a      	lsls	r2, r3, #8
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	681b      	ldr	r3, [r3, #0]
 800227e:	430a      	orrs	r2, r1
 8002280:	605a      	str	r2, [r3, #4]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	681b      	ldr	r3, [r3, #0]
 8002286:	685a      	ldr	r2, [r3, #4]
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8002290:	605a      	str	r2, [r3, #4]
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	6859      	ldr	r1, [r3, #4]
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	689a      	ldr	r2, [r3, #8]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	430a      	orrs	r2, r1
 80022a2:	605a      	str	r2, [r3, #4]
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	689a      	ldr	r2, [r3, #8]
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80022b2:	609a      	str	r2, [r3, #8]
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	6899      	ldr	r1, [r3, #8]
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	68da      	ldr	r2, [r3, #12]
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	430a      	orrs	r2, r1
 80022c4:	609a      	str	r2, [r3, #8]
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80022ca:	4a58      	ldr	r2, [pc, #352]	@ (800242c <ADC_Init+0x1f4>)
 80022cc:	4293      	cmp	r3, r2
 80022ce:	d022      	beq.n	8002316 <ADC_Init+0xde>
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	689a      	ldr	r2, [r3, #8]
 80022d6:	687b      	ldr	r3, [r7, #4]
 80022d8:	681b      	ldr	r3, [r3, #0]
 80022da:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80022de:	609a      	str	r2, [r3, #8]
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	6899      	ldr	r1, [r3, #8]
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	681b      	ldr	r3, [r3, #0]
 80022ee:	430a      	orrs	r2, r1
 80022f0:	609a      	str	r2, [r3, #8]
 80022f2:	687b      	ldr	r3, [r7, #4]
 80022f4:	681b      	ldr	r3, [r3, #0]
 80022f6:	689a      	ldr	r2, [r3, #8]
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002300:	609a      	str	r2, [r3, #8]
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	681b      	ldr	r3, [r3, #0]
 8002306:	6899      	ldr	r1, [r3, #8]
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	430a      	orrs	r2, r1
 8002312:	609a      	str	r2, [r3, #8]
 8002314:	e00f      	b.n	8002336 <ADC_Init+0xfe>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	689a      	ldr	r2, [r3, #8]
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	681b      	ldr	r3, [r3, #0]
 8002320:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002324:	609a      	str	r2, [r3, #8]
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	689a      	ldr	r2, [r3, #8]
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002334:	609a      	str	r2, [r3, #8]
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	689a      	ldr	r2, [r3, #8]
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	f022 0202 	bic.w	r2, r2, #2
 8002344:	609a      	str	r2, [r3, #8]
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	6899      	ldr	r1, [r3, #8]
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	7e1b      	ldrb	r3, [r3, #24]
 8002350:	005a      	lsls	r2, r3, #1
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	430a      	orrs	r2, r1
 8002358:	609a      	str	r2, [r3, #8]
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002360:	2b00      	cmp	r3, #0
 8002362:	d01b      	beq.n	800239c <ADC_Init+0x164>
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	685a      	ldr	r2, [r3, #4]
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002372:	605a      	str	r2, [r3, #4]
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	685a      	ldr	r2, [r3, #4]
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	681b      	ldr	r3, [r3, #0]
 800237e:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8002382:	605a      	str	r2, [r3, #4]
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	6859      	ldr	r1, [r3, #4]
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800238e:	3b01      	subs	r3, #1
 8002390:	035a      	lsls	r2, r3, #13
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	430a      	orrs	r2, r1
 8002398:	605a      	str	r2, [r3, #4]
 800239a:	e007      	b.n	80023ac <ADC_Init+0x174>
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	685a      	ldr	r2, [r3, #4]
 80023a2:	687b      	ldr	r3, [r7, #4]
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80023aa:	605a      	str	r2, [r3, #4]
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80023ba:	62da      	str	r2, [r3, #44]	@ 0x2c
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	69db      	ldr	r3, [r3, #28]
 80023c6:	3b01      	subs	r3, #1
 80023c8:	051a      	lsls	r2, r3, #20
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	681b      	ldr	r3, [r3, #0]
 80023ce:	430a      	orrs	r2, r1
 80023d0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	689a      	ldr	r2, [r3, #8]
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80023e0:	609a      	str	r2, [r3, #8]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	6899      	ldr	r1, [r3, #8]
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80023ee:	025a      	lsls	r2, r3, #9
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	430a      	orrs	r2, r1
 80023f6:	609a      	str	r2, [r3, #8]
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	689a      	ldr	r2, [r3, #8]
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002406:	609a      	str	r2, [r3, #8]
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	6899      	ldr	r1, [r3, #8]
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	695b      	ldr	r3, [r3, #20]
 8002412:	029a      	lsls	r2, r3, #10
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	430a      	orrs	r2, r1
 800241a:	609a      	str	r2, [r3, #8]
 800241c:	bf00      	nop
 800241e:	3714      	adds	r7, #20
 8002420:	46bd      	mov	sp, r7
 8002422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002426:	4770      	bx	lr
 8002428:	40012300 	.word	0x40012300
 800242c:	0f000001 	.word	0x0f000001

08002430 <__NVIC_SetPriorityGrouping>:
 8002430:	b480      	push	{r7}
 8002432:	b085      	sub	sp, #20
 8002434:	af00      	add	r7, sp, #0
 8002436:	6078      	str	r0, [r7, #4]
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	f003 0307 	and.w	r3, r3, #7
 800243e:	60fb      	str	r3, [r7, #12]
 8002440:	4b0c      	ldr	r3, [pc, #48]	@ (8002474 <__NVIC_SetPriorityGrouping+0x44>)
 8002442:	68db      	ldr	r3, [r3, #12]
 8002444:	60bb      	str	r3, [r7, #8]
 8002446:	68ba      	ldr	r2, [r7, #8]
 8002448:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800244c:	4013      	ands	r3, r2
 800244e:	60bb      	str	r3, [r7, #8]
 8002450:	68fb      	ldr	r3, [r7, #12]
 8002452:	021a      	lsls	r2, r3, #8
 8002454:	68bb      	ldr	r3, [r7, #8]
 8002456:	4313      	orrs	r3, r2
 8002458:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800245c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002460:	60bb      	str	r3, [r7, #8]
 8002462:	4a04      	ldr	r2, [pc, #16]	@ (8002474 <__NVIC_SetPriorityGrouping+0x44>)
 8002464:	68bb      	ldr	r3, [r7, #8]
 8002466:	60d3      	str	r3, [r2, #12]
 8002468:	bf00      	nop
 800246a:	3714      	adds	r7, #20
 800246c:	46bd      	mov	sp, r7
 800246e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002472:	4770      	bx	lr
 8002474:	e000ed00 	.word	0xe000ed00

08002478 <__NVIC_GetPriorityGrouping>:
 8002478:	b480      	push	{r7}
 800247a:	af00      	add	r7, sp, #0
 800247c:	4b04      	ldr	r3, [pc, #16]	@ (8002490 <__NVIC_GetPriorityGrouping+0x18>)
 800247e:	68db      	ldr	r3, [r3, #12]
 8002480:	0a1b      	lsrs	r3, r3, #8
 8002482:	f003 0307 	and.w	r3, r3, #7
 8002486:	4618      	mov	r0, r3
 8002488:	46bd      	mov	sp, r7
 800248a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800248e:	4770      	bx	lr
 8002490:	e000ed00 	.word	0xe000ed00

08002494 <__NVIC_SetPriority>:
 8002494:	b480      	push	{r7}
 8002496:	b083      	sub	sp, #12
 8002498:	af00      	add	r7, sp, #0
 800249a:	4603      	mov	r3, r0
 800249c:	6039      	str	r1, [r7, #0]
 800249e:	71fb      	strb	r3, [r7, #7]
 80024a0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80024a4:	2b00      	cmp	r3, #0
 80024a6:	db0a      	blt.n	80024be <__NVIC_SetPriority+0x2a>
 80024a8:	683b      	ldr	r3, [r7, #0]
 80024aa:	b2da      	uxtb	r2, r3
 80024ac:	490c      	ldr	r1, [pc, #48]	@ (80024e0 <__NVIC_SetPriority+0x4c>)
 80024ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80024b2:	0112      	lsls	r2, r2, #4
 80024b4:	b2d2      	uxtb	r2, r2
 80024b6:	440b      	add	r3, r1
 80024b8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80024bc:	e00a      	b.n	80024d4 <__NVIC_SetPriority+0x40>
 80024be:	683b      	ldr	r3, [r7, #0]
 80024c0:	b2da      	uxtb	r2, r3
 80024c2:	4908      	ldr	r1, [pc, #32]	@ (80024e4 <__NVIC_SetPriority+0x50>)
 80024c4:	79fb      	ldrb	r3, [r7, #7]
 80024c6:	f003 030f 	and.w	r3, r3, #15
 80024ca:	3b04      	subs	r3, #4
 80024cc:	0112      	lsls	r2, r2, #4
 80024ce:	b2d2      	uxtb	r2, r2
 80024d0:	440b      	add	r3, r1
 80024d2:	761a      	strb	r2, [r3, #24]
 80024d4:	bf00      	nop
 80024d6:	370c      	adds	r7, #12
 80024d8:	46bd      	mov	sp, r7
 80024da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024de:	4770      	bx	lr
 80024e0:	e000e100 	.word	0xe000e100
 80024e4:	e000ed00 	.word	0xe000ed00

080024e8 <NVIC_EncodePriority>:
 80024e8:	b480      	push	{r7}
 80024ea:	b089      	sub	sp, #36	@ 0x24
 80024ec:	af00      	add	r7, sp, #0
 80024ee:	60f8      	str	r0, [r7, #12]
 80024f0:	60b9      	str	r1, [r7, #8]
 80024f2:	607a      	str	r2, [r7, #4]
 80024f4:	68fb      	ldr	r3, [r7, #12]
 80024f6:	f003 0307 	and.w	r3, r3, #7
 80024fa:	61fb      	str	r3, [r7, #28]
 80024fc:	69fb      	ldr	r3, [r7, #28]
 80024fe:	f1c3 0307 	rsb	r3, r3, #7
 8002502:	2b04      	cmp	r3, #4
 8002504:	bf28      	it	cs
 8002506:	2304      	movcs	r3, #4
 8002508:	61bb      	str	r3, [r7, #24]
 800250a:	69fb      	ldr	r3, [r7, #28]
 800250c:	3304      	adds	r3, #4
 800250e:	2b06      	cmp	r3, #6
 8002510:	d902      	bls.n	8002518 <NVIC_EncodePriority+0x30>
 8002512:	69fb      	ldr	r3, [r7, #28]
 8002514:	3b03      	subs	r3, #3
 8002516:	e000      	b.n	800251a <NVIC_EncodePriority+0x32>
 8002518:	2300      	movs	r3, #0
 800251a:	617b      	str	r3, [r7, #20]
 800251c:	f04f 32ff 	mov.w	r2, #4294967295
 8002520:	69bb      	ldr	r3, [r7, #24]
 8002522:	fa02 f303 	lsl.w	r3, r2, r3
 8002526:	43da      	mvns	r2, r3
 8002528:	68bb      	ldr	r3, [r7, #8]
 800252a:	401a      	ands	r2, r3
 800252c:	697b      	ldr	r3, [r7, #20]
 800252e:	409a      	lsls	r2, r3
 8002530:	f04f 31ff 	mov.w	r1, #4294967295
 8002534:	697b      	ldr	r3, [r7, #20]
 8002536:	fa01 f303 	lsl.w	r3, r1, r3
 800253a:	43d9      	mvns	r1, r3
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	400b      	ands	r3, r1
 8002540:	4313      	orrs	r3, r2
 8002542:	4618      	mov	r0, r3
 8002544:	3724      	adds	r7, #36	@ 0x24
 8002546:	46bd      	mov	sp, r7
 8002548:	f85d 7b04 	ldr.w	r7, [sp], #4
 800254c:	4770      	bx	lr
	...

08002550 <SysTick_Config>:
 8002550:	b580      	push	{r7, lr}
 8002552:	b082      	sub	sp, #8
 8002554:	af00      	add	r7, sp, #0
 8002556:	6078      	str	r0, [r7, #4]
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	3b01      	subs	r3, #1
 800255c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002560:	d301      	bcc.n	8002566 <SysTick_Config+0x16>
 8002562:	2301      	movs	r3, #1
 8002564:	e00f      	b.n	8002586 <SysTick_Config+0x36>
 8002566:	4a0a      	ldr	r2, [pc, #40]	@ (8002590 <SysTick_Config+0x40>)
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	3b01      	subs	r3, #1
 800256c:	6053      	str	r3, [r2, #4]
 800256e:	210f      	movs	r1, #15
 8002570:	f04f 30ff 	mov.w	r0, #4294967295
 8002574:	f7ff ff8e 	bl	8002494 <__NVIC_SetPriority>
 8002578:	4b05      	ldr	r3, [pc, #20]	@ (8002590 <SysTick_Config+0x40>)
 800257a:	2200      	movs	r2, #0
 800257c:	609a      	str	r2, [r3, #8]
 800257e:	4b04      	ldr	r3, [pc, #16]	@ (8002590 <SysTick_Config+0x40>)
 8002580:	2207      	movs	r2, #7
 8002582:	601a      	str	r2, [r3, #0]
 8002584:	2300      	movs	r3, #0
 8002586:	4618      	mov	r0, r3
 8002588:	3708      	adds	r7, #8
 800258a:	46bd      	mov	sp, r7
 800258c:	bd80      	pop	{r7, pc}
 800258e:	bf00      	nop
 8002590:	e000e010 	.word	0xe000e010

08002594 <HAL_NVIC_SetPriorityGrouping>:
 8002594:	b580      	push	{r7, lr}
 8002596:	b082      	sub	sp, #8
 8002598:	af00      	add	r7, sp, #0
 800259a:	6078      	str	r0, [r7, #4]
 800259c:	6878      	ldr	r0, [r7, #4]
 800259e:	f7ff ff47 	bl	8002430 <__NVIC_SetPriorityGrouping>
 80025a2:	bf00      	nop
 80025a4:	3708      	adds	r7, #8
 80025a6:	46bd      	mov	sp, r7
 80025a8:	bd80      	pop	{r7, pc}

080025aa <HAL_NVIC_SetPriority>:
 80025aa:	b580      	push	{r7, lr}
 80025ac:	b086      	sub	sp, #24
 80025ae:	af00      	add	r7, sp, #0
 80025b0:	4603      	mov	r3, r0
 80025b2:	60b9      	str	r1, [r7, #8]
 80025b4:	607a      	str	r2, [r7, #4]
 80025b6:	73fb      	strb	r3, [r7, #15]
 80025b8:	2300      	movs	r3, #0
 80025ba:	617b      	str	r3, [r7, #20]
 80025bc:	f7ff ff5c 	bl	8002478 <__NVIC_GetPriorityGrouping>
 80025c0:	6178      	str	r0, [r7, #20]
 80025c2:	687a      	ldr	r2, [r7, #4]
 80025c4:	68b9      	ldr	r1, [r7, #8]
 80025c6:	6978      	ldr	r0, [r7, #20]
 80025c8:	f7ff ff8e 	bl	80024e8 <NVIC_EncodePriority>
 80025cc:	4602      	mov	r2, r0
 80025ce:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80025d2:	4611      	mov	r1, r2
 80025d4:	4618      	mov	r0, r3
 80025d6:	f7ff ff5d 	bl	8002494 <__NVIC_SetPriority>
 80025da:	bf00      	nop
 80025dc:	3718      	adds	r7, #24
 80025de:	46bd      	mov	sp, r7
 80025e0:	bd80      	pop	{r7, pc}

080025e2 <HAL_SYSTICK_Config>:
 80025e2:	b580      	push	{r7, lr}
 80025e4:	b082      	sub	sp, #8
 80025e6:	af00      	add	r7, sp, #0
 80025e8:	6078      	str	r0, [r7, #4]
 80025ea:	6878      	ldr	r0, [r7, #4]
 80025ec:	f7ff ffb0 	bl	8002550 <SysTick_Config>
 80025f0:	4603      	mov	r3, r0
 80025f2:	4618      	mov	r0, r3
 80025f4:	3708      	adds	r7, #8
 80025f6:	46bd      	mov	sp, r7
 80025f8:	bd80      	pop	{r7, pc}
	...

080025fc <HAL_GPIO_Init>:
 80025fc:	b480      	push	{r7}
 80025fe:	b089      	sub	sp, #36	@ 0x24
 8002600:	af00      	add	r7, sp, #0
 8002602:	6078      	str	r0, [r7, #4]
 8002604:	6039      	str	r1, [r7, #0]
 8002606:	2300      	movs	r3, #0
 8002608:	617b      	str	r3, [r7, #20]
 800260a:	2300      	movs	r3, #0
 800260c:	613b      	str	r3, [r7, #16]
 800260e:	2300      	movs	r3, #0
 8002610:	61bb      	str	r3, [r7, #24]
 8002612:	2300      	movs	r3, #0
 8002614:	61fb      	str	r3, [r7, #28]
 8002616:	e159      	b.n	80028cc <HAL_GPIO_Init+0x2d0>
 8002618:	2201      	movs	r2, #1
 800261a:	69fb      	ldr	r3, [r7, #28]
 800261c:	fa02 f303 	lsl.w	r3, r2, r3
 8002620:	617b      	str	r3, [r7, #20]
 8002622:	683b      	ldr	r3, [r7, #0]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	697a      	ldr	r2, [r7, #20]
 8002628:	4013      	ands	r3, r2
 800262a:	613b      	str	r3, [r7, #16]
 800262c:	693a      	ldr	r2, [r7, #16]
 800262e:	697b      	ldr	r3, [r7, #20]
 8002630:	429a      	cmp	r2, r3
 8002632:	f040 8148 	bne.w	80028c6 <HAL_GPIO_Init+0x2ca>
 8002636:	683b      	ldr	r3, [r7, #0]
 8002638:	685b      	ldr	r3, [r3, #4]
 800263a:	f003 0303 	and.w	r3, r3, #3
 800263e:	2b01      	cmp	r3, #1
 8002640:	d005      	beq.n	800264e <HAL_GPIO_Init+0x52>
 8002642:	683b      	ldr	r3, [r7, #0]
 8002644:	685b      	ldr	r3, [r3, #4]
 8002646:	f003 0303 	and.w	r3, r3, #3
 800264a:	2b02      	cmp	r3, #2
 800264c:	d130      	bne.n	80026b0 <HAL_GPIO_Init+0xb4>
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	689b      	ldr	r3, [r3, #8]
 8002652:	61bb      	str	r3, [r7, #24]
 8002654:	69fb      	ldr	r3, [r7, #28]
 8002656:	005b      	lsls	r3, r3, #1
 8002658:	2203      	movs	r2, #3
 800265a:	fa02 f303 	lsl.w	r3, r2, r3
 800265e:	43db      	mvns	r3, r3
 8002660:	69ba      	ldr	r2, [r7, #24]
 8002662:	4013      	ands	r3, r2
 8002664:	61bb      	str	r3, [r7, #24]
 8002666:	683b      	ldr	r3, [r7, #0]
 8002668:	68da      	ldr	r2, [r3, #12]
 800266a:	69fb      	ldr	r3, [r7, #28]
 800266c:	005b      	lsls	r3, r3, #1
 800266e:	fa02 f303 	lsl.w	r3, r2, r3
 8002672:	69ba      	ldr	r2, [r7, #24]
 8002674:	4313      	orrs	r3, r2
 8002676:	61bb      	str	r3, [r7, #24]
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	69ba      	ldr	r2, [r7, #24]
 800267c:	609a      	str	r2, [r3, #8]
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	685b      	ldr	r3, [r3, #4]
 8002682:	61bb      	str	r3, [r7, #24]
 8002684:	2201      	movs	r2, #1
 8002686:	69fb      	ldr	r3, [r7, #28]
 8002688:	fa02 f303 	lsl.w	r3, r2, r3
 800268c:	43db      	mvns	r3, r3
 800268e:	69ba      	ldr	r2, [r7, #24]
 8002690:	4013      	ands	r3, r2
 8002692:	61bb      	str	r3, [r7, #24]
 8002694:	683b      	ldr	r3, [r7, #0]
 8002696:	685b      	ldr	r3, [r3, #4]
 8002698:	091b      	lsrs	r3, r3, #4
 800269a:	f003 0201 	and.w	r2, r3, #1
 800269e:	69fb      	ldr	r3, [r7, #28]
 80026a0:	fa02 f303 	lsl.w	r3, r2, r3
 80026a4:	69ba      	ldr	r2, [r7, #24]
 80026a6:	4313      	orrs	r3, r2
 80026a8:	61bb      	str	r3, [r7, #24]
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	69ba      	ldr	r2, [r7, #24]
 80026ae:	605a      	str	r2, [r3, #4]
 80026b0:	683b      	ldr	r3, [r7, #0]
 80026b2:	685b      	ldr	r3, [r3, #4]
 80026b4:	f003 0303 	and.w	r3, r3, #3
 80026b8:	2b03      	cmp	r3, #3
 80026ba:	d017      	beq.n	80026ec <HAL_GPIO_Init+0xf0>
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	68db      	ldr	r3, [r3, #12]
 80026c0:	61bb      	str	r3, [r7, #24]
 80026c2:	69fb      	ldr	r3, [r7, #28]
 80026c4:	005b      	lsls	r3, r3, #1
 80026c6:	2203      	movs	r2, #3
 80026c8:	fa02 f303 	lsl.w	r3, r2, r3
 80026cc:	43db      	mvns	r3, r3
 80026ce:	69ba      	ldr	r2, [r7, #24]
 80026d0:	4013      	ands	r3, r2
 80026d2:	61bb      	str	r3, [r7, #24]
 80026d4:	683b      	ldr	r3, [r7, #0]
 80026d6:	689a      	ldr	r2, [r3, #8]
 80026d8:	69fb      	ldr	r3, [r7, #28]
 80026da:	005b      	lsls	r3, r3, #1
 80026dc:	fa02 f303 	lsl.w	r3, r2, r3
 80026e0:	69ba      	ldr	r2, [r7, #24]
 80026e2:	4313      	orrs	r3, r2
 80026e4:	61bb      	str	r3, [r7, #24]
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	69ba      	ldr	r2, [r7, #24]
 80026ea:	60da      	str	r2, [r3, #12]
 80026ec:	683b      	ldr	r3, [r7, #0]
 80026ee:	685b      	ldr	r3, [r3, #4]
 80026f0:	f003 0303 	and.w	r3, r3, #3
 80026f4:	2b02      	cmp	r3, #2
 80026f6:	d123      	bne.n	8002740 <HAL_GPIO_Init+0x144>
 80026f8:	69fb      	ldr	r3, [r7, #28]
 80026fa:	08da      	lsrs	r2, r3, #3
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	3208      	adds	r2, #8
 8002700:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002704:	61bb      	str	r3, [r7, #24]
 8002706:	69fb      	ldr	r3, [r7, #28]
 8002708:	f003 0307 	and.w	r3, r3, #7
 800270c:	009b      	lsls	r3, r3, #2
 800270e:	220f      	movs	r2, #15
 8002710:	fa02 f303 	lsl.w	r3, r2, r3
 8002714:	43db      	mvns	r3, r3
 8002716:	69ba      	ldr	r2, [r7, #24]
 8002718:	4013      	ands	r3, r2
 800271a:	61bb      	str	r3, [r7, #24]
 800271c:	683b      	ldr	r3, [r7, #0]
 800271e:	691a      	ldr	r2, [r3, #16]
 8002720:	69fb      	ldr	r3, [r7, #28]
 8002722:	f003 0307 	and.w	r3, r3, #7
 8002726:	009b      	lsls	r3, r3, #2
 8002728:	fa02 f303 	lsl.w	r3, r2, r3
 800272c:	69ba      	ldr	r2, [r7, #24]
 800272e:	4313      	orrs	r3, r2
 8002730:	61bb      	str	r3, [r7, #24]
 8002732:	69fb      	ldr	r3, [r7, #28]
 8002734:	08da      	lsrs	r2, r3, #3
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	3208      	adds	r2, #8
 800273a:	69b9      	ldr	r1, [r7, #24]
 800273c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	61bb      	str	r3, [r7, #24]
 8002746:	69fb      	ldr	r3, [r7, #28]
 8002748:	005b      	lsls	r3, r3, #1
 800274a:	2203      	movs	r2, #3
 800274c:	fa02 f303 	lsl.w	r3, r2, r3
 8002750:	43db      	mvns	r3, r3
 8002752:	69ba      	ldr	r2, [r7, #24]
 8002754:	4013      	ands	r3, r2
 8002756:	61bb      	str	r3, [r7, #24]
 8002758:	683b      	ldr	r3, [r7, #0]
 800275a:	685b      	ldr	r3, [r3, #4]
 800275c:	f003 0203 	and.w	r2, r3, #3
 8002760:	69fb      	ldr	r3, [r7, #28]
 8002762:	005b      	lsls	r3, r3, #1
 8002764:	fa02 f303 	lsl.w	r3, r2, r3
 8002768:	69ba      	ldr	r2, [r7, #24]
 800276a:	4313      	orrs	r3, r2
 800276c:	61bb      	str	r3, [r7, #24]
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	69ba      	ldr	r2, [r7, #24]
 8002772:	601a      	str	r2, [r3, #0]
 8002774:	683b      	ldr	r3, [r7, #0]
 8002776:	685b      	ldr	r3, [r3, #4]
 8002778:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800277c:	2b00      	cmp	r3, #0
 800277e:	f000 80a2 	beq.w	80028c6 <HAL_GPIO_Init+0x2ca>
 8002782:	2300      	movs	r3, #0
 8002784:	60fb      	str	r3, [r7, #12]
 8002786:	4b57      	ldr	r3, [pc, #348]	@ (80028e4 <HAL_GPIO_Init+0x2e8>)
 8002788:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800278a:	4a56      	ldr	r2, [pc, #344]	@ (80028e4 <HAL_GPIO_Init+0x2e8>)
 800278c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002790:	6453      	str	r3, [r2, #68]	@ 0x44
 8002792:	4b54      	ldr	r3, [pc, #336]	@ (80028e4 <HAL_GPIO_Init+0x2e8>)
 8002794:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002796:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800279a:	60fb      	str	r3, [r7, #12]
 800279c:	68fb      	ldr	r3, [r7, #12]
 800279e:	4a52      	ldr	r2, [pc, #328]	@ (80028e8 <HAL_GPIO_Init+0x2ec>)
 80027a0:	69fb      	ldr	r3, [r7, #28]
 80027a2:	089b      	lsrs	r3, r3, #2
 80027a4:	3302      	adds	r3, #2
 80027a6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80027aa:	61bb      	str	r3, [r7, #24]
 80027ac:	69fb      	ldr	r3, [r7, #28]
 80027ae:	f003 0303 	and.w	r3, r3, #3
 80027b2:	009b      	lsls	r3, r3, #2
 80027b4:	220f      	movs	r2, #15
 80027b6:	fa02 f303 	lsl.w	r3, r2, r3
 80027ba:	43db      	mvns	r3, r3
 80027bc:	69ba      	ldr	r2, [r7, #24]
 80027be:	4013      	ands	r3, r2
 80027c0:	61bb      	str	r3, [r7, #24]
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	4a49      	ldr	r2, [pc, #292]	@ (80028ec <HAL_GPIO_Init+0x2f0>)
 80027c6:	4293      	cmp	r3, r2
 80027c8:	d019      	beq.n	80027fe <HAL_GPIO_Init+0x202>
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	4a48      	ldr	r2, [pc, #288]	@ (80028f0 <HAL_GPIO_Init+0x2f4>)
 80027ce:	4293      	cmp	r3, r2
 80027d0:	d013      	beq.n	80027fa <HAL_GPIO_Init+0x1fe>
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	4a47      	ldr	r2, [pc, #284]	@ (80028f4 <HAL_GPIO_Init+0x2f8>)
 80027d6:	4293      	cmp	r3, r2
 80027d8:	d00d      	beq.n	80027f6 <HAL_GPIO_Init+0x1fa>
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	4a46      	ldr	r2, [pc, #280]	@ (80028f8 <HAL_GPIO_Init+0x2fc>)
 80027de:	4293      	cmp	r3, r2
 80027e0:	d007      	beq.n	80027f2 <HAL_GPIO_Init+0x1f6>
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	4a45      	ldr	r2, [pc, #276]	@ (80028fc <HAL_GPIO_Init+0x300>)
 80027e6:	4293      	cmp	r3, r2
 80027e8:	d101      	bne.n	80027ee <HAL_GPIO_Init+0x1f2>
 80027ea:	2304      	movs	r3, #4
 80027ec:	e008      	b.n	8002800 <HAL_GPIO_Init+0x204>
 80027ee:	2307      	movs	r3, #7
 80027f0:	e006      	b.n	8002800 <HAL_GPIO_Init+0x204>
 80027f2:	2303      	movs	r3, #3
 80027f4:	e004      	b.n	8002800 <HAL_GPIO_Init+0x204>
 80027f6:	2302      	movs	r3, #2
 80027f8:	e002      	b.n	8002800 <HAL_GPIO_Init+0x204>
 80027fa:	2301      	movs	r3, #1
 80027fc:	e000      	b.n	8002800 <HAL_GPIO_Init+0x204>
 80027fe:	2300      	movs	r3, #0
 8002800:	69fa      	ldr	r2, [r7, #28]
 8002802:	f002 0203 	and.w	r2, r2, #3
 8002806:	0092      	lsls	r2, r2, #2
 8002808:	4093      	lsls	r3, r2
 800280a:	69ba      	ldr	r2, [r7, #24]
 800280c:	4313      	orrs	r3, r2
 800280e:	61bb      	str	r3, [r7, #24]
 8002810:	4935      	ldr	r1, [pc, #212]	@ (80028e8 <HAL_GPIO_Init+0x2ec>)
 8002812:	69fb      	ldr	r3, [r7, #28]
 8002814:	089b      	lsrs	r3, r3, #2
 8002816:	3302      	adds	r3, #2
 8002818:	69ba      	ldr	r2, [r7, #24]
 800281a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800281e:	4b38      	ldr	r3, [pc, #224]	@ (8002900 <HAL_GPIO_Init+0x304>)
 8002820:	689b      	ldr	r3, [r3, #8]
 8002822:	61bb      	str	r3, [r7, #24]
 8002824:	693b      	ldr	r3, [r7, #16]
 8002826:	43db      	mvns	r3, r3
 8002828:	69ba      	ldr	r2, [r7, #24]
 800282a:	4013      	ands	r3, r2
 800282c:	61bb      	str	r3, [r7, #24]
 800282e:	683b      	ldr	r3, [r7, #0]
 8002830:	685b      	ldr	r3, [r3, #4]
 8002832:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002836:	2b00      	cmp	r3, #0
 8002838:	d003      	beq.n	8002842 <HAL_GPIO_Init+0x246>
 800283a:	69ba      	ldr	r2, [r7, #24]
 800283c:	693b      	ldr	r3, [r7, #16]
 800283e:	4313      	orrs	r3, r2
 8002840:	61bb      	str	r3, [r7, #24]
 8002842:	4a2f      	ldr	r2, [pc, #188]	@ (8002900 <HAL_GPIO_Init+0x304>)
 8002844:	69bb      	ldr	r3, [r7, #24]
 8002846:	6093      	str	r3, [r2, #8]
 8002848:	4b2d      	ldr	r3, [pc, #180]	@ (8002900 <HAL_GPIO_Init+0x304>)
 800284a:	68db      	ldr	r3, [r3, #12]
 800284c:	61bb      	str	r3, [r7, #24]
 800284e:	693b      	ldr	r3, [r7, #16]
 8002850:	43db      	mvns	r3, r3
 8002852:	69ba      	ldr	r2, [r7, #24]
 8002854:	4013      	ands	r3, r2
 8002856:	61bb      	str	r3, [r7, #24]
 8002858:	683b      	ldr	r3, [r7, #0]
 800285a:	685b      	ldr	r3, [r3, #4]
 800285c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002860:	2b00      	cmp	r3, #0
 8002862:	d003      	beq.n	800286c <HAL_GPIO_Init+0x270>
 8002864:	69ba      	ldr	r2, [r7, #24]
 8002866:	693b      	ldr	r3, [r7, #16]
 8002868:	4313      	orrs	r3, r2
 800286a:	61bb      	str	r3, [r7, #24]
 800286c:	4a24      	ldr	r2, [pc, #144]	@ (8002900 <HAL_GPIO_Init+0x304>)
 800286e:	69bb      	ldr	r3, [r7, #24]
 8002870:	60d3      	str	r3, [r2, #12]
 8002872:	4b23      	ldr	r3, [pc, #140]	@ (8002900 <HAL_GPIO_Init+0x304>)
 8002874:	685b      	ldr	r3, [r3, #4]
 8002876:	61bb      	str	r3, [r7, #24]
 8002878:	693b      	ldr	r3, [r7, #16]
 800287a:	43db      	mvns	r3, r3
 800287c:	69ba      	ldr	r2, [r7, #24]
 800287e:	4013      	ands	r3, r2
 8002880:	61bb      	str	r3, [r7, #24]
 8002882:	683b      	ldr	r3, [r7, #0]
 8002884:	685b      	ldr	r3, [r3, #4]
 8002886:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800288a:	2b00      	cmp	r3, #0
 800288c:	d003      	beq.n	8002896 <HAL_GPIO_Init+0x29a>
 800288e:	69ba      	ldr	r2, [r7, #24]
 8002890:	693b      	ldr	r3, [r7, #16]
 8002892:	4313      	orrs	r3, r2
 8002894:	61bb      	str	r3, [r7, #24]
 8002896:	4a1a      	ldr	r2, [pc, #104]	@ (8002900 <HAL_GPIO_Init+0x304>)
 8002898:	69bb      	ldr	r3, [r7, #24]
 800289a:	6053      	str	r3, [r2, #4]
 800289c:	4b18      	ldr	r3, [pc, #96]	@ (8002900 <HAL_GPIO_Init+0x304>)
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	61bb      	str	r3, [r7, #24]
 80028a2:	693b      	ldr	r3, [r7, #16]
 80028a4:	43db      	mvns	r3, r3
 80028a6:	69ba      	ldr	r2, [r7, #24]
 80028a8:	4013      	ands	r3, r2
 80028aa:	61bb      	str	r3, [r7, #24]
 80028ac:	683b      	ldr	r3, [r7, #0]
 80028ae:	685b      	ldr	r3, [r3, #4]
 80028b0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80028b4:	2b00      	cmp	r3, #0
 80028b6:	d003      	beq.n	80028c0 <HAL_GPIO_Init+0x2c4>
 80028b8:	69ba      	ldr	r2, [r7, #24]
 80028ba:	693b      	ldr	r3, [r7, #16]
 80028bc:	4313      	orrs	r3, r2
 80028be:	61bb      	str	r3, [r7, #24]
 80028c0:	4a0f      	ldr	r2, [pc, #60]	@ (8002900 <HAL_GPIO_Init+0x304>)
 80028c2:	69bb      	ldr	r3, [r7, #24]
 80028c4:	6013      	str	r3, [r2, #0]
 80028c6:	69fb      	ldr	r3, [r7, #28]
 80028c8:	3301      	adds	r3, #1
 80028ca:	61fb      	str	r3, [r7, #28]
 80028cc:	69fb      	ldr	r3, [r7, #28]
 80028ce:	2b0f      	cmp	r3, #15
 80028d0:	f67f aea2 	bls.w	8002618 <HAL_GPIO_Init+0x1c>
 80028d4:	bf00      	nop
 80028d6:	bf00      	nop
 80028d8:	3724      	adds	r7, #36	@ 0x24
 80028da:	46bd      	mov	sp, r7
 80028dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028e0:	4770      	bx	lr
 80028e2:	bf00      	nop
 80028e4:	40023800 	.word	0x40023800
 80028e8:	40013800 	.word	0x40013800
 80028ec:	40020000 	.word	0x40020000
 80028f0:	40020400 	.word	0x40020400
 80028f4:	40020800 	.word	0x40020800
 80028f8:	40020c00 	.word	0x40020c00
 80028fc:	40021000 	.word	0x40021000
 8002900:	40013c00 	.word	0x40013c00

08002904 <HAL_GPIO_WritePin>:
 8002904:	b480      	push	{r7}
 8002906:	b083      	sub	sp, #12
 8002908:	af00      	add	r7, sp, #0
 800290a:	6078      	str	r0, [r7, #4]
 800290c:	460b      	mov	r3, r1
 800290e:	807b      	strh	r3, [r7, #2]
 8002910:	4613      	mov	r3, r2
 8002912:	707b      	strb	r3, [r7, #1]
 8002914:	787b      	ldrb	r3, [r7, #1]
 8002916:	2b00      	cmp	r3, #0
 8002918:	d003      	beq.n	8002922 <HAL_GPIO_WritePin+0x1e>
 800291a:	887a      	ldrh	r2, [r7, #2]
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	619a      	str	r2, [r3, #24]
 8002920:	e003      	b.n	800292a <HAL_GPIO_WritePin+0x26>
 8002922:	887b      	ldrh	r3, [r7, #2]
 8002924:	041a      	lsls	r2, r3, #16
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	619a      	str	r2, [r3, #24]
 800292a:	bf00      	nop
 800292c:	370c      	adds	r7, #12
 800292e:	46bd      	mov	sp, r7
 8002930:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002934:	4770      	bx	lr
	...

08002938 <HAL_RCC_OscConfig>:
 8002938:	b580      	push	{r7, lr}
 800293a:	b086      	sub	sp, #24
 800293c:	af00      	add	r7, sp, #0
 800293e:	6078      	str	r0, [r7, #4]
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	2b00      	cmp	r3, #0
 8002944:	d101      	bne.n	800294a <HAL_RCC_OscConfig+0x12>
 8002946:	2301      	movs	r3, #1
 8002948:	e267      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	f003 0301 	and.w	r3, r3, #1
 8002952:	2b00      	cmp	r3, #0
 8002954:	d075      	beq.n	8002a42 <HAL_RCC_OscConfig+0x10a>
 8002956:	4b88      	ldr	r3, [pc, #544]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002958:	689b      	ldr	r3, [r3, #8]
 800295a:	f003 030c 	and.w	r3, r3, #12
 800295e:	2b04      	cmp	r3, #4
 8002960:	d00c      	beq.n	800297c <HAL_RCC_OscConfig+0x44>
 8002962:	4b85      	ldr	r3, [pc, #532]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002964:	689b      	ldr	r3, [r3, #8]
 8002966:	f003 030c 	and.w	r3, r3, #12
 800296a:	2b08      	cmp	r3, #8
 800296c:	d112      	bne.n	8002994 <HAL_RCC_OscConfig+0x5c>
 800296e:	4b82      	ldr	r3, [pc, #520]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002970:	685b      	ldr	r3, [r3, #4]
 8002972:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002976:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800297a:	d10b      	bne.n	8002994 <HAL_RCC_OscConfig+0x5c>
 800297c:	4b7e      	ldr	r3, [pc, #504]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002984:	2b00      	cmp	r3, #0
 8002986:	d05b      	beq.n	8002a40 <HAL_RCC_OscConfig+0x108>
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	685b      	ldr	r3, [r3, #4]
 800298c:	2b00      	cmp	r3, #0
 800298e:	d157      	bne.n	8002a40 <HAL_RCC_OscConfig+0x108>
 8002990:	2301      	movs	r3, #1
 8002992:	e242      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	685b      	ldr	r3, [r3, #4]
 8002998:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800299c:	d106      	bne.n	80029ac <HAL_RCC_OscConfig+0x74>
 800299e:	4b76      	ldr	r3, [pc, #472]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	4a75      	ldr	r2, [pc, #468]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029a4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80029a8:	6013      	str	r3, [r2, #0]
 80029aa:	e01d      	b.n	80029e8 <HAL_RCC_OscConfig+0xb0>
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	685b      	ldr	r3, [r3, #4]
 80029b0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80029b4:	d10c      	bne.n	80029d0 <HAL_RCC_OscConfig+0x98>
 80029b6:	4b70      	ldr	r3, [pc, #448]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	4a6f      	ldr	r2, [pc, #444]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029bc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80029c0:	6013      	str	r3, [r2, #0]
 80029c2:	4b6d      	ldr	r3, [pc, #436]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	4a6c      	ldr	r2, [pc, #432]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029c8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80029cc:	6013      	str	r3, [r2, #0]
 80029ce:	e00b      	b.n	80029e8 <HAL_RCC_OscConfig+0xb0>
 80029d0:	4b69      	ldr	r3, [pc, #420]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	4a68      	ldr	r2, [pc, #416]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029d6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80029da:	6013      	str	r3, [r2, #0]
 80029dc:	4b66      	ldr	r3, [pc, #408]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	4a65      	ldr	r2, [pc, #404]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 80029e2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80029e6:	6013      	str	r3, [r2, #0]
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	685b      	ldr	r3, [r3, #4]
 80029ec:	2b00      	cmp	r3, #0
 80029ee:	d013      	beq.n	8002a18 <HAL_RCC_OscConfig+0xe0>
 80029f0:	f7ff faa0 	bl	8001f34 <HAL_GetTick>
 80029f4:	6138      	str	r0, [r7, #16]
 80029f6:	e008      	b.n	8002a0a <HAL_RCC_OscConfig+0xd2>
 80029f8:	f7ff fa9c 	bl	8001f34 <HAL_GetTick>
 80029fc:	4602      	mov	r2, r0
 80029fe:	693b      	ldr	r3, [r7, #16]
 8002a00:	1ad3      	subs	r3, r2, r3
 8002a02:	2b64      	cmp	r3, #100	@ 0x64
 8002a04:	d901      	bls.n	8002a0a <HAL_RCC_OscConfig+0xd2>
 8002a06:	2303      	movs	r3, #3
 8002a08:	e207      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002a0a:	4b5b      	ldr	r3, [pc, #364]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002a0c:	681b      	ldr	r3, [r3, #0]
 8002a0e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a12:	2b00      	cmp	r3, #0
 8002a14:	d0f0      	beq.n	80029f8 <HAL_RCC_OscConfig+0xc0>
 8002a16:	e014      	b.n	8002a42 <HAL_RCC_OscConfig+0x10a>
 8002a18:	f7ff fa8c 	bl	8001f34 <HAL_GetTick>
 8002a1c:	6138      	str	r0, [r7, #16]
 8002a1e:	e008      	b.n	8002a32 <HAL_RCC_OscConfig+0xfa>
 8002a20:	f7ff fa88 	bl	8001f34 <HAL_GetTick>
 8002a24:	4602      	mov	r2, r0
 8002a26:	693b      	ldr	r3, [r7, #16]
 8002a28:	1ad3      	subs	r3, r2, r3
 8002a2a:	2b64      	cmp	r3, #100	@ 0x64
 8002a2c:	d901      	bls.n	8002a32 <HAL_RCC_OscConfig+0xfa>
 8002a2e:	2303      	movs	r3, #3
 8002a30:	e1f3      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002a32:	4b51      	ldr	r3, [pc, #324]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002a34:	681b      	ldr	r3, [r3, #0]
 8002a36:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	d1f0      	bne.n	8002a20 <HAL_RCC_OscConfig+0xe8>
 8002a3e:	e000      	b.n	8002a42 <HAL_RCC_OscConfig+0x10a>
 8002a40:	bf00      	nop
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	f003 0302 	and.w	r3, r3, #2
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d063      	beq.n	8002b16 <HAL_RCC_OscConfig+0x1de>
 8002a4e:	4b4a      	ldr	r3, [pc, #296]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002a50:	689b      	ldr	r3, [r3, #8]
 8002a52:	f003 030c 	and.w	r3, r3, #12
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	d00b      	beq.n	8002a72 <HAL_RCC_OscConfig+0x13a>
 8002a5a:	4b47      	ldr	r3, [pc, #284]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002a5c:	689b      	ldr	r3, [r3, #8]
 8002a5e:	f003 030c 	and.w	r3, r3, #12
 8002a62:	2b08      	cmp	r3, #8
 8002a64:	d11c      	bne.n	8002aa0 <HAL_RCC_OscConfig+0x168>
 8002a66:	4b44      	ldr	r3, [pc, #272]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002a68:	685b      	ldr	r3, [r3, #4]
 8002a6a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	d116      	bne.n	8002aa0 <HAL_RCC_OscConfig+0x168>
 8002a72:	4b41      	ldr	r3, [pc, #260]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	f003 0302 	and.w	r3, r3, #2
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d005      	beq.n	8002a8a <HAL_RCC_OscConfig+0x152>
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	68db      	ldr	r3, [r3, #12]
 8002a82:	2b01      	cmp	r3, #1
 8002a84:	d001      	beq.n	8002a8a <HAL_RCC_OscConfig+0x152>
 8002a86:	2301      	movs	r3, #1
 8002a88:	e1c7      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002a8a:	4b3b      	ldr	r3, [pc, #236]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002a8c:	681b      	ldr	r3, [r3, #0]
 8002a8e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	691b      	ldr	r3, [r3, #16]
 8002a96:	00db      	lsls	r3, r3, #3
 8002a98:	4937      	ldr	r1, [pc, #220]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002a9a:	4313      	orrs	r3, r2
 8002a9c:	600b      	str	r3, [r1, #0]
 8002a9e:	e03a      	b.n	8002b16 <HAL_RCC_OscConfig+0x1de>
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	68db      	ldr	r3, [r3, #12]
 8002aa4:	2b00      	cmp	r3, #0
 8002aa6:	d020      	beq.n	8002aea <HAL_RCC_OscConfig+0x1b2>
 8002aa8:	4b34      	ldr	r3, [pc, #208]	@ (8002b7c <HAL_RCC_OscConfig+0x244>)
 8002aaa:	2201      	movs	r2, #1
 8002aac:	601a      	str	r2, [r3, #0]
 8002aae:	f7ff fa41 	bl	8001f34 <HAL_GetTick>
 8002ab2:	6138      	str	r0, [r7, #16]
 8002ab4:	e008      	b.n	8002ac8 <HAL_RCC_OscConfig+0x190>
 8002ab6:	f7ff fa3d 	bl	8001f34 <HAL_GetTick>
 8002aba:	4602      	mov	r2, r0
 8002abc:	693b      	ldr	r3, [r7, #16]
 8002abe:	1ad3      	subs	r3, r2, r3
 8002ac0:	2b02      	cmp	r3, #2
 8002ac2:	d901      	bls.n	8002ac8 <HAL_RCC_OscConfig+0x190>
 8002ac4:	2303      	movs	r3, #3
 8002ac6:	e1a8      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002ac8:	4b2b      	ldr	r3, [pc, #172]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	f003 0302 	and.w	r3, r3, #2
 8002ad0:	2b00      	cmp	r3, #0
 8002ad2:	d0f0      	beq.n	8002ab6 <HAL_RCC_OscConfig+0x17e>
 8002ad4:	4b28      	ldr	r3, [pc, #160]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	691b      	ldr	r3, [r3, #16]
 8002ae0:	00db      	lsls	r3, r3, #3
 8002ae2:	4925      	ldr	r1, [pc, #148]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002ae4:	4313      	orrs	r3, r2
 8002ae6:	600b      	str	r3, [r1, #0]
 8002ae8:	e015      	b.n	8002b16 <HAL_RCC_OscConfig+0x1de>
 8002aea:	4b24      	ldr	r3, [pc, #144]	@ (8002b7c <HAL_RCC_OscConfig+0x244>)
 8002aec:	2200      	movs	r2, #0
 8002aee:	601a      	str	r2, [r3, #0]
 8002af0:	f7ff fa20 	bl	8001f34 <HAL_GetTick>
 8002af4:	6138      	str	r0, [r7, #16]
 8002af6:	e008      	b.n	8002b0a <HAL_RCC_OscConfig+0x1d2>
 8002af8:	f7ff fa1c 	bl	8001f34 <HAL_GetTick>
 8002afc:	4602      	mov	r2, r0
 8002afe:	693b      	ldr	r3, [r7, #16]
 8002b00:	1ad3      	subs	r3, r2, r3
 8002b02:	2b02      	cmp	r3, #2
 8002b04:	d901      	bls.n	8002b0a <HAL_RCC_OscConfig+0x1d2>
 8002b06:	2303      	movs	r3, #3
 8002b08:	e187      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002b0a:	4b1b      	ldr	r3, [pc, #108]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	f003 0302 	and.w	r3, r3, #2
 8002b12:	2b00      	cmp	r3, #0
 8002b14:	d1f0      	bne.n	8002af8 <HAL_RCC_OscConfig+0x1c0>
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	681b      	ldr	r3, [r3, #0]
 8002b1a:	f003 0308 	and.w	r3, r3, #8
 8002b1e:	2b00      	cmp	r3, #0
 8002b20:	d036      	beq.n	8002b90 <HAL_RCC_OscConfig+0x258>
 8002b22:	687b      	ldr	r3, [r7, #4]
 8002b24:	695b      	ldr	r3, [r3, #20]
 8002b26:	2b00      	cmp	r3, #0
 8002b28:	d016      	beq.n	8002b58 <HAL_RCC_OscConfig+0x220>
 8002b2a:	4b15      	ldr	r3, [pc, #84]	@ (8002b80 <HAL_RCC_OscConfig+0x248>)
 8002b2c:	2201      	movs	r2, #1
 8002b2e:	601a      	str	r2, [r3, #0]
 8002b30:	f7ff fa00 	bl	8001f34 <HAL_GetTick>
 8002b34:	6138      	str	r0, [r7, #16]
 8002b36:	e008      	b.n	8002b4a <HAL_RCC_OscConfig+0x212>
 8002b38:	f7ff f9fc 	bl	8001f34 <HAL_GetTick>
 8002b3c:	4602      	mov	r2, r0
 8002b3e:	693b      	ldr	r3, [r7, #16]
 8002b40:	1ad3      	subs	r3, r2, r3
 8002b42:	2b02      	cmp	r3, #2
 8002b44:	d901      	bls.n	8002b4a <HAL_RCC_OscConfig+0x212>
 8002b46:	2303      	movs	r3, #3
 8002b48:	e167      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002b4a:	4b0b      	ldr	r3, [pc, #44]	@ (8002b78 <HAL_RCC_OscConfig+0x240>)
 8002b4c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002b4e:	f003 0302 	and.w	r3, r3, #2
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	d0f0      	beq.n	8002b38 <HAL_RCC_OscConfig+0x200>
 8002b56:	e01b      	b.n	8002b90 <HAL_RCC_OscConfig+0x258>
 8002b58:	4b09      	ldr	r3, [pc, #36]	@ (8002b80 <HAL_RCC_OscConfig+0x248>)
 8002b5a:	2200      	movs	r2, #0
 8002b5c:	601a      	str	r2, [r3, #0]
 8002b5e:	f7ff f9e9 	bl	8001f34 <HAL_GetTick>
 8002b62:	6138      	str	r0, [r7, #16]
 8002b64:	e00e      	b.n	8002b84 <HAL_RCC_OscConfig+0x24c>
 8002b66:	f7ff f9e5 	bl	8001f34 <HAL_GetTick>
 8002b6a:	4602      	mov	r2, r0
 8002b6c:	693b      	ldr	r3, [r7, #16]
 8002b6e:	1ad3      	subs	r3, r2, r3
 8002b70:	2b02      	cmp	r3, #2
 8002b72:	d907      	bls.n	8002b84 <HAL_RCC_OscConfig+0x24c>
 8002b74:	2303      	movs	r3, #3
 8002b76:	e150      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002b78:	40023800 	.word	0x40023800
 8002b7c:	42470000 	.word	0x42470000
 8002b80:	42470e80 	.word	0x42470e80
 8002b84:	4b88      	ldr	r3, [pc, #544]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002b86:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002b88:	f003 0302 	and.w	r3, r3, #2
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	d1ea      	bne.n	8002b66 <HAL_RCC_OscConfig+0x22e>
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	f003 0304 	and.w	r3, r3, #4
 8002b98:	2b00      	cmp	r3, #0
 8002b9a:	f000 8097 	beq.w	8002ccc <HAL_RCC_OscConfig+0x394>
 8002b9e:	2300      	movs	r3, #0
 8002ba0:	75fb      	strb	r3, [r7, #23]
 8002ba2:	4b81      	ldr	r3, [pc, #516]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002ba4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ba6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d10f      	bne.n	8002bce <HAL_RCC_OscConfig+0x296>
 8002bae:	2300      	movs	r3, #0
 8002bb0:	60bb      	str	r3, [r7, #8]
 8002bb2:	4b7d      	ldr	r3, [pc, #500]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002bb4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bb6:	4a7c      	ldr	r2, [pc, #496]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002bb8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002bbc:	6413      	str	r3, [r2, #64]	@ 0x40
 8002bbe:	4b7a      	ldr	r3, [pc, #488]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002bc0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bc2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002bc6:	60bb      	str	r3, [r7, #8]
 8002bc8:	68bb      	ldr	r3, [r7, #8]
 8002bca:	2301      	movs	r3, #1
 8002bcc:	75fb      	strb	r3, [r7, #23]
 8002bce:	4b77      	ldr	r3, [pc, #476]	@ (8002dac <HAL_RCC_OscConfig+0x474>)
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002bd6:	2b00      	cmp	r3, #0
 8002bd8:	d118      	bne.n	8002c0c <HAL_RCC_OscConfig+0x2d4>
 8002bda:	4b74      	ldr	r3, [pc, #464]	@ (8002dac <HAL_RCC_OscConfig+0x474>)
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	4a73      	ldr	r2, [pc, #460]	@ (8002dac <HAL_RCC_OscConfig+0x474>)
 8002be0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002be4:	6013      	str	r3, [r2, #0]
 8002be6:	f7ff f9a5 	bl	8001f34 <HAL_GetTick>
 8002bea:	6138      	str	r0, [r7, #16]
 8002bec:	e008      	b.n	8002c00 <HAL_RCC_OscConfig+0x2c8>
 8002bee:	f7ff f9a1 	bl	8001f34 <HAL_GetTick>
 8002bf2:	4602      	mov	r2, r0
 8002bf4:	693b      	ldr	r3, [r7, #16]
 8002bf6:	1ad3      	subs	r3, r2, r3
 8002bf8:	2b02      	cmp	r3, #2
 8002bfa:	d901      	bls.n	8002c00 <HAL_RCC_OscConfig+0x2c8>
 8002bfc:	2303      	movs	r3, #3
 8002bfe:	e10c      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002c00:	4b6a      	ldr	r3, [pc, #424]	@ (8002dac <HAL_RCC_OscConfig+0x474>)
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002c08:	2b00      	cmp	r3, #0
 8002c0a:	d0f0      	beq.n	8002bee <HAL_RCC_OscConfig+0x2b6>
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	689b      	ldr	r3, [r3, #8]
 8002c10:	2b01      	cmp	r3, #1
 8002c12:	d106      	bne.n	8002c22 <HAL_RCC_OscConfig+0x2ea>
 8002c14:	4b64      	ldr	r3, [pc, #400]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c16:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002c18:	4a63      	ldr	r2, [pc, #396]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c1a:	f043 0301 	orr.w	r3, r3, #1
 8002c1e:	6713      	str	r3, [r2, #112]	@ 0x70
 8002c20:	e01c      	b.n	8002c5c <HAL_RCC_OscConfig+0x324>
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	689b      	ldr	r3, [r3, #8]
 8002c26:	2b05      	cmp	r3, #5
 8002c28:	d10c      	bne.n	8002c44 <HAL_RCC_OscConfig+0x30c>
 8002c2a:	4b5f      	ldr	r3, [pc, #380]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c2c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002c2e:	4a5e      	ldr	r2, [pc, #376]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c30:	f043 0304 	orr.w	r3, r3, #4
 8002c34:	6713      	str	r3, [r2, #112]	@ 0x70
 8002c36:	4b5c      	ldr	r3, [pc, #368]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c38:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002c3a:	4a5b      	ldr	r2, [pc, #364]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c3c:	f043 0301 	orr.w	r3, r3, #1
 8002c40:	6713      	str	r3, [r2, #112]	@ 0x70
 8002c42:	e00b      	b.n	8002c5c <HAL_RCC_OscConfig+0x324>
 8002c44:	4b58      	ldr	r3, [pc, #352]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c46:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002c48:	4a57      	ldr	r2, [pc, #348]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c4a:	f023 0301 	bic.w	r3, r3, #1
 8002c4e:	6713      	str	r3, [r2, #112]	@ 0x70
 8002c50:	4b55      	ldr	r3, [pc, #340]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c52:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002c54:	4a54      	ldr	r2, [pc, #336]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c56:	f023 0304 	bic.w	r3, r3, #4
 8002c5a:	6713      	str	r3, [r2, #112]	@ 0x70
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	689b      	ldr	r3, [r3, #8]
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	d015      	beq.n	8002c90 <HAL_RCC_OscConfig+0x358>
 8002c64:	f7ff f966 	bl	8001f34 <HAL_GetTick>
 8002c68:	6138      	str	r0, [r7, #16]
 8002c6a:	e00a      	b.n	8002c82 <HAL_RCC_OscConfig+0x34a>
 8002c6c:	f7ff f962 	bl	8001f34 <HAL_GetTick>
 8002c70:	4602      	mov	r2, r0
 8002c72:	693b      	ldr	r3, [r7, #16]
 8002c74:	1ad3      	subs	r3, r2, r3
 8002c76:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002c7a:	4293      	cmp	r3, r2
 8002c7c:	d901      	bls.n	8002c82 <HAL_RCC_OscConfig+0x34a>
 8002c7e:	2303      	movs	r3, #3
 8002c80:	e0cb      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002c82:	4b49      	ldr	r3, [pc, #292]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002c84:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002c86:	f003 0302 	and.w	r3, r3, #2
 8002c8a:	2b00      	cmp	r3, #0
 8002c8c:	d0ee      	beq.n	8002c6c <HAL_RCC_OscConfig+0x334>
 8002c8e:	e014      	b.n	8002cba <HAL_RCC_OscConfig+0x382>
 8002c90:	f7ff f950 	bl	8001f34 <HAL_GetTick>
 8002c94:	6138      	str	r0, [r7, #16]
 8002c96:	e00a      	b.n	8002cae <HAL_RCC_OscConfig+0x376>
 8002c98:	f7ff f94c 	bl	8001f34 <HAL_GetTick>
 8002c9c:	4602      	mov	r2, r0
 8002c9e:	693b      	ldr	r3, [r7, #16]
 8002ca0:	1ad3      	subs	r3, r2, r3
 8002ca2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002ca6:	4293      	cmp	r3, r2
 8002ca8:	d901      	bls.n	8002cae <HAL_RCC_OscConfig+0x376>
 8002caa:	2303      	movs	r3, #3
 8002cac:	e0b5      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002cae:	4b3e      	ldr	r3, [pc, #248]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002cb0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002cb2:	f003 0302 	and.w	r3, r3, #2
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d1ee      	bne.n	8002c98 <HAL_RCC_OscConfig+0x360>
 8002cba:	7dfb      	ldrb	r3, [r7, #23]
 8002cbc:	2b01      	cmp	r3, #1
 8002cbe:	d105      	bne.n	8002ccc <HAL_RCC_OscConfig+0x394>
 8002cc0:	4b39      	ldr	r3, [pc, #228]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002cc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cc4:	4a38      	ldr	r2, [pc, #224]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002cc6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002cca:	6413      	str	r3, [r2, #64]	@ 0x40
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	699b      	ldr	r3, [r3, #24]
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	f000 80a1 	beq.w	8002e18 <HAL_RCC_OscConfig+0x4e0>
 8002cd6:	4b34      	ldr	r3, [pc, #208]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002cd8:	689b      	ldr	r3, [r3, #8]
 8002cda:	f003 030c 	and.w	r3, r3, #12
 8002cde:	2b08      	cmp	r3, #8
 8002ce0:	d05c      	beq.n	8002d9c <HAL_RCC_OscConfig+0x464>
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	699b      	ldr	r3, [r3, #24]
 8002ce6:	2b02      	cmp	r3, #2
 8002ce8:	d141      	bne.n	8002d6e <HAL_RCC_OscConfig+0x436>
 8002cea:	4b31      	ldr	r3, [pc, #196]	@ (8002db0 <HAL_RCC_OscConfig+0x478>)
 8002cec:	2200      	movs	r2, #0
 8002cee:	601a      	str	r2, [r3, #0]
 8002cf0:	f7ff f920 	bl	8001f34 <HAL_GetTick>
 8002cf4:	6138      	str	r0, [r7, #16]
 8002cf6:	e008      	b.n	8002d0a <HAL_RCC_OscConfig+0x3d2>
 8002cf8:	f7ff f91c 	bl	8001f34 <HAL_GetTick>
 8002cfc:	4602      	mov	r2, r0
 8002cfe:	693b      	ldr	r3, [r7, #16]
 8002d00:	1ad3      	subs	r3, r2, r3
 8002d02:	2b02      	cmp	r3, #2
 8002d04:	d901      	bls.n	8002d0a <HAL_RCC_OscConfig+0x3d2>
 8002d06:	2303      	movs	r3, #3
 8002d08:	e087      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002d0a:	4b27      	ldr	r3, [pc, #156]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d1f0      	bne.n	8002cf8 <HAL_RCC_OscConfig+0x3c0>
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	69da      	ldr	r2, [r3, #28]
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	6a1b      	ldr	r3, [r3, #32]
 8002d1e:	431a      	orrs	r2, r3
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d24:	019b      	lsls	r3, r3, #6
 8002d26:	431a      	orrs	r2, r3
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d2c:	085b      	lsrs	r3, r3, #1
 8002d2e:	3b01      	subs	r3, #1
 8002d30:	041b      	lsls	r3, r3, #16
 8002d32:	431a      	orrs	r2, r3
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002d38:	061b      	lsls	r3, r3, #24
 8002d3a:	491b      	ldr	r1, [pc, #108]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002d3c:	4313      	orrs	r3, r2
 8002d3e:	604b      	str	r3, [r1, #4]
 8002d40:	4b1b      	ldr	r3, [pc, #108]	@ (8002db0 <HAL_RCC_OscConfig+0x478>)
 8002d42:	2201      	movs	r2, #1
 8002d44:	601a      	str	r2, [r3, #0]
 8002d46:	f7ff f8f5 	bl	8001f34 <HAL_GetTick>
 8002d4a:	6138      	str	r0, [r7, #16]
 8002d4c:	e008      	b.n	8002d60 <HAL_RCC_OscConfig+0x428>
 8002d4e:	f7ff f8f1 	bl	8001f34 <HAL_GetTick>
 8002d52:	4602      	mov	r2, r0
 8002d54:	693b      	ldr	r3, [r7, #16]
 8002d56:	1ad3      	subs	r3, r2, r3
 8002d58:	2b02      	cmp	r3, #2
 8002d5a:	d901      	bls.n	8002d60 <HAL_RCC_OscConfig+0x428>
 8002d5c:	2303      	movs	r3, #3
 8002d5e:	e05c      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002d60:	4b11      	ldr	r3, [pc, #68]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	d0f0      	beq.n	8002d4e <HAL_RCC_OscConfig+0x416>
 8002d6c:	e054      	b.n	8002e18 <HAL_RCC_OscConfig+0x4e0>
 8002d6e:	4b10      	ldr	r3, [pc, #64]	@ (8002db0 <HAL_RCC_OscConfig+0x478>)
 8002d70:	2200      	movs	r2, #0
 8002d72:	601a      	str	r2, [r3, #0]
 8002d74:	f7ff f8de 	bl	8001f34 <HAL_GetTick>
 8002d78:	6138      	str	r0, [r7, #16]
 8002d7a:	e008      	b.n	8002d8e <HAL_RCC_OscConfig+0x456>
 8002d7c:	f7ff f8da 	bl	8001f34 <HAL_GetTick>
 8002d80:	4602      	mov	r2, r0
 8002d82:	693b      	ldr	r3, [r7, #16]
 8002d84:	1ad3      	subs	r3, r2, r3
 8002d86:	2b02      	cmp	r3, #2
 8002d88:	d901      	bls.n	8002d8e <HAL_RCC_OscConfig+0x456>
 8002d8a:	2303      	movs	r3, #3
 8002d8c:	e045      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002d8e:	4b06      	ldr	r3, [pc, #24]	@ (8002da8 <HAL_RCC_OscConfig+0x470>)
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d96:	2b00      	cmp	r3, #0
 8002d98:	d1f0      	bne.n	8002d7c <HAL_RCC_OscConfig+0x444>
 8002d9a:	e03d      	b.n	8002e18 <HAL_RCC_OscConfig+0x4e0>
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	699b      	ldr	r3, [r3, #24]
 8002da0:	2b01      	cmp	r3, #1
 8002da2:	d107      	bne.n	8002db4 <HAL_RCC_OscConfig+0x47c>
 8002da4:	2301      	movs	r3, #1
 8002da6:	e038      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002da8:	40023800 	.word	0x40023800
 8002dac:	40007000 	.word	0x40007000
 8002db0:	42470060 	.word	0x42470060
 8002db4:	4b1b      	ldr	r3, [pc, #108]	@ (8002e24 <HAL_RCC_OscConfig+0x4ec>)
 8002db6:	685b      	ldr	r3, [r3, #4]
 8002db8:	60fb      	str	r3, [r7, #12]
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	699b      	ldr	r3, [r3, #24]
 8002dbe:	2b01      	cmp	r3, #1
 8002dc0:	d028      	beq.n	8002e14 <HAL_RCC_OscConfig+0x4dc>
 8002dc2:	68fb      	ldr	r3, [r7, #12]
 8002dc4:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	69db      	ldr	r3, [r3, #28]
 8002dcc:	429a      	cmp	r2, r3
 8002dce:	d121      	bne.n	8002e14 <HAL_RCC_OscConfig+0x4dc>
 8002dd0:	68fb      	ldr	r3, [r7, #12]
 8002dd2:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	6a1b      	ldr	r3, [r3, #32]
 8002dda:	429a      	cmp	r2, r3
 8002ddc:	d11a      	bne.n	8002e14 <HAL_RCC_OscConfig+0x4dc>
 8002dde:	68fa      	ldr	r2, [r7, #12]
 8002de0:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8002de4:	4013      	ands	r3, r2
 8002de6:	687a      	ldr	r2, [r7, #4]
 8002de8:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8002dea:	0192      	lsls	r2, r2, #6
 8002dec:	4293      	cmp	r3, r2
 8002dee:	d111      	bne.n	8002e14 <HAL_RCC_OscConfig+0x4dc>
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002dfa:	085b      	lsrs	r3, r3, #1
 8002dfc:	3b01      	subs	r3, #1
 8002dfe:	041b      	lsls	r3, r3, #16
 8002e00:	429a      	cmp	r2, r3
 8002e02:	d107      	bne.n	8002e14 <HAL_RCC_OscConfig+0x4dc>
 8002e04:	68fb      	ldr	r3, [r7, #12]
 8002e06:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e0e:	061b      	lsls	r3, r3, #24
 8002e10:	429a      	cmp	r2, r3
 8002e12:	d001      	beq.n	8002e18 <HAL_RCC_OscConfig+0x4e0>
 8002e14:	2301      	movs	r3, #1
 8002e16:	e000      	b.n	8002e1a <HAL_RCC_OscConfig+0x4e2>
 8002e18:	2300      	movs	r3, #0
 8002e1a:	4618      	mov	r0, r3
 8002e1c:	3718      	adds	r7, #24
 8002e1e:	46bd      	mov	sp, r7
 8002e20:	bd80      	pop	{r7, pc}
 8002e22:	bf00      	nop
 8002e24:	40023800 	.word	0x40023800

08002e28 <HAL_RCC_ClockConfig>:
 8002e28:	b580      	push	{r7, lr}
 8002e2a:	b084      	sub	sp, #16
 8002e2c:	af00      	add	r7, sp, #0
 8002e2e:	6078      	str	r0, [r7, #4]
 8002e30:	6039      	str	r1, [r7, #0]
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	2b00      	cmp	r3, #0
 8002e36:	d101      	bne.n	8002e3c <HAL_RCC_ClockConfig+0x14>
 8002e38:	2301      	movs	r3, #1
 8002e3a:	e0cc      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1ae>
 8002e3c:	4b68      	ldr	r3, [pc, #416]	@ (8002fe0 <HAL_RCC_ClockConfig+0x1b8>)
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	f003 0307 	and.w	r3, r3, #7
 8002e44:	683a      	ldr	r2, [r7, #0]
 8002e46:	429a      	cmp	r2, r3
 8002e48:	d90c      	bls.n	8002e64 <HAL_RCC_ClockConfig+0x3c>
 8002e4a:	4b65      	ldr	r3, [pc, #404]	@ (8002fe0 <HAL_RCC_ClockConfig+0x1b8>)
 8002e4c:	683a      	ldr	r2, [r7, #0]
 8002e4e:	b2d2      	uxtb	r2, r2
 8002e50:	701a      	strb	r2, [r3, #0]
 8002e52:	4b63      	ldr	r3, [pc, #396]	@ (8002fe0 <HAL_RCC_ClockConfig+0x1b8>)
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	f003 0307 	and.w	r3, r3, #7
 8002e5a:	683a      	ldr	r2, [r7, #0]
 8002e5c:	429a      	cmp	r2, r3
 8002e5e:	d001      	beq.n	8002e64 <HAL_RCC_ClockConfig+0x3c>
 8002e60:	2301      	movs	r3, #1
 8002e62:	e0b8      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1ae>
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	f003 0302 	and.w	r3, r3, #2
 8002e6c:	2b00      	cmp	r3, #0
 8002e6e:	d020      	beq.n	8002eb2 <HAL_RCC_ClockConfig+0x8a>
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	681b      	ldr	r3, [r3, #0]
 8002e74:	f003 0304 	and.w	r3, r3, #4
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	d005      	beq.n	8002e88 <HAL_RCC_ClockConfig+0x60>
 8002e7c:	4b59      	ldr	r3, [pc, #356]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002e7e:	689b      	ldr	r3, [r3, #8]
 8002e80:	4a58      	ldr	r2, [pc, #352]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002e82:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002e86:	6093      	str	r3, [r2, #8]
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	f003 0308 	and.w	r3, r3, #8
 8002e90:	2b00      	cmp	r3, #0
 8002e92:	d005      	beq.n	8002ea0 <HAL_RCC_ClockConfig+0x78>
 8002e94:	4b53      	ldr	r3, [pc, #332]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002e96:	689b      	ldr	r3, [r3, #8]
 8002e98:	4a52      	ldr	r2, [pc, #328]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002e9a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8002e9e:	6093      	str	r3, [r2, #8]
 8002ea0:	4b50      	ldr	r3, [pc, #320]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ea2:	689b      	ldr	r3, [r3, #8]
 8002ea4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	689b      	ldr	r3, [r3, #8]
 8002eac:	494d      	ldr	r1, [pc, #308]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002eae:	4313      	orrs	r3, r2
 8002eb0:	608b      	str	r3, [r1, #8]
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	f003 0301 	and.w	r3, r3, #1
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d044      	beq.n	8002f48 <HAL_RCC_ClockConfig+0x120>
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	685b      	ldr	r3, [r3, #4]
 8002ec2:	2b01      	cmp	r3, #1
 8002ec4:	d107      	bne.n	8002ed6 <HAL_RCC_ClockConfig+0xae>
 8002ec6:	4b47      	ldr	r3, [pc, #284]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d119      	bne.n	8002f06 <HAL_RCC_ClockConfig+0xde>
 8002ed2:	2301      	movs	r3, #1
 8002ed4:	e07f      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1ae>
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	685b      	ldr	r3, [r3, #4]
 8002eda:	2b02      	cmp	r3, #2
 8002edc:	d003      	beq.n	8002ee6 <HAL_RCC_ClockConfig+0xbe>
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	685b      	ldr	r3, [r3, #4]
 8002ee2:	2b03      	cmp	r3, #3
 8002ee4:	d107      	bne.n	8002ef6 <HAL_RCC_ClockConfig+0xce>
 8002ee6:	4b3f      	ldr	r3, [pc, #252]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	d109      	bne.n	8002f06 <HAL_RCC_ClockConfig+0xde>
 8002ef2:	2301      	movs	r3, #1
 8002ef4:	e06f      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1ae>
 8002ef6:	4b3b      	ldr	r3, [pc, #236]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	f003 0302 	and.w	r3, r3, #2
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	d101      	bne.n	8002f06 <HAL_RCC_ClockConfig+0xde>
 8002f02:	2301      	movs	r3, #1
 8002f04:	e067      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1ae>
 8002f06:	4b37      	ldr	r3, [pc, #220]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002f08:	689b      	ldr	r3, [r3, #8]
 8002f0a:	f023 0203 	bic.w	r2, r3, #3
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	685b      	ldr	r3, [r3, #4]
 8002f12:	4934      	ldr	r1, [pc, #208]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002f14:	4313      	orrs	r3, r2
 8002f16:	608b      	str	r3, [r1, #8]
 8002f18:	f7ff f80c 	bl	8001f34 <HAL_GetTick>
 8002f1c:	60f8      	str	r0, [r7, #12]
 8002f1e:	e00a      	b.n	8002f36 <HAL_RCC_ClockConfig+0x10e>
 8002f20:	f7ff f808 	bl	8001f34 <HAL_GetTick>
 8002f24:	4602      	mov	r2, r0
 8002f26:	68fb      	ldr	r3, [r7, #12]
 8002f28:	1ad3      	subs	r3, r2, r3
 8002f2a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f2e:	4293      	cmp	r3, r2
 8002f30:	d901      	bls.n	8002f36 <HAL_RCC_ClockConfig+0x10e>
 8002f32:	2303      	movs	r3, #3
 8002f34:	e04f      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1ae>
 8002f36:	4b2b      	ldr	r3, [pc, #172]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002f38:	689b      	ldr	r3, [r3, #8]
 8002f3a:	f003 020c 	and.w	r2, r3, #12
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	685b      	ldr	r3, [r3, #4]
 8002f42:	009b      	lsls	r3, r3, #2
 8002f44:	429a      	cmp	r2, r3
 8002f46:	d1eb      	bne.n	8002f20 <HAL_RCC_ClockConfig+0xf8>
 8002f48:	4b25      	ldr	r3, [pc, #148]	@ (8002fe0 <HAL_RCC_ClockConfig+0x1b8>)
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	f003 0307 	and.w	r3, r3, #7
 8002f50:	683a      	ldr	r2, [r7, #0]
 8002f52:	429a      	cmp	r2, r3
 8002f54:	d20c      	bcs.n	8002f70 <HAL_RCC_ClockConfig+0x148>
 8002f56:	4b22      	ldr	r3, [pc, #136]	@ (8002fe0 <HAL_RCC_ClockConfig+0x1b8>)
 8002f58:	683a      	ldr	r2, [r7, #0]
 8002f5a:	b2d2      	uxtb	r2, r2
 8002f5c:	701a      	strb	r2, [r3, #0]
 8002f5e:	4b20      	ldr	r3, [pc, #128]	@ (8002fe0 <HAL_RCC_ClockConfig+0x1b8>)
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	f003 0307 	and.w	r3, r3, #7
 8002f66:	683a      	ldr	r2, [r7, #0]
 8002f68:	429a      	cmp	r2, r3
 8002f6a:	d001      	beq.n	8002f70 <HAL_RCC_ClockConfig+0x148>
 8002f6c:	2301      	movs	r3, #1
 8002f6e:	e032      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1ae>
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	f003 0304 	and.w	r3, r3, #4
 8002f78:	2b00      	cmp	r3, #0
 8002f7a:	d008      	beq.n	8002f8e <HAL_RCC_ClockConfig+0x166>
 8002f7c:	4b19      	ldr	r3, [pc, #100]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002f7e:	689b      	ldr	r3, [r3, #8]
 8002f80:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	68db      	ldr	r3, [r3, #12]
 8002f88:	4916      	ldr	r1, [pc, #88]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002f8a:	4313      	orrs	r3, r2
 8002f8c:	608b      	str	r3, [r1, #8]
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	f003 0308 	and.w	r3, r3, #8
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	d009      	beq.n	8002fae <HAL_RCC_ClockConfig+0x186>
 8002f9a:	4b12      	ldr	r3, [pc, #72]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002f9c:	689b      	ldr	r3, [r3, #8]
 8002f9e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	691b      	ldr	r3, [r3, #16]
 8002fa6:	00db      	lsls	r3, r3, #3
 8002fa8:	490e      	ldr	r1, [pc, #56]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002faa:	4313      	orrs	r3, r2
 8002fac:	608b      	str	r3, [r1, #8]
 8002fae:	f000 f821 	bl	8002ff4 <HAL_RCC_GetSysClockFreq>
 8002fb2:	4602      	mov	r2, r0
 8002fb4:	4b0b      	ldr	r3, [pc, #44]	@ (8002fe4 <HAL_RCC_ClockConfig+0x1bc>)
 8002fb6:	689b      	ldr	r3, [r3, #8]
 8002fb8:	091b      	lsrs	r3, r3, #4
 8002fba:	f003 030f 	and.w	r3, r3, #15
 8002fbe:	490a      	ldr	r1, [pc, #40]	@ (8002fe8 <HAL_RCC_ClockConfig+0x1c0>)
 8002fc0:	5ccb      	ldrb	r3, [r1, r3]
 8002fc2:	fa22 f303 	lsr.w	r3, r2, r3
 8002fc6:	4a09      	ldr	r2, [pc, #36]	@ (8002fec <HAL_RCC_ClockConfig+0x1c4>)
 8002fc8:	6013      	str	r3, [r2, #0]
 8002fca:	4b09      	ldr	r3, [pc, #36]	@ (8002ff0 <HAL_RCC_ClockConfig+0x1c8>)
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	4618      	mov	r0, r3
 8002fd0:	f7fe ff6c 	bl	8001eac <HAL_InitTick>
 8002fd4:	2300      	movs	r3, #0
 8002fd6:	4618      	mov	r0, r3
 8002fd8:	3710      	adds	r7, #16
 8002fda:	46bd      	mov	sp, r7
 8002fdc:	bd80      	pop	{r7, pc}
 8002fde:	bf00      	nop
 8002fe0:	40023c00 	.word	0x40023c00
 8002fe4:	40023800 	.word	0x40023800
 8002fe8:	0800468c 	.word	0x0800468c
 8002fec:	20000000 	.word	0x20000000
 8002ff0:	20000004 	.word	0x20000004

08002ff4 <HAL_RCC_GetSysClockFreq>:
 8002ff4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002ff8:	b090      	sub	sp, #64	@ 0x40
 8002ffa:	af00      	add	r7, sp, #0
 8002ffc:	2300      	movs	r3, #0
 8002ffe:	637b      	str	r3, [r7, #52]	@ 0x34
 8003000:	2300      	movs	r3, #0
 8003002:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003004:	2300      	movs	r3, #0
 8003006:	633b      	str	r3, [r7, #48]	@ 0x30
 8003008:	2300      	movs	r3, #0
 800300a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800300c:	4b59      	ldr	r3, [pc, #356]	@ (8003174 <HAL_RCC_GetSysClockFreq+0x180>)
 800300e:	689b      	ldr	r3, [r3, #8]
 8003010:	f003 030c 	and.w	r3, r3, #12
 8003014:	2b08      	cmp	r3, #8
 8003016:	d00d      	beq.n	8003034 <HAL_RCC_GetSysClockFreq+0x40>
 8003018:	2b08      	cmp	r3, #8
 800301a:	f200 80a1 	bhi.w	8003160 <HAL_RCC_GetSysClockFreq+0x16c>
 800301e:	2b00      	cmp	r3, #0
 8003020:	d002      	beq.n	8003028 <HAL_RCC_GetSysClockFreq+0x34>
 8003022:	2b04      	cmp	r3, #4
 8003024:	d003      	beq.n	800302e <HAL_RCC_GetSysClockFreq+0x3a>
 8003026:	e09b      	b.n	8003160 <HAL_RCC_GetSysClockFreq+0x16c>
 8003028:	4b53      	ldr	r3, [pc, #332]	@ (8003178 <HAL_RCC_GetSysClockFreq+0x184>)
 800302a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800302c:	e09b      	b.n	8003166 <HAL_RCC_GetSysClockFreq+0x172>
 800302e:	4b53      	ldr	r3, [pc, #332]	@ (800317c <HAL_RCC_GetSysClockFreq+0x188>)
 8003030:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003032:	e098      	b.n	8003166 <HAL_RCC_GetSysClockFreq+0x172>
 8003034:	4b4f      	ldr	r3, [pc, #316]	@ (8003174 <HAL_RCC_GetSysClockFreq+0x180>)
 8003036:	685b      	ldr	r3, [r3, #4]
 8003038:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800303c:	637b      	str	r3, [r7, #52]	@ 0x34
 800303e:	4b4d      	ldr	r3, [pc, #308]	@ (8003174 <HAL_RCC_GetSysClockFreq+0x180>)
 8003040:	685b      	ldr	r3, [r3, #4]
 8003042:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003046:	2b00      	cmp	r3, #0
 8003048:	d028      	beq.n	800309c <HAL_RCC_GetSysClockFreq+0xa8>
 800304a:	4b4a      	ldr	r3, [pc, #296]	@ (8003174 <HAL_RCC_GetSysClockFreq+0x180>)
 800304c:	685b      	ldr	r3, [r3, #4]
 800304e:	099b      	lsrs	r3, r3, #6
 8003050:	2200      	movs	r2, #0
 8003052:	623b      	str	r3, [r7, #32]
 8003054:	627a      	str	r2, [r7, #36]	@ 0x24
 8003056:	6a3b      	ldr	r3, [r7, #32]
 8003058:	f3c3 0008 	ubfx	r0, r3, #0, #9
 800305c:	2100      	movs	r1, #0
 800305e:	4b47      	ldr	r3, [pc, #284]	@ (800317c <HAL_RCC_GetSysClockFreq+0x188>)
 8003060:	fb03 f201 	mul.w	r2, r3, r1
 8003064:	2300      	movs	r3, #0
 8003066:	fb00 f303 	mul.w	r3, r0, r3
 800306a:	4413      	add	r3, r2
 800306c:	4a43      	ldr	r2, [pc, #268]	@ (800317c <HAL_RCC_GetSysClockFreq+0x188>)
 800306e:	fba0 1202 	umull	r1, r2, r0, r2
 8003072:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003074:	460a      	mov	r2, r1
 8003076:	62ba      	str	r2, [r7, #40]	@ 0x28
 8003078:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800307a:	4413      	add	r3, r2
 800307c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800307e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003080:	2200      	movs	r2, #0
 8003082:	61bb      	str	r3, [r7, #24]
 8003084:	61fa      	str	r2, [r7, #28]
 8003086:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800308a:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800308e:	f7fd fbd9 	bl	8000844 <__aeabi_uldivmod>
 8003092:	4602      	mov	r2, r0
 8003094:	460b      	mov	r3, r1
 8003096:	4613      	mov	r3, r2
 8003098:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800309a:	e053      	b.n	8003144 <HAL_RCC_GetSysClockFreq+0x150>
 800309c:	4b35      	ldr	r3, [pc, #212]	@ (8003174 <HAL_RCC_GetSysClockFreq+0x180>)
 800309e:	685b      	ldr	r3, [r3, #4]
 80030a0:	099b      	lsrs	r3, r3, #6
 80030a2:	2200      	movs	r2, #0
 80030a4:	613b      	str	r3, [r7, #16]
 80030a6:	617a      	str	r2, [r7, #20]
 80030a8:	693b      	ldr	r3, [r7, #16]
 80030aa:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 80030ae:	f04f 0b00 	mov.w	fp, #0
 80030b2:	4652      	mov	r2, sl
 80030b4:	465b      	mov	r3, fp
 80030b6:	f04f 0000 	mov.w	r0, #0
 80030ba:	f04f 0100 	mov.w	r1, #0
 80030be:	0159      	lsls	r1, r3, #5
 80030c0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80030c4:	0150      	lsls	r0, r2, #5
 80030c6:	4602      	mov	r2, r0
 80030c8:	460b      	mov	r3, r1
 80030ca:	ebb2 080a 	subs.w	r8, r2, sl
 80030ce:	eb63 090b 	sbc.w	r9, r3, fp
 80030d2:	f04f 0200 	mov.w	r2, #0
 80030d6:	f04f 0300 	mov.w	r3, #0
 80030da:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80030de:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80030e2:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80030e6:	ebb2 0408 	subs.w	r4, r2, r8
 80030ea:	eb63 0509 	sbc.w	r5, r3, r9
 80030ee:	f04f 0200 	mov.w	r2, #0
 80030f2:	f04f 0300 	mov.w	r3, #0
 80030f6:	00eb      	lsls	r3, r5, #3
 80030f8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80030fc:	00e2      	lsls	r2, r4, #3
 80030fe:	4614      	mov	r4, r2
 8003100:	461d      	mov	r5, r3
 8003102:	eb14 030a 	adds.w	r3, r4, sl
 8003106:	603b      	str	r3, [r7, #0]
 8003108:	eb45 030b 	adc.w	r3, r5, fp
 800310c:	607b      	str	r3, [r7, #4]
 800310e:	f04f 0200 	mov.w	r2, #0
 8003112:	f04f 0300 	mov.w	r3, #0
 8003116:	e9d7 4500 	ldrd	r4, r5, [r7]
 800311a:	4629      	mov	r1, r5
 800311c:	028b      	lsls	r3, r1, #10
 800311e:	4621      	mov	r1, r4
 8003120:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003124:	4621      	mov	r1, r4
 8003126:	028a      	lsls	r2, r1, #10
 8003128:	4610      	mov	r0, r2
 800312a:	4619      	mov	r1, r3
 800312c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800312e:	2200      	movs	r2, #0
 8003130:	60bb      	str	r3, [r7, #8]
 8003132:	60fa      	str	r2, [r7, #12]
 8003134:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003138:	f7fd fb84 	bl	8000844 <__aeabi_uldivmod>
 800313c:	4602      	mov	r2, r0
 800313e:	460b      	mov	r3, r1
 8003140:	4613      	mov	r3, r2
 8003142:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003144:	4b0b      	ldr	r3, [pc, #44]	@ (8003174 <HAL_RCC_GetSysClockFreq+0x180>)
 8003146:	685b      	ldr	r3, [r3, #4]
 8003148:	0c1b      	lsrs	r3, r3, #16
 800314a:	f003 0303 	and.w	r3, r3, #3
 800314e:	3301      	adds	r3, #1
 8003150:	005b      	lsls	r3, r3, #1
 8003152:	633b      	str	r3, [r7, #48]	@ 0x30
 8003154:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8003156:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003158:	fbb2 f3f3 	udiv	r3, r2, r3
 800315c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800315e:	e002      	b.n	8003166 <HAL_RCC_GetSysClockFreq+0x172>
 8003160:	4b05      	ldr	r3, [pc, #20]	@ (8003178 <HAL_RCC_GetSysClockFreq+0x184>)
 8003162:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003164:	bf00      	nop
 8003166:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003168:	4618      	mov	r0, r3
 800316a:	3740      	adds	r7, #64	@ 0x40
 800316c:	46bd      	mov	sp, r7
 800316e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003172:	bf00      	nop
 8003174:	40023800 	.word	0x40023800
 8003178:	00f42400 	.word	0x00f42400
 800317c:	017d7840 	.word	0x017d7840

08003180 <HAL_RCC_GetHCLKFreq>:
 8003180:	b480      	push	{r7}
 8003182:	af00      	add	r7, sp, #0
 8003184:	4b03      	ldr	r3, [pc, #12]	@ (8003194 <HAL_RCC_GetHCLKFreq+0x14>)
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	4618      	mov	r0, r3
 800318a:	46bd      	mov	sp, r7
 800318c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003190:	4770      	bx	lr
 8003192:	bf00      	nop
 8003194:	20000000 	.word	0x20000000

08003198 <HAL_RCC_GetPCLK1Freq>:
 8003198:	b580      	push	{r7, lr}
 800319a:	af00      	add	r7, sp, #0
 800319c:	f7ff fff0 	bl	8003180 <HAL_RCC_GetHCLKFreq>
 80031a0:	4602      	mov	r2, r0
 80031a2:	4b05      	ldr	r3, [pc, #20]	@ (80031b8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80031a4:	689b      	ldr	r3, [r3, #8]
 80031a6:	0a9b      	lsrs	r3, r3, #10
 80031a8:	f003 0307 	and.w	r3, r3, #7
 80031ac:	4903      	ldr	r1, [pc, #12]	@ (80031bc <HAL_RCC_GetPCLK1Freq+0x24>)
 80031ae:	5ccb      	ldrb	r3, [r1, r3]
 80031b0:	fa22 f303 	lsr.w	r3, r2, r3
 80031b4:	4618      	mov	r0, r3
 80031b6:	bd80      	pop	{r7, pc}
 80031b8:	40023800 	.word	0x40023800
 80031bc:	0800469c 	.word	0x0800469c

080031c0 <HAL_RCC_GetPCLK2Freq>:
 80031c0:	b580      	push	{r7, lr}
 80031c2:	af00      	add	r7, sp, #0
 80031c4:	f7ff ffdc 	bl	8003180 <HAL_RCC_GetHCLKFreq>
 80031c8:	4602      	mov	r2, r0
 80031ca:	4b05      	ldr	r3, [pc, #20]	@ (80031e0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80031cc:	689b      	ldr	r3, [r3, #8]
 80031ce:	0b5b      	lsrs	r3, r3, #13
 80031d0:	f003 0307 	and.w	r3, r3, #7
 80031d4:	4903      	ldr	r1, [pc, #12]	@ (80031e4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80031d6:	5ccb      	ldrb	r3, [r1, r3]
 80031d8:	fa22 f303 	lsr.w	r3, r2, r3
 80031dc:	4618      	mov	r0, r3
 80031de:	bd80      	pop	{r7, pc}
 80031e0:	40023800 	.word	0x40023800
 80031e4:	0800469c 	.word	0x0800469c

080031e8 <HAL_UART_Init>:
 80031e8:	b580      	push	{r7, lr}
 80031ea:	b082      	sub	sp, #8
 80031ec:	af00      	add	r7, sp, #0
 80031ee:	6078      	str	r0, [r7, #4]
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d101      	bne.n	80031fa <HAL_UART_Init+0x12>
 80031f6:	2301      	movs	r3, #1
 80031f8:	e042      	b.n	8003280 <HAL_UART_Init+0x98>
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003200:	b2db      	uxtb	r3, r3
 8003202:	2b00      	cmp	r3, #0
 8003204:	d106      	bne.n	8003214 <HAL_UART_Init+0x2c>
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	2200      	movs	r2, #0
 800320a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800320e:	6878      	ldr	r0, [r7, #4]
 8003210:	f7fe fb68 	bl	80018e4 <HAL_UART_MspInit>
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	2224      	movs	r2, #36	@ 0x24
 8003218:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	681b      	ldr	r3, [r3, #0]
 8003220:	68da      	ldr	r2, [r3, #12]
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800322a:	60da      	str	r2, [r3, #12]
 800322c:	6878      	ldr	r0, [r7, #4]
 800322e:	f000 fa09 	bl	8003644 <UART_SetConfig>
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	691a      	ldr	r2, [r3, #16]
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003240:	611a      	str	r2, [r3, #16]
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	681b      	ldr	r3, [r3, #0]
 8003246:	695a      	ldr	r2, [r3, #20]
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003250:	615a      	str	r2, [r3, #20]
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	681b      	ldr	r3, [r3, #0]
 8003256:	68da      	ldr	r2, [r3, #12]
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003260:	60da      	str	r2, [r3, #12]
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	2200      	movs	r2, #0
 8003266:	645a      	str	r2, [r3, #68]	@ 0x44
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	2220      	movs	r2, #32
 800326c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	2220      	movs	r2, #32
 8003274:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	2200      	movs	r2, #0
 800327c:	635a      	str	r2, [r3, #52]	@ 0x34
 800327e:	2300      	movs	r3, #0
 8003280:	4618      	mov	r0, r3
 8003282:	3708      	adds	r7, #8
 8003284:	46bd      	mov	sp, r7
 8003286:	bd80      	pop	{r7, pc}

08003288 <HAL_UART_Transmit>:
 8003288:	b580      	push	{r7, lr}
 800328a:	b08a      	sub	sp, #40	@ 0x28
 800328c:	af02      	add	r7, sp, #8
 800328e:	60f8      	str	r0, [r7, #12]
 8003290:	60b9      	str	r1, [r7, #8]
 8003292:	603b      	str	r3, [r7, #0]
 8003294:	4613      	mov	r3, r2
 8003296:	80fb      	strh	r3, [r7, #6]
 8003298:	2300      	movs	r3, #0
 800329a:	617b      	str	r3, [r7, #20]
 800329c:	68fb      	ldr	r3, [r7, #12]
 800329e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80032a2:	b2db      	uxtb	r3, r3
 80032a4:	2b20      	cmp	r3, #32
 80032a6:	d175      	bne.n	8003394 <HAL_UART_Transmit+0x10c>
 80032a8:	68bb      	ldr	r3, [r7, #8]
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d002      	beq.n	80032b4 <HAL_UART_Transmit+0x2c>
 80032ae:	88fb      	ldrh	r3, [r7, #6]
 80032b0:	2b00      	cmp	r3, #0
 80032b2:	d101      	bne.n	80032b8 <HAL_UART_Transmit+0x30>
 80032b4:	2301      	movs	r3, #1
 80032b6:	e06e      	b.n	8003396 <HAL_UART_Transmit+0x10e>
 80032b8:	68fb      	ldr	r3, [r7, #12]
 80032ba:	2200      	movs	r2, #0
 80032bc:	645a      	str	r2, [r3, #68]	@ 0x44
 80032be:	68fb      	ldr	r3, [r7, #12]
 80032c0:	2221      	movs	r2, #33	@ 0x21
 80032c2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80032c6:	f7fe fe35 	bl	8001f34 <HAL_GetTick>
 80032ca:	6178      	str	r0, [r7, #20]
 80032cc:	68fb      	ldr	r3, [r7, #12]
 80032ce:	88fa      	ldrh	r2, [r7, #6]
 80032d0:	849a      	strh	r2, [r3, #36]	@ 0x24
 80032d2:	68fb      	ldr	r3, [r7, #12]
 80032d4:	88fa      	ldrh	r2, [r7, #6]
 80032d6:	84da      	strh	r2, [r3, #38]	@ 0x26
 80032d8:	68fb      	ldr	r3, [r7, #12]
 80032da:	689b      	ldr	r3, [r3, #8]
 80032dc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80032e0:	d108      	bne.n	80032f4 <HAL_UART_Transmit+0x6c>
 80032e2:	68fb      	ldr	r3, [r7, #12]
 80032e4:	691b      	ldr	r3, [r3, #16]
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d104      	bne.n	80032f4 <HAL_UART_Transmit+0x6c>
 80032ea:	2300      	movs	r3, #0
 80032ec:	61fb      	str	r3, [r7, #28]
 80032ee:	68bb      	ldr	r3, [r7, #8]
 80032f0:	61bb      	str	r3, [r7, #24]
 80032f2:	e003      	b.n	80032fc <HAL_UART_Transmit+0x74>
 80032f4:	68bb      	ldr	r3, [r7, #8]
 80032f6:	61fb      	str	r3, [r7, #28]
 80032f8:	2300      	movs	r3, #0
 80032fa:	61bb      	str	r3, [r7, #24]
 80032fc:	e02e      	b.n	800335c <HAL_UART_Transmit+0xd4>
 80032fe:	683b      	ldr	r3, [r7, #0]
 8003300:	9300      	str	r3, [sp, #0]
 8003302:	697b      	ldr	r3, [r7, #20]
 8003304:	2200      	movs	r2, #0
 8003306:	2180      	movs	r1, #128	@ 0x80
 8003308:	68f8      	ldr	r0, [r7, #12]
 800330a:	f000 f8df 	bl	80034cc <UART_WaitOnFlagUntilTimeout>
 800330e:	4603      	mov	r3, r0
 8003310:	2b00      	cmp	r3, #0
 8003312:	d005      	beq.n	8003320 <HAL_UART_Transmit+0x98>
 8003314:	68fb      	ldr	r3, [r7, #12]
 8003316:	2220      	movs	r2, #32
 8003318:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800331c:	2303      	movs	r3, #3
 800331e:	e03a      	b.n	8003396 <HAL_UART_Transmit+0x10e>
 8003320:	69fb      	ldr	r3, [r7, #28]
 8003322:	2b00      	cmp	r3, #0
 8003324:	d10b      	bne.n	800333e <HAL_UART_Transmit+0xb6>
 8003326:	69bb      	ldr	r3, [r7, #24]
 8003328:	881b      	ldrh	r3, [r3, #0]
 800332a:	461a      	mov	r2, r3
 800332c:	68fb      	ldr	r3, [r7, #12]
 800332e:	681b      	ldr	r3, [r3, #0]
 8003330:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003334:	605a      	str	r2, [r3, #4]
 8003336:	69bb      	ldr	r3, [r7, #24]
 8003338:	3302      	adds	r3, #2
 800333a:	61bb      	str	r3, [r7, #24]
 800333c:	e007      	b.n	800334e <HAL_UART_Transmit+0xc6>
 800333e:	69fb      	ldr	r3, [r7, #28]
 8003340:	781a      	ldrb	r2, [r3, #0]
 8003342:	68fb      	ldr	r3, [r7, #12]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	605a      	str	r2, [r3, #4]
 8003348:	69fb      	ldr	r3, [r7, #28]
 800334a:	3301      	adds	r3, #1
 800334c:	61fb      	str	r3, [r7, #28]
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003352:	b29b      	uxth	r3, r3
 8003354:	3b01      	subs	r3, #1
 8003356:	b29a      	uxth	r2, r3
 8003358:	68fb      	ldr	r3, [r7, #12]
 800335a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003360:	b29b      	uxth	r3, r3
 8003362:	2b00      	cmp	r3, #0
 8003364:	d1cb      	bne.n	80032fe <HAL_UART_Transmit+0x76>
 8003366:	683b      	ldr	r3, [r7, #0]
 8003368:	9300      	str	r3, [sp, #0]
 800336a:	697b      	ldr	r3, [r7, #20]
 800336c:	2200      	movs	r2, #0
 800336e:	2140      	movs	r1, #64	@ 0x40
 8003370:	68f8      	ldr	r0, [r7, #12]
 8003372:	f000 f8ab 	bl	80034cc <UART_WaitOnFlagUntilTimeout>
 8003376:	4603      	mov	r3, r0
 8003378:	2b00      	cmp	r3, #0
 800337a:	d005      	beq.n	8003388 <HAL_UART_Transmit+0x100>
 800337c:	68fb      	ldr	r3, [r7, #12]
 800337e:	2220      	movs	r2, #32
 8003380:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003384:	2303      	movs	r3, #3
 8003386:	e006      	b.n	8003396 <HAL_UART_Transmit+0x10e>
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	2220      	movs	r2, #32
 800338c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003390:	2300      	movs	r3, #0
 8003392:	e000      	b.n	8003396 <HAL_UART_Transmit+0x10e>
 8003394:	2302      	movs	r3, #2
 8003396:	4618      	mov	r0, r3
 8003398:	3720      	adds	r7, #32
 800339a:	46bd      	mov	sp, r7
 800339c:	bd80      	pop	{r7, pc}

0800339e <HAL_UART_Receive>:
 800339e:	b580      	push	{r7, lr}
 80033a0:	b08a      	sub	sp, #40	@ 0x28
 80033a2:	af02      	add	r7, sp, #8
 80033a4:	60f8      	str	r0, [r7, #12]
 80033a6:	60b9      	str	r1, [r7, #8]
 80033a8:	603b      	str	r3, [r7, #0]
 80033aa:	4613      	mov	r3, r2
 80033ac:	80fb      	strh	r3, [r7, #6]
 80033ae:	2300      	movs	r3, #0
 80033b0:	617b      	str	r3, [r7, #20]
 80033b2:	68fb      	ldr	r3, [r7, #12]
 80033b4:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80033b8:	b2db      	uxtb	r3, r3
 80033ba:	2b20      	cmp	r3, #32
 80033bc:	f040 8081 	bne.w	80034c2 <HAL_UART_Receive+0x124>
 80033c0:	68bb      	ldr	r3, [r7, #8]
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d002      	beq.n	80033cc <HAL_UART_Receive+0x2e>
 80033c6:	88fb      	ldrh	r3, [r7, #6]
 80033c8:	2b00      	cmp	r3, #0
 80033ca:	d101      	bne.n	80033d0 <HAL_UART_Receive+0x32>
 80033cc:	2301      	movs	r3, #1
 80033ce:	e079      	b.n	80034c4 <HAL_UART_Receive+0x126>
 80033d0:	68fb      	ldr	r3, [r7, #12]
 80033d2:	2200      	movs	r2, #0
 80033d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80033d6:	68fb      	ldr	r3, [r7, #12]
 80033d8:	2222      	movs	r2, #34	@ 0x22
 80033da:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80033de:	68fb      	ldr	r3, [r7, #12]
 80033e0:	2200      	movs	r2, #0
 80033e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80033e4:	f7fe fda6 	bl	8001f34 <HAL_GetTick>
 80033e8:	6178      	str	r0, [r7, #20]
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	88fa      	ldrh	r2, [r7, #6]
 80033ee:	859a      	strh	r2, [r3, #44]	@ 0x2c
 80033f0:	68fb      	ldr	r3, [r7, #12]
 80033f2:	88fa      	ldrh	r2, [r7, #6]
 80033f4:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80033f6:	68fb      	ldr	r3, [r7, #12]
 80033f8:	689b      	ldr	r3, [r3, #8]
 80033fa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80033fe:	d108      	bne.n	8003412 <HAL_UART_Receive+0x74>
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	691b      	ldr	r3, [r3, #16]
 8003404:	2b00      	cmp	r3, #0
 8003406:	d104      	bne.n	8003412 <HAL_UART_Receive+0x74>
 8003408:	2300      	movs	r3, #0
 800340a:	61fb      	str	r3, [r7, #28]
 800340c:	68bb      	ldr	r3, [r7, #8]
 800340e:	61bb      	str	r3, [r7, #24]
 8003410:	e003      	b.n	800341a <HAL_UART_Receive+0x7c>
 8003412:	68bb      	ldr	r3, [r7, #8]
 8003414:	61fb      	str	r3, [r7, #28]
 8003416:	2300      	movs	r3, #0
 8003418:	61bb      	str	r3, [r7, #24]
 800341a:	e047      	b.n	80034ac <HAL_UART_Receive+0x10e>
 800341c:	683b      	ldr	r3, [r7, #0]
 800341e:	9300      	str	r3, [sp, #0]
 8003420:	697b      	ldr	r3, [r7, #20]
 8003422:	2200      	movs	r2, #0
 8003424:	2120      	movs	r1, #32
 8003426:	68f8      	ldr	r0, [r7, #12]
 8003428:	f000 f850 	bl	80034cc <UART_WaitOnFlagUntilTimeout>
 800342c:	4603      	mov	r3, r0
 800342e:	2b00      	cmp	r3, #0
 8003430:	d005      	beq.n	800343e <HAL_UART_Receive+0xa0>
 8003432:	68fb      	ldr	r3, [r7, #12]
 8003434:	2220      	movs	r2, #32
 8003436:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800343a:	2303      	movs	r3, #3
 800343c:	e042      	b.n	80034c4 <HAL_UART_Receive+0x126>
 800343e:	69fb      	ldr	r3, [r7, #28]
 8003440:	2b00      	cmp	r3, #0
 8003442:	d10c      	bne.n	800345e <HAL_UART_Receive+0xc0>
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	685b      	ldr	r3, [r3, #4]
 800344a:	b29b      	uxth	r3, r3
 800344c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003450:	b29a      	uxth	r2, r3
 8003452:	69bb      	ldr	r3, [r7, #24]
 8003454:	801a      	strh	r2, [r3, #0]
 8003456:	69bb      	ldr	r3, [r7, #24]
 8003458:	3302      	adds	r3, #2
 800345a:	61bb      	str	r3, [r7, #24]
 800345c:	e01f      	b.n	800349e <HAL_UART_Receive+0x100>
 800345e:	68fb      	ldr	r3, [r7, #12]
 8003460:	689b      	ldr	r3, [r3, #8]
 8003462:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003466:	d007      	beq.n	8003478 <HAL_UART_Receive+0xda>
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	689b      	ldr	r3, [r3, #8]
 800346c:	2b00      	cmp	r3, #0
 800346e:	d10a      	bne.n	8003486 <HAL_UART_Receive+0xe8>
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	691b      	ldr	r3, [r3, #16]
 8003474:	2b00      	cmp	r3, #0
 8003476:	d106      	bne.n	8003486 <HAL_UART_Receive+0xe8>
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	681b      	ldr	r3, [r3, #0]
 800347c:	685b      	ldr	r3, [r3, #4]
 800347e:	b2da      	uxtb	r2, r3
 8003480:	69fb      	ldr	r3, [r7, #28]
 8003482:	701a      	strb	r2, [r3, #0]
 8003484:	e008      	b.n	8003498 <HAL_UART_Receive+0xfa>
 8003486:	68fb      	ldr	r3, [r7, #12]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	685b      	ldr	r3, [r3, #4]
 800348c:	b2db      	uxtb	r3, r3
 800348e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003492:	b2da      	uxtb	r2, r3
 8003494:	69fb      	ldr	r3, [r7, #28]
 8003496:	701a      	strb	r2, [r3, #0]
 8003498:	69fb      	ldr	r3, [r7, #28]
 800349a:	3301      	adds	r3, #1
 800349c:	61fb      	str	r3, [r7, #28]
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80034a2:	b29b      	uxth	r3, r3
 80034a4:	3b01      	subs	r3, #1
 80034a6:	b29a      	uxth	r2, r3
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80034ac:	68fb      	ldr	r3, [r7, #12]
 80034ae:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80034b0:	b29b      	uxth	r3, r3
 80034b2:	2b00      	cmp	r3, #0
 80034b4:	d1b2      	bne.n	800341c <HAL_UART_Receive+0x7e>
 80034b6:	68fb      	ldr	r3, [r7, #12]
 80034b8:	2220      	movs	r2, #32
 80034ba:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80034be:	2300      	movs	r3, #0
 80034c0:	e000      	b.n	80034c4 <HAL_UART_Receive+0x126>
 80034c2:	2302      	movs	r3, #2
 80034c4:	4618      	mov	r0, r3
 80034c6:	3720      	adds	r7, #32
 80034c8:	46bd      	mov	sp, r7
 80034ca:	bd80      	pop	{r7, pc}

080034cc <UART_WaitOnFlagUntilTimeout>:
 80034cc:	b580      	push	{r7, lr}
 80034ce:	b086      	sub	sp, #24
 80034d0:	af00      	add	r7, sp, #0
 80034d2:	60f8      	str	r0, [r7, #12]
 80034d4:	60b9      	str	r1, [r7, #8]
 80034d6:	603b      	str	r3, [r7, #0]
 80034d8:	4613      	mov	r3, r2
 80034da:	71fb      	strb	r3, [r7, #7]
 80034dc:	e03b      	b.n	8003556 <UART_WaitOnFlagUntilTimeout+0x8a>
 80034de:	6a3b      	ldr	r3, [r7, #32]
 80034e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80034e4:	d037      	beq.n	8003556 <UART_WaitOnFlagUntilTimeout+0x8a>
 80034e6:	f7fe fd25 	bl	8001f34 <HAL_GetTick>
 80034ea:	4602      	mov	r2, r0
 80034ec:	683b      	ldr	r3, [r7, #0]
 80034ee:	1ad3      	subs	r3, r2, r3
 80034f0:	6a3a      	ldr	r2, [r7, #32]
 80034f2:	429a      	cmp	r2, r3
 80034f4:	d302      	bcc.n	80034fc <UART_WaitOnFlagUntilTimeout+0x30>
 80034f6:	6a3b      	ldr	r3, [r7, #32]
 80034f8:	2b00      	cmp	r3, #0
 80034fa:	d101      	bne.n	8003500 <UART_WaitOnFlagUntilTimeout+0x34>
 80034fc:	2303      	movs	r3, #3
 80034fe:	e03a      	b.n	8003576 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003500:	68fb      	ldr	r3, [r7, #12]
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	68db      	ldr	r3, [r3, #12]
 8003506:	f003 0304 	and.w	r3, r3, #4
 800350a:	2b00      	cmp	r3, #0
 800350c:	d023      	beq.n	8003556 <UART_WaitOnFlagUntilTimeout+0x8a>
 800350e:	68bb      	ldr	r3, [r7, #8]
 8003510:	2b80      	cmp	r3, #128	@ 0x80
 8003512:	d020      	beq.n	8003556 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003514:	68bb      	ldr	r3, [r7, #8]
 8003516:	2b40      	cmp	r3, #64	@ 0x40
 8003518:	d01d      	beq.n	8003556 <UART_WaitOnFlagUntilTimeout+0x8a>
 800351a:	68fb      	ldr	r3, [r7, #12]
 800351c:	681b      	ldr	r3, [r3, #0]
 800351e:	681b      	ldr	r3, [r3, #0]
 8003520:	f003 0308 	and.w	r3, r3, #8
 8003524:	2b08      	cmp	r3, #8
 8003526:	d116      	bne.n	8003556 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003528:	2300      	movs	r3, #0
 800352a:	617b      	str	r3, [r7, #20]
 800352c:	68fb      	ldr	r3, [r7, #12]
 800352e:	681b      	ldr	r3, [r3, #0]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	617b      	str	r3, [r7, #20]
 8003534:	68fb      	ldr	r3, [r7, #12]
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	685b      	ldr	r3, [r3, #4]
 800353a:	617b      	str	r3, [r7, #20]
 800353c:	697b      	ldr	r3, [r7, #20]
 800353e:	68f8      	ldr	r0, [r7, #12]
 8003540:	f000 f81d 	bl	800357e <UART_EndRxTransfer>
 8003544:	68fb      	ldr	r3, [r7, #12]
 8003546:	2208      	movs	r2, #8
 8003548:	645a      	str	r2, [r3, #68]	@ 0x44
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	2200      	movs	r2, #0
 800354e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003552:	2301      	movs	r3, #1
 8003554:	e00f      	b.n	8003576 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003556:	68fb      	ldr	r3, [r7, #12]
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	681a      	ldr	r2, [r3, #0]
 800355c:	68bb      	ldr	r3, [r7, #8]
 800355e:	4013      	ands	r3, r2
 8003560:	68ba      	ldr	r2, [r7, #8]
 8003562:	429a      	cmp	r2, r3
 8003564:	bf0c      	ite	eq
 8003566:	2301      	moveq	r3, #1
 8003568:	2300      	movne	r3, #0
 800356a:	b2db      	uxtb	r3, r3
 800356c:	461a      	mov	r2, r3
 800356e:	79fb      	ldrb	r3, [r7, #7]
 8003570:	429a      	cmp	r2, r3
 8003572:	d0b4      	beq.n	80034de <UART_WaitOnFlagUntilTimeout+0x12>
 8003574:	2300      	movs	r3, #0
 8003576:	4618      	mov	r0, r3
 8003578:	3718      	adds	r7, #24
 800357a:	46bd      	mov	sp, r7
 800357c:	bd80      	pop	{r7, pc}

0800357e <UART_EndRxTransfer>:
 800357e:	b480      	push	{r7}
 8003580:	b095      	sub	sp, #84	@ 0x54
 8003582:	af00      	add	r7, sp, #0
 8003584:	6078      	str	r0, [r7, #4]
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	330c      	adds	r3, #12
 800358c:	637b      	str	r3, [r7, #52]	@ 0x34
 800358e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003590:	e853 3f00 	ldrex	r3, [r3]
 8003594:	633b      	str	r3, [r7, #48]	@ 0x30
 8003596:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003598:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800359c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	681b      	ldr	r3, [r3, #0]
 80035a2:	330c      	adds	r3, #12
 80035a4:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80035a6:	643a      	str	r2, [r7, #64]	@ 0x40
 80035a8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80035aa:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80035ac:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80035ae:	e841 2300 	strex	r3, r2, [r1]
 80035b2:	63bb      	str	r3, [r7, #56]	@ 0x38
 80035b4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80035b6:	2b00      	cmp	r3, #0
 80035b8:	d1e5      	bne.n	8003586 <UART_EndRxTransfer+0x8>
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	3314      	adds	r3, #20
 80035c0:	623b      	str	r3, [r7, #32]
 80035c2:	6a3b      	ldr	r3, [r7, #32]
 80035c4:	e853 3f00 	ldrex	r3, [r3]
 80035c8:	61fb      	str	r3, [r7, #28]
 80035ca:	69fb      	ldr	r3, [r7, #28]
 80035cc:	f023 0301 	bic.w	r3, r3, #1
 80035d0:	64bb      	str	r3, [r7, #72]	@ 0x48
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	681b      	ldr	r3, [r3, #0]
 80035d6:	3314      	adds	r3, #20
 80035d8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80035da:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80035dc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80035de:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80035e0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80035e2:	e841 2300 	strex	r3, r2, [r1]
 80035e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80035e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80035ea:	2b00      	cmp	r3, #0
 80035ec:	d1e5      	bne.n	80035ba <UART_EndRxTransfer+0x3c>
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80035f2:	2b01      	cmp	r3, #1
 80035f4:	d119      	bne.n	800362a <UART_EndRxTransfer+0xac>
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	330c      	adds	r3, #12
 80035fc:	60fb      	str	r3, [r7, #12]
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	e853 3f00 	ldrex	r3, [r3]
 8003604:	60bb      	str	r3, [r7, #8]
 8003606:	68bb      	ldr	r3, [r7, #8]
 8003608:	f023 0310 	bic.w	r3, r3, #16
 800360c:	647b      	str	r3, [r7, #68]	@ 0x44
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	681b      	ldr	r3, [r3, #0]
 8003612:	330c      	adds	r3, #12
 8003614:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003616:	61ba      	str	r2, [r7, #24]
 8003618:	617b      	str	r3, [r7, #20]
 800361a:	6979      	ldr	r1, [r7, #20]
 800361c:	69ba      	ldr	r2, [r7, #24]
 800361e:	e841 2300 	strex	r3, r2, [r1]
 8003622:	613b      	str	r3, [r7, #16]
 8003624:	693b      	ldr	r3, [r7, #16]
 8003626:	2b00      	cmp	r3, #0
 8003628:	d1e5      	bne.n	80035f6 <UART_EndRxTransfer+0x78>
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	2220      	movs	r2, #32
 800362e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	2200      	movs	r2, #0
 8003636:	631a      	str	r2, [r3, #48]	@ 0x30
 8003638:	bf00      	nop
 800363a:	3754      	adds	r7, #84	@ 0x54
 800363c:	46bd      	mov	sp, r7
 800363e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003642:	4770      	bx	lr

08003644 <UART_SetConfig>:
 8003644:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003648:	b0c0      	sub	sp, #256	@ 0x100
 800364a:	af00      	add	r7, sp, #0
 800364c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8003650:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003654:	681b      	ldr	r3, [r3, #0]
 8003656:	691b      	ldr	r3, [r3, #16]
 8003658:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 800365c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003660:	68d9      	ldr	r1, [r3, #12]
 8003662:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003666:	681a      	ldr	r2, [r3, #0]
 8003668:	ea40 0301 	orr.w	r3, r0, r1
 800366c:	6113      	str	r3, [r2, #16]
 800366e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003672:	689a      	ldr	r2, [r3, #8]
 8003674:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003678:	691b      	ldr	r3, [r3, #16]
 800367a:	431a      	orrs	r2, r3
 800367c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003680:	695b      	ldr	r3, [r3, #20]
 8003682:	431a      	orrs	r2, r3
 8003684:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003688:	69db      	ldr	r3, [r3, #28]
 800368a:	4313      	orrs	r3, r2
 800368c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8003690:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	68db      	ldr	r3, [r3, #12]
 8003698:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 800369c:	f021 010c 	bic.w	r1, r1, #12
 80036a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80036a4:	681a      	ldr	r2, [r3, #0]
 80036a6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80036aa:	430b      	orrs	r3, r1
 80036ac:	60d3      	str	r3, [r2, #12]
 80036ae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	695b      	ldr	r3, [r3, #20]
 80036b6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80036ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80036be:	6999      	ldr	r1, [r3, #24]
 80036c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80036c4:	681a      	ldr	r2, [r3, #0]
 80036c6:	ea40 0301 	orr.w	r3, r0, r1
 80036ca:	6153      	str	r3, [r2, #20]
 80036cc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80036d0:	681a      	ldr	r2, [r3, #0]
 80036d2:	4b8f      	ldr	r3, [pc, #572]	@ (8003910 <UART_SetConfig+0x2cc>)
 80036d4:	429a      	cmp	r2, r3
 80036d6:	d005      	beq.n	80036e4 <UART_SetConfig+0xa0>
 80036d8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80036dc:	681a      	ldr	r2, [r3, #0]
 80036de:	4b8d      	ldr	r3, [pc, #564]	@ (8003914 <UART_SetConfig+0x2d0>)
 80036e0:	429a      	cmp	r2, r3
 80036e2:	d104      	bne.n	80036ee <UART_SetConfig+0xaa>
 80036e4:	f7ff fd6c 	bl	80031c0 <HAL_RCC_GetPCLK2Freq>
 80036e8:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80036ec:	e003      	b.n	80036f6 <UART_SetConfig+0xb2>
 80036ee:	f7ff fd53 	bl	8003198 <HAL_RCC_GetPCLK1Freq>
 80036f2:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80036f6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80036fa:	69db      	ldr	r3, [r3, #28]
 80036fc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003700:	f040 810c 	bne.w	800391c <UART_SetConfig+0x2d8>
 8003704:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003708:	2200      	movs	r2, #0
 800370a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800370e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8003712:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8003716:	4622      	mov	r2, r4
 8003718:	462b      	mov	r3, r5
 800371a:	1891      	adds	r1, r2, r2
 800371c:	65b9      	str	r1, [r7, #88]	@ 0x58
 800371e:	415b      	adcs	r3, r3
 8003720:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003722:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8003726:	4621      	mov	r1, r4
 8003728:	eb12 0801 	adds.w	r8, r2, r1
 800372c:	4629      	mov	r1, r5
 800372e:	eb43 0901 	adc.w	r9, r3, r1
 8003732:	f04f 0200 	mov.w	r2, #0
 8003736:	f04f 0300 	mov.w	r3, #0
 800373a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800373e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003742:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003746:	4690      	mov	r8, r2
 8003748:	4699      	mov	r9, r3
 800374a:	4623      	mov	r3, r4
 800374c:	eb18 0303 	adds.w	r3, r8, r3
 8003750:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003754:	462b      	mov	r3, r5
 8003756:	eb49 0303 	adc.w	r3, r9, r3
 800375a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800375e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003762:	685b      	ldr	r3, [r3, #4]
 8003764:	2200      	movs	r2, #0
 8003766:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800376a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800376e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8003772:	460b      	mov	r3, r1
 8003774:	18db      	adds	r3, r3, r3
 8003776:	653b      	str	r3, [r7, #80]	@ 0x50
 8003778:	4613      	mov	r3, r2
 800377a:	eb42 0303 	adc.w	r3, r2, r3
 800377e:	657b      	str	r3, [r7, #84]	@ 0x54
 8003780:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8003784:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8003788:	f7fd f85c 	bl	8000844 <__aeabi_uldivmod>
 800378c:	4602      	mov	r2, r0
 800378e:	460b      	mov	r3, r1
 8003790:	4b61      	ldr	r3, [pc, #388]	@ (8003918 <UART_SetConfig+0x2d4>)
 8003792:	fba3 2302 	umull	r2, r3, r3, r2
 8003796:	095b      	lsrs	r3, r3, #5
 8003798:	011c      	lsls	r4, r3, #4
 800379a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800379e:	2200      	movs	r2, #0
 80037a0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80037a4:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80037a8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80037ac:	4642      	mov	r2, r8
 80037ae:	464b      	mov	r3, r9
 80037b0:	1891      	adds	r1, r2, r2
 80037b2:	64b9      	str	r1, [r7, #72]	@ 0x48
 80037b4:	415b      	adcs	r3, r3
 80037b6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80037b8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80037bc:	4641      	mov	r1, r8
 80037be:	eb12 0a01 	adds.w	sl, r2, r1
 80037c2:	4649      	mov	r1, r9
 80037c4:	eb43 0b01 	adc.w	fp, r3, r1
 80037c8:	f04f 0200 	mov.w	r2, #0
 80037cc:	f04f 0300 	mov.w	r3, #0
 80037d0:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80037d4:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80037d8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80037dc:	4692      	mov	sl, r2
 80037de:	469b      	mov	fp, r3
 80037e0:	4643      	mov	r3, r8
 80037e2:	eb1a 0303 	adds.w	r3, sl, r3
 80037e6:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80037ea:	464b      	mov	r3, r9
 80037ec:	eb4b 0303 	adc.w	r3, fp, r3
 80037f0:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80037f4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80037f8:	685b      	ldr	r3, [r3, #4]
 80037fa:	2200      	movs	r2, #0
 80037fc:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8003800:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8003804:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8003808:	460b      	mov	r3, r1
 800380a:	18db      	adds	r3, r3, r3
 800380c:	643b      	str	r3, [r7, #64]	@ 0x40
 800380e:	4613      	mov	r3, r2
 8003810:	eb42 0303 	adc.w	r3, r2, r3
 8003814:	647b      	str	r3, [r7, #68]	@ 0x44
 8003816:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800381a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800381e:	f7fd f811 	bl	8000844 <__aeabi_uldivmod>
 8003822:	4602      	mov	r2, r0
 8003824:	460b      	mov	r3, r1
 8003826:	4611      	mov	r1, r2
 8003828:	4b3b      	ldr	r3, [pc, #236]	@ (8003918 <UART_SetConfig+0x2d4>)
 800382a:	fba3 2301 	umull	r2, r3, r3, r1
 800382e:	095b      	lsrs	r3, r3, #5
 8003830:	2264      	movs	r2, #100	@ 0x64
 8003832:	fb02 f303 	mul.w	r3, r2, r3
 8003836:	1acb      	subs	r3, r1, r3
 8003838:	00db      	lsls	r3, r3, #3
 800383a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800383e:	4b36      	ldr	r3, [pc, #216]	@ (8003918 <UART_SetConfig+0x2d4>)
 8003840:	fba3 2302 	umull	r2, r3, r3, r2
 8003844:	095b      	lsrs	r3, r3, #5
 8003846:	005b      	lsls	r3, r3, #1
 8003848:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 800384c:	441c      	add	r4, r3
 800384e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003852:	2200      	movs	r2, #0
 8003854:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003858:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 800385c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8003860:	4642      	mov	r2, r8
 8003862:	464b      	mov	r3, r9
 8003864:	1891      	adds	r1, r2, r2
 8003866:	63b9      	str	r1, [r7, #56]	@ 0x38
 8003868:	415b      	adcs	r3, r3
 800386a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800386c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8003870:	4641      	mov	r1, r8
 8003872:	1851      	adds	r1, r2, r1
 8003874:	6339      	str	r1, [r7, #48]	@ 0x30
 8003876:	4649      	mov	r1, r9
 8003878:	414b      	adcs	r3, r1
 800387a:	637b      	str	r3, [r7, #52]	@ 0x34
 800387c:	f04f 0200 	mov.w	r2, #0
 8003880:	f04f 0300 	mov.w	r3, #0
 8003884:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8003888:	4659      	mov	r1, fp
 800388a:	00cb      	lsls	r3, r1, #3
 800388c:	4651      	mov	r1, sl
 800388e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003892:	4651      	mov	r1, sl
 8003894:	00ca      	lsls	r2, r1, #3
 8003896:	4610      	mov	r0, r2
 8003898:	4619      	mov	r1, r3
 800389a:	4603      	mov	r3, r0
 800389c:	4642      	mov	r2, r8
 800389e:	189b      	adds	r3, r3, r2
 80038a0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80038a4:	464b      	mov	r3, r9
 80038a6:	460a      	mov	r2, r1
 80038a8:	eb42 0303 	adc.w	r3, r2, r3
 80038ac:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80038b0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038b4:	685b      	ldr	r3, [r3, #4]
 80038b6:	2200      	movs	r2, #0
 80038b8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80038bc:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80038c0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80038c4:	460b      	mov	r3, r1
 80038c6:	18db      	adds	r3, r3, r3
 80038c8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80038ca:	4613      	mov	r3, r2
 80038cc:	eb42 0303 	adc.w	r3, r2, r3
 80038d0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80038d2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80038d6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80038da:	f7fc ffb3 	bl	8000844 <__aeabi_uldivmod>
 80038de:	4602      	mov	r2, r0
 80038e0:	460b      	mov	r3, r1
 80038e2:	4b0d      	ldr	r3, [pc, #52]	@ (8003918 <UART_SetConfig+0x2d4>)
 80038e4:	fba3 1302 	umull	r1, r3, r3, r2
 80038e8:	095b      	lsrs	r3, r3, #5
 80038ea:	2164      	movs	r1, #100	@ 0x64
 80038ec:	fb01 f303 	mul.w	r3, r1, r3
 80038f0:	1ad3      	subs	r3, r2, r3
 80038f2:	00db      	lsls	r3, r3, #3
 80038f4:	3332      	adds	r3, #50	@ 0x32
 80038f6:	4a08      	ldr	r2, [pc, #32]	@ (8003918 <UART_SetConfig+0x2d4>)
 80038f8:	fba2 2303 	umull	r2, r3, r2, r3
 80038fc:	095b      	lsrs	r3, r3, #5
 80038fe:	f003 0207 	and.w	r2, r3, #7
 8003902:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	4422      	add	r2, r4
 800390a:	609a      	str	r2, [r3, #8]
 800390c:	e106      	b.n	8003b1c <UART_SetConfig+0x4d8>
 800390e:	bf00      	nop
 8003910:	40011000 	.word	0x40011000
 8003914:	40011400 	.word	0x40011400
 8003918:	51eb851f 	.word	0x51eb851f
 800391c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003920:	2200      	movs	r2, #0
 8003922:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003926:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800392a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800392e:	4642      	mov	r2, r8
 8003930:	464b      	mov	r3, r9
 8003932:	1891      	adds	r1, r2, r2
 8003934:	6239      	str	r1, [r7, #32]
 8003936:	415b      	adcs	r3, r3
 8003938:	627b      	str	r3, [r7, #36]	@ 0x24
 800393a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800393e:	4641      	mov	r1, r8
 8003940:	1854      	adds	r4, r2, r1
 8003942:	4649      	mov	r1, r9
 8003944:	eb43 0501 	adc.w	r5, r3, r1
 8003948:	f04f 0200 	mov.w	r2, #0
 800394c:	f04f 0300 	mov.w	r3, #0
 8003950:	00eb      	lsls	r3, r5, #3
 8003952:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003956:	00e2      	lsls	r2, r4, #3
 8003958:	4614      	mov	r4, r2
 800395a:	461d      	mov	r5, r3
 800395c:	4643      	mov	r3, r8
 800395e:	18e3      	adds	r3, r4, r3
 8003960:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003964:	464b      	mov	r3, r9
 8003966:	eb45 0303 	adc.w	r3, r5, r3
 800396a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800396e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003972:	685b      	ldr	r3, [r3, #4]
 8003974:	2200      	movs	r2, #0
 8003976:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800397a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800397e:	f04f 0200 	mov.w	r2, #0
 8003982:	f04f 0300 	mov.w	r3, #0
 8003986:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800398a:	4629      	mov	r1, r5
 800398c:	008b      	lsls	r3, r1, #2
 800398e:	4621      	mov	r1, r4
 8003990:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003994:	4621      	mov	r1, r4
 8003996:	008a      	lsls	r2, r1, #2
 8003998:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 800399c:	f7fc ff52 	bl	8000844 <__aeabi_uldivmod>
 80039a0:	4602      	mov	r2, r0
 80039a2:	460b      	mov	r3, r1
 80039a4:	4b60      	ldr	r3, [pc, #384]	@ (8003b28 <UART_SetConfig+0x4e4>)
 80039a6:	fba3 2302 	umull	r2, r3, r3, r2
 80039aa:	095b      	lsrs	r3, r3, #5
 80039ac:	011c      	lsls	r4, r3, #4
 80039ae:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80039b2:	2200      	movs	r2, #0
 80039b4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80039b8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80039bc:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80039c0:	4642      	mov	r2, r8
 80039c2:	464b      	mov	r3, r9
 80039c4:	1891      	adds	r1, r2, r2
 80039c6:	61b9      	str	r1, [r7, #24]
 80039c8:	415b      	adcs	r3, r3
 80039ca:	61fb      	str	r3, [r7, #28]
 80039cc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80039d0:	4641      	mov	r1, r8
 80039d2:	1851      	adds	r1, r2, r1
 80039d4:	6139      	str	r1, [r7, #16]
 80039d6:	4649      	mov	r1, r9
 80039d8:	414b      	adcs	r3, r1
 80039da:	617b      	str	r3, [r7, #20]
 80039dc:	f04f 0200 	mov.w	r2, #0
 80039e0:	f04f 0300 	mov.w	r3, #0
 80039e4:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80039e8:	4659      	mov	r1, fp
 80039ea:	00cb      	lsls	r3, r1, #3
 80039ec:	4651      	mov	r1, sl
 80039ee:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80039f2:	4651      	mov	r1, sl
 80039f4:	00ca      	lsls	r2, r1, #3
 80039f6:	4610      	mov	r0, r2
 80039f8:	4619      	mov	r1, r3
 80039fa:	4603      	mov	r3, r0
 80039fc:	4642      	mov	r2, r8
 80039fe:	189b      	adds	r3, r3, r2
 8003a00:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003a04:	464b      	mov	r3, r9
 8003a06:	460a      	mov	r2, r1
 8003a08:	eb42 0303 	adc.w	r3, r2, r3
 8003a0c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003a10:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003a14:	685b      	ldr	r3, [r3, #4]
 8003a16:	2200      	movs	r2, #0
 8003a18:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003a1a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8003a1c:	f04f 0200 	mov.w	r2, #0
 8003a20:	f04f 0300 	mov.w	r3, #0
 8003a24:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8003a28:	4649      	mov	r1, r9
 8003a2a:	008b      	lsls	r3, r1, #2
 8003a2c:	4641      	mov	r1, r8
 8003a2e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003a32:	4641      	mov	r1, r8
 8003a34:	008a      	lsls	r2, r1, #2
 8003a36:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8003a3a:	f7fc ff03 	bl	8000844 <__aeabi_uldivmod>
 8003a3e:	4602      	mov	r2, r0
 8003a40:	460b      	mov	r3, r1
 8003a42:	4611      	mov	r1, r2
 8003a44:	4b38      	ldr	r3, [pc, #224]	@ (8003b28 <UART_SetConfig+0x4e4>)
 8003a46:	fba3 2301 	umull	r2, r3, r3, r1
 8003a4a:	095b      	lsrs	r3, r3, #5
 8003a4c:	2264      	movs	r2, #100	@ 0x64
 8003a4e:	fb02 f303 	mul.w	r3, r2, r3
 8003a52:	1acb      	subs	r3, r1, r3
 8003a54:	011b      	lsls	r3, r3, #4
 8003a56:	3332      	adds	r3, #50	@ 0x32
 8003a58:	4a33      	ldr	r2, [pc, #204]	@ (8003b28 <UART_SetConfig+0x4e4>)
 8003a5a:	fba2 2303 	umull	r2, r3, r2, r3
 8003a5e:	095b      	lsrs	r3, r3, #5
 8003a60:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003a64:	441c      	add	r4, r3
 8003a66:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003a6a:	2200      	movs	r2, #0
 8003a6c:	673b      	str	r3, [r7, #112]	@ 0x70
 8003a6e:	677a      	str	r2, [r7, #116]	@ 0x74
 8003a70:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8003a74:	4642      	mov	r2, r8
 8003a76:	464b      	mov	r3, r9
 8003a78:	1891      	adds	r1, r2, r2
 8003a7a:	60b9      	str	r1, [r7, #8]
 8003a7c:	415b      	adcs	r3, r3
 8003a7e:	60fb      	str	r3, [r7, #12]
 8003a80:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003a84:	4641      	mov	r1, r8
 8003a86:	1851      	adds	r1, r2, r1
 8003a88:	6039      	str	r1, [r7, #0]
 8003a8a:	4649      	mov	r1, r9
 8003a8c:	414b      	adcs	r3, r1
 8003a8e:	607b      	str	r3, [r7, #4]
 8003a90:	f04f 0200 	mov.w	r2, #0
 8003a94:	f04f 0300 	mov.w	r3, #0
 8003a98:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8003a9c:	4659      	mov	r1, fp
 8003a9e:	00cb      	lsls	r3, r1, #3
 8003aa0:	4651      	mov	r1, sl
 8003aa2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003aa6:	4651      	mov	r1, sl
 8003aa8:	00ca      	lsls	r2, r1, #3
 8003aaa:	4610      	mov	r0, r2
 8003aac:	4619      	mov	r1, r3
 8003aae:	4603      	mov	r3, r0
 8003ab0:	4642      	mov	r2, r8
 8003ab2:	189b      	adds	r3, r3, r2
 8003ab4:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003ab6:	464b      	mov	r3, r9
 8003ab8:	460a      	mov	r2, r1
 8003aba:	eb42 0303 	adc.w	r3, r2, r3
 8003abe:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003ac0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ac4:	685b      	ldr	r3, [r3, #4]
 8003ac6:	2200      	movs	r2, #0
 8003ac8:	663b      	str	r3, [r7, #96]	@ 0x60
 8003aca:	667a      	str	r2, [r7, #100]	@ 0x64
 8003acc:	f04f 0200 	mov.w	r2, #0
 8003ad0:	f04f 0300 	mov.w	r3, #0
 8003ad4:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8003ad8:	4649      	mov	r1, r9
 8003ada:	008b      	lsls	r3, r1, #2
 8003adc:	4641      	mov	r1, r8
 8003ade:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003ae2:	4641      	mov	r1, r8
 8003ae4:	008a      	lsls	r2, r1, #2
 8003ae6:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8003aea:	f7fc feab 	bl	8000844 <__aeabi_uldivmod>
 8003aee:	4602      	mov	r2, r0
 8003af0:	460b      	mov	r3, r1
 8003af2:	4b0d      	ldr	r3, [pc, #52]	@ (8003b28 <UART_SetConfig+0x4e4>)
 8003af4:	fba3 1302 	umull	r1, r3, r3, r2
 8003af8:	095b      	lsrs	r3, r3, #5
 8003afa:	2164      	movs	r1, #100	@ 0x64
 8003afc:	fb01 f303 	mul.w	r3, r1, r3
 8003b00:	1ad3      	subs	r3, r2, r3
 8003b02:	011b      	lsls	r3, r3, #4
 8003b04:	3332      	adds	r3, #50	@ 0x32
 8003b06:	4a08      	ldr	r2, [pc, #32]	@ (8003b28 <UART_SetConfig+0x4e4>)
 8003b08:	fba2 2303 	umull	r2, r3, r2, r3
 8003b0c:	095b      	lsrs	r3, r3, #5
 8003b0e:	f003 020f 	and.w	r2, r3, #15
 8003b12:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	4422      	add	r2, r4
 8003b1a:	609a      	str	r2, [r3, #8]
 8003b1c:	bf00      	nop
 8003b1e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8003b22:	46bd      	mov	sp, r7
 8003b24:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003b28:	51eb851f 	.word	0x51eb851f

08003b2c <memset>:
 8003b2c:	4402      	add	r2, r0
 8003b2e:	4603      	mov	r3, r0
 8003b30:	4293      	cmp	r3, r2
 8003b32:	d100      	bne.n	8003b36 <memset+0xa>
 8003b34:	4770      	bx	lr
 8003b36:	f803 1b01 	strb.w	r1, [r3], #1
 8003b3a:	e7f9      	b.n	8003b30 <memset+0x4>

08003b3c <__libc_init_array>:
 8003b3c:	b570      	push	{r4, r5, r6, lr}
 8003b3e:	4d0d      	ldr	r5, [pc, #52]	@ (8003b74 <__libc_init_array+0x38>)
 8003b40:	4c0d      	ldr	r4, [pc, #52]	@ (8003b78 <__libc_init_array+0x3c>)
 8003b42:	1b64      	subs	r4, r4, r5
 8003b44:	10a4      	asrs	r4, r4, #2
 8003b46:	2600      	movs	r6, #0
 8003b48:	42a6      	cmp	r6, r4
 8003b4a:	d109      	bne.n	8003b60 <__libc_init_array+0x24>
 8003b4c:	4d0b      	ldr	r5, [pc, #44]	@ (8003b7c <__libc_init_array+0x40>)
 8003b4e:	4c0c      	ldr	r4, [pc, #48]	@ (8003b80 <__libc_init_array+0x44>)
 8003b50:	f000 fd8c 	bl	800466c <_init>
 8003b54:	1b64      	subs	r4, r4, r5
 8003b56:	10a4      	asrs	r4, r4, #2
 8003b58:	2600      	movs	r6, #0
 8003b5a:	42a6      	cmp	r6, r4
 8003b5c:	d105      	bne.n	8003b6a <__libc_init_array+0x2e>
 8003b5e:	bd70      	pop	{r4, r5, r6, pc}
 8003b60:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b64:	4798      	blx	r3
 8003b66:	3601      	adds	r6, #1
 8003b68:	e7ee      	b.n	8003b48 <__libc_init_array+0xc>
 8003b6a:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b6e:	4798      	blx	r3
 8003b70:	3601      	adds	r6, #1
 8003b72:	e7f2      	b.n	8003b5a <__libc_init_array+0x1e>
 8003b74:	08004a7c 	.word	0x08004a7c
 8003b78:	08004a7c 	.word	0x08004a7c
 8003b7c:	08004a7c 	.word	0x08004a7c
 8003b80:	08004a80 	.word	0x08004a80

08003b84 <cosf>:
 8003b84:	ee10 3a10 	vmov	r3, s0
 8003b88:	b507      	push	{r0, r1, r2, lr}
 8003b8a:	4a1e      	ldr	r2, [pc, #120]	@ (8003c04 <cosf+0x80>)
 8003b8c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003b90:	4293      	cmp	r3, r2
 8003b92:	d806      	bhi.n	8003ba2 <cosf+0x1e>
 8003b94:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8003c08 <cosf+0x84>
 8003b98:	b003      	add	sp, #12
 8003b9a:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b9e:	f000 b87b 	b.w	8003c98 <__kernel_cosf>
 8003ba2:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8003ba6:	d304      	bcc.n	8003bb2 <cosf+0x2e>
 8003ba8:	ee30 0a40 	vsub.f32	s0, s0, s0
 8003bac:	b003      	add	sp, #12
 8003bae:	f85d fb04 	ldr.w	pc, [sp], #4
 8003bb2:	4668      	mov	r0, sp
 8003bb4:	f000 f910 	bl	8003dd8 <__ieee754_rem_pio2f>
 8003bb8:	f000 0003 	and.w	r0, r0, #3
 8003bbc:	2801      	cmp	r0, #1
 8003bbe:	d009      	beq.n	8003bd4 <cosf+0x50>
 8003bc0:	2802      	cmp	r0, #2
 8003bc2:	d010      	beq.n	8003be6 <cosf+0x62>
 8003bc4:	b9b0      	cbnz	r0, 8003bf4 <cosf+0x70>
 8003bc6:	eddd 0a01 	vldr	s1, [sp, #4]
 8003bca:	ed9d 0a00 	vldr	s0, [sp]
 8003bce:	f000 f863 	bl	8003c98 <__kernel_cosf>
 8003bd2:	e7eb      	b.n	8003bac <cosf+0x28>
 8003bd4:	eddd 0a01 	vldr	s1, [sp, #4]
 8003bd8:	ed9d 0a00 	vldr	s0, [sp]
 8003bdc:	f000 f8b4 	bl	8003d48 <__kernel_sinf>
 8003be0:	eeb1 0a40 	vneg.f32	s0, s0
 8003be4:	e7e2      	b.n	8003bac <cosf+0x28>
 8003be6:	eddd 0a01 	vldr	s1, [sp, #4]
 8003bea:	ed9d 0a00 	vldr	s0, [sp]
 8003bee:	f000 f853 	bl	8003c98 <__kernel_cosf>
 8003bf2:	e7f5      	b.n	8003be0 <cosf+0x5c>
 8003bf4:	eddd 0a01 	vldr	s1, [sp, #4]
 8003bf8:	ed9d 0a00 	vldr	s0, [sp]
 8003bfc:	2001      	movs	r0, #1
 8003bfe:	f000 f8a3 	bl	8003d48 <__kernel_sinf>
 8003c02:	e7d3      	b.n	8003bac <cosf+0x28>
 8003c04:	3f490fd8 	.word	0x3f490fd8
 8003c08:	00000000 	.word	0x00000000

08003c0c <sinf>:
 8003c0c:	ee10 3a10 	vmov	r3, s0
 8003c10:	b507      	push	{r0, r1, r2, lr}
 8003c12:	4a1f      	ldr	r2, [pc, #124]	@ (8003c90 <sinf+0x84>)
 8003c14:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003c18:	4293      	cmp	r3, r2
 8003c1a:	d807      	bhi.n	8003c2c <sinf+0x20>
 8003c1c:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8003c94 <sinf+0x88>
 8003c20:	2000      	movs	r0, #0
 8003c22:	b003      	add	sp, #12
 8003c24:	f85d eb04 	ldr.w	lr, [sp], #4
 8003c28:	f000 b88e 	b.w	8003d48 <__kernel_sinf>
 8003c2c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8003c30:	d304      	bcc.n	8003c3c <sinf+0x30>
 8003c32:	ee30 0a40 	vsub.f32	s0, s0, s0
 8003c36:	b003      	add	sp, #12
 8003c38:	f85d fb04 	ldr.w	pc, [sp], #4
 8003c3c:	4668      	mov	r0, sp
 8003c3e:	f000 f8cb 	bl	8003dd8 <__ieee754_rem_pio2f>
 8003c42:	f000 0003 	and.w	r0, r0, #3
 8003c46:	2801      	cmp	r0, #1
 8003c48:	d00a      	beq.n	8003c60 <sinf+0x54>
 8003c4a:	2802      	cmp	r0, #2
 8003c4c:	d00f      	beq.n	8003c6e <sinf+0x62>
 8003c4e:	b9c0      	cbnz	r0, 8003c82 <sinf+0x76>
 8003c50:	eddd 0a01 	vldr	s1, [sp, #4]
 8003c54:	ed9d 0a00 	vldr	s0, [sp]
 8003c58:	2001      	movs	r0, #1
 8003c5a:	f000 f875 	bl	8003d48 <__kernel_sinf>
 8003c5e:	e7ea      	b.n	8003c36 <sinf+0x2a>
 8003c60:	eddd 0a01 	vldr	s1, [sp, #4]
 8003c64:	ed9d 0a00 	vldr	s0, [sp]
 8003c68:	f000 f816 	bl	8003c98 <__kernel_cosf>
 8003c6c:	e7e3      	b.n	8003c36 <sinf+0x2a>
 8003c6e:	eddd 0a01 	vldr	s1, [sp, #4]
 8003c72:	ed9d 0a00 	vldr	s0, [sp]
 8003c76:	2001      	movs	r0, #1
 8003c78:	f000 f866 	bl	8003d48 <__kernel_sinf>
 8003c7c:	eeb1 0a40 	vneg.f32	s0, s0
 8003c80:	e7d9      	b.n	8003c36 <sinf+0x2a>
 8003c82:	eddd 0a01 	vldr	s1, [sp, #4]
 8003c86:	ed9d 0a00 	vldr	s0, [sp]
 8003c8a:	f000 f805 	bl	8003c98 <__kernel_cosf>
 8003c8e:	e7f5      	b.n	8003c7c <sinf+0x70>
 8003c90:	3f490fd8 	.word	0x3f490fd8
 8003c94:	00000000 	.word	0x00000000

08003c98 <__kernel_cosf>:
 8003c98:	ee10 3a10 	vmov	r3, s0
 8003c9c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003ca0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8003ca4:	eef0 6a40 	vmov.f32	s13, s0
 8003ca8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8003cac:	d204      	bcs.n	8003cb8 <__kernel_cosf+0x20>
 8003cae:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8003cb2:	ee17 2a90 	vmov	r2, s15
 8003cb6:	b342      	cbz	r2, 8003d0a <__kernel_cosf+0x72>
 8003cb8:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8003cbc:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8003d28 <__kernel_cosf+0x90>
 8003cc0:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8003d2c <__kernel_cosf+0x94>
 8003cc4:	4a1a      	ldr	r2, [pc, #104]	@ (8003d30 <__kernel_cosf+0x98>)
 8003cc6:	eea7 6a27 	vfma.f32	s12, s14, s15
 8003cca:	4293      	cmp	r3, r2
 8003ccc:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8003d34 <__kernel_cosf+0x9c>
 8003cd0:	eee6 7a07 	vfma.f32	s15, s12, s14
 8003cd4:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8003d38 <__kernel_cosf+0xa0>
 8003cd8:	eea7 6a87 	vfma.f32	s12, s15, s14
 8003cdc:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8003d3c <__kernel_cosf+0xa4>
 8003ce0:	eee6 7a07 	vfma.f32	s15, s12, s14
 8003ce4:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8003d40 <__kernel_cosf+0xa8>
 8003ce8:	eea7 6a87 	vfma.f32	s12, s15, s14
 8003cec:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8003cf0:	ee26 6a07 	vmul.f32	s12, s12, s14
 8003cf4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8003cf8:	eee7 0a06 	vfma.f32	s1, s14, s12
 8003cfc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003d00:	d804      	bhi.n	8003d0c <__kernel_cosf+0x74>
 8003d02:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8003d06:	ee30 0a67 	vsub.f32	s0, s0, s15
 8003d0a:	4770      	bx	lr
 8003d0c:	4a0d      	ldr	r2, [pc, #52]	@ (8003d44 <__kernel_cosf+0xac>)
 8003d0e:	4293      	cmp	r3, r2
 8003d10:	bf9a      	itte	ls
 8003d12:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8003d16:	ee07 3a10 	vmovls	s14, r3
 8003d1a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8003d1e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003d22:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003d26:	e7ec      	b.n	8003d02 <__kernel_cosf+0x6a>
 8003d28:	ad47d74e 	.word	0xad47d74e
 8003d2c:	310f74f6 	.word	0x310f74f6
 8003d30:	3e999999 	.word	0x3e999999
 8003d34:	b493f27c 	.word	0xb493f27c
 8003d38:	37d00d01 	.word	0x37d00d01
 8003d3c:	bab60b61 	.word	0xbab60b61
 8003d40:	3d2aaaab 	.word	0x3d2aaaab
 8003d44:	3f480000 	.word	0x3f480000

08003d48 <__kernel_sinf>:
 8003d48:	ee10 3a10 	vmov	r3, s0
 8003d4c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003d50:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8003d54:	d204      	bcs.n	8003d60 <__kernel_sinf+0x18>
 8003d56:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003d5a:	ee17 3a90 	vmov	r3, s15
 8003d5e:	b35b      	cbz	r3, 8003db8 <__kernel_sinf+0x70>
 8003d60:	ee20 7a00 	vmul.f32	s14, s0, s0
 8003d64:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8003dbc <__kernel_sinf+0x74>
 8003d68:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8003dc0 <__kernel_sinf+0x78>
 8003d6c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8003d70:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8003dc4 <__kernel_sinf+0x7c>
 8003d74:	eee6 7a07 	vfma.f32	s15, s12, s14
 8003d78:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8003dc8 <__kernel_sinf+0x80>
 8003d7c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8003d80:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8003dcc <__kernel_sinf+0x84>
 8003d84:	ee60 6a07 	vmul.f32	s13, s0, s14
 8003d88:	eee6 7a07 	vfma.f32	s15, s12, s14
 8003d8c:	b930      	cbnz	r0, 8003d9c <__kernel_sinf+0x54>
 8003d8e:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8003dd0 <__kernel_sinf+0x88>
 8003d92:	eea7 6a27 	vfma.f32	s12, s14, s15
 8003d96:	eea6 0a26 	vfma.f32	s0, s12, s13
 8003d9a:	4770      	bx	lr
 8003d9c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8003da0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8003da4:	eee0 7a86 	vfma.f32	s15, s1, s12
 8003da8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8003dac:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8003dd4 <__kernel_sinf+0x8c>
 8003db0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8003db4:	ee30 0a60 	vsub.f32	s0, s0, s1
 8003db8:	4770      	bx	lr
 8003dba:	bf00      	nop
 8003dbc:	2f2ec9d3 	.word	0x2f2ec9d3
 8003dc0:	b2d72f34 	.word	0xb2d72f34
 8003dc4:	3638ef1b 	.word	0x3638ef1b
 8003dc8:	b9500d01 	.word	0xb9500d01
 8003dcc:	3c088889 	.word	0x3c088889
 8003dd0:	be2aaaab 	.word	0xbe2aaaab
 8003dd4:	3e2aaaab 	.word	0x3e2aaaab

08003dd8 <__ieee754_rem_pio2f>:
 8003dd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003dda:	ee10 6a10 	vmov	r6, s0
 8003dde:	4b88      	ldr	r3, [pc, #544]	@ (8004000 <__ieee754_rem_pio2f+0x228>)
 8003de0:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8003de4:	429d      	cmp	r5, r3
 8003de6:	b087      	sub	sp, #28
 8003de8:	4604      	mov	r4, r0
 8003dea:	d805      	bhi.n	8003df8 <__ieee754_rem_pio2f+0x20>
 8003dec:	2300      	movs	r3, #0
 8003dee:	ed80 0a00 	vstr	s0, [r0]
 8003df2:	6043      	str	r3, [r0, #4]
 8003df4:	2000      	movs	r0, #0
 8003df6:	e022      	b.n	8003e3e <__ieee754_rem_pio2f+0x66>
 8003df8:	4b82      	ldr	r3, [pc, #520]	@ (8004004 <__ieee754_rem_pio2f+0x22c>)
 8003dfa:	429d      	cmp	r5, r3
 8003dfc:	d83a      	bhi.n	8003e74 <__ieee754_rem_pio2f+0x9c>
 8003dfe:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8003e02:	2e00      	cmp	r6, #0
 8003e04:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8004008 <__ieee754_rem_pio2f+0x230>
 8003e08:	4a80      	ldr	r2, [pc, #512]	@ (800400c <__ieee754_rem_pio2f+0x234>)
 8003e0a:	f023 030f 	bic.w	r3, r3, #15
 8003e0e:	dd18      	ble.n	8003e42 <__ieee754_rem_pio2f+0x6a>
 8003e10:	4293      	cmp	r3, r2
 8003e12:	ee70 7a47 	vsub.f32	s15, s0, s14
 8003e16:	bf09      	itett	eq
 8003e18:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8004010 <__ieee754_rem_pio2f+0x238>
 8003e1c:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8004014 <__ieee754_rem_pio2f+0x23c>
 8003e20:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8004018 <__ieee754_rem_pio2f+0x240>
 8003e24:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8003e28:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8003e2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003e30:	ed80 7a00 	vstr	s14, [r0]
 8003e34:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8003e38:	edc0 7a01 	vstr	s15, [r0, #4]
 8003e3c:	2001      	movs	r0, #1
 8003e3e:	b007      	add	sp, #28
 8003e40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e42:	4293      	cmp	r3, r2
 8003e44:	ee70 7a07 	vadd.f32	s15, s0, s14
 8003e48:	bf09      	itett	eq
 8003e4a:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8004010 <__ieee754_rem_pio2f+0x238>
 8003e4e:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8004014 <__ieee754_rem_pio2f+0x23c>
 8003e52:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8004018 <__ieee754_rem_pio2f+0x240>
 8003e56:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8003e5a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8003e5e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003e62:	ed80 7a00 	vstr	s14, [r0]
 8003e66:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8003e6a:	edc0 7a01 	vstr	s15, [r0, #4]
 8003e6e:	f04f 30ff 	mov.w	r0, #4294967295
 8003e72:	e7e4      	b.n	8003e3e <__ieee754_rem_pio2f+0x66>
 8003e74:	4b69      	ldr	r3, [pc, #420]	@ (800401c <__ieee754_rem_pio2f+0x244>)
 8003e76:	429d      	cmp	r5, r3
 8003e78:	d873      	bhi.n	8003f62 <__ieee754_rem_pio2f+0x18a>
 8003e7a:	f000 f8dd 	bl	8004038 <fabsf>
 8003e7e:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8004020 <__ieee754_rem_pio2f+0x248>
 8003e82:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8003e86:	eee0 7a07 	vfma.f32	s15, s0, s14
 8003e8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e8e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003e92:	ee17 0a90 	vmov	r0, s15
 8003e96:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8004008 <__ieee754_rem_pio2f+0x230>
 8003e9a:	eea7 0a67 	vfms.f32	s0, s14, s15
 8003e9e:	281f      	cmp	r0, #31
 8003ea0:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8004014 <__ieee754_rem_pio2f+0x23c>
 8003ea4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003ea8:	eeb1 6a47 	vneg.f32	s12, s14
 8003eac:	ee70 6a67 	vsub.f32	s13, s0, s15
 8003eb0:	ee16 1a90 	vmov	r1, s13
 8003eb4:	dc09      	bgt.n	8003eca <__ieee754_rem_pio2f+0xf2>
 8003eb6:	4a5b      	ldr	r2, [pc, #364]	@ (8004024 <__ieee754_rem_pio2f+0x24c>)
 8003eb8:	1e47      	subs	r7, r0, #1
 8003eba:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8003ebe:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8003ec2:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8003ec6:	4293      	cmp	r3, r2
 8003ec8:	d107      	bne.n	8003eda <__ieee754_rem_pio2f+0x102>
 8003eca:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8003ece:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8003ed2:	2a08      	cmp	r2, #8
 8003ed4:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8003ed8:	dc14      	bgt.n	8003f04 <__ieee754_rem_pio2f+0x12c>
 8003eda:	6021      	str	r1, [r4, #0]
 8003edc:	ed94 7a00 	vldr	s14, [r4]
 8003ee0:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003ee4:	2e00      	cmp	r6, #0
 8003ee6:	ee30 0a67 	vsub.f32	s0, s0, s15
 8003eea:	ed84 0a01 	vstr	s0, [r4, #4]
 8003eee:	daa6      	bge.n	8003e3e <__ieee754_rem_pio2f+0x66>
 8003ef0:	eeb1 7a47 	vneg.f32	s14, s14
 8003ef4:	eeb1 0a40 	vneg.f32	s0, s0
 8003ef8:	ed84 7a00 	vstr	s14, [r4]
 8003efc:	ed84 0a01 	vstr	s0, [r4, #4]
 8003f00:	4240      	negs	r0, r0
 8003f02:	e79c      	b.n	8003e3e <__ieee754_rem_pio2f+0x66>
 8003f04:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8004010 <__ieee754_rem_pio2f+0x238>
 8003f08:	eef0 6a40 	vmov.f32	s13, s0
 8003f0c:	eee6 6a25 	vfma.f32	s13, s12, s11
 8003f10:	ee70 7a66 	vsub.f32	s15, s0, s13
 8003f14:	eee6 7a25 	vfma.f32	s15, s12, s11
 8003f18:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8004018 <__ieee754_rem_pio2f+0x240>
 8003f1c:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8003f20:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8003f24:	ee15 2a90 	vmov	r2, s11
 8003f28:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8003f2c:	1a5b      	subs	r3, r3, r1
 8003f2e:	2b19      	cmp	r3, #25
 8003f30:	dc04      	bgt.n	8003f3c <__ieee754_rem_pio2f+0x164>
 8003f32:	edc4 5a00 	vstr	s11, [r4]
 8003f36:	eeb0 0a66 	vmov.f32	s0, s13
 8003f3a:	e7cf      	b.n	8003edc <__ieee754_rem_pio2f+0x104>
 8003f3c:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8004028 <__ieee754_rem_pio2f+0x250>
 8003f40:	eeb0 0a66 	vmov.f32	s0, s13
 8003f44:	eea6 0a25 	vfma.f32	s0, s12, s11
 8003f48:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8003f4c:	eddf 6a37 	vldr	s13, [pc, #220]	@ 800402c <__ieee754_rem_pio2f+0x254>
 8003f50:	eee6 7a25 	vfma.f32	s15, s12, s11
 8003f54:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8003f58:	ee30 7a67 	vsub.f32	s14, s0, s15
 8003f5c:	ed84 7a00 	vstr	s14, [r4]
 8003f60:	e7bc      	b.n	8003edc <__ieee754_rem_pio2f+0x104>
 8003f62:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8003f66:	d306      	bcc.n	8003f76 <__ieee754_rem_pio2f+0x19e>
 8003f68:	ee70 7a40 	vsub.f32	s15, s0, s0
 8003f6c:	edc0 7a01 	vstr	s15, [r0, #4]
 8003f70:	edc0 7a00 	vstr	s15, [r0]
 8003f74:	e73e      	b.n	8003df4 <__ieee754_rem_pio2f+0x1c>
 8003f76:	15ea      	asrs	r2, r5, #23
 8003f78:	3a86      	subs	r2, #134	@ 0x86
 8003f7a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8003f7e:	ee07 3a90 	vmov	s15, r3
 8003f82:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8003f86:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8004030 <__ieee754_rem_pio2f+0x258>
 8003f8a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8003f8e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003f92:	ed8d 7a03 	vstr	s14, [sp, #12]
 8003f96:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8003f9a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8003f9e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8003fa2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003fa6:	ed8d 7a04 	vstr	s14, [sp, #16]
 8003faa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8003fae:	eef5 7a40 	vcmp.f32	s15, #0.0
 8003fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003fb6:	edcd 7a05 	vstr	s15, [sp, #20]
 8003fba:	d11e      	bne.n	8003ffa <__ieee754_rem_pio2f+0x222>
 8003fbc:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8003fc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003fc4:	bf0c      	ite	eq
 8003fc6:	2301      	moveq	r3, #1
 8003fc8:	2302      	movne	r3, #2
 8003fca:	491a      	ldr	r1, [pc, #104]	@ (8004034 <__ieee754_rem_pio2f+0x25c>)
 8003fcc:	9101      	str	r1, [sp, #4]
 8003fce:	2102      	movs	r1, #2
 8003fd0:	9100      	str	r1, [sp, #0]
 8003fd2:	a803      	add	r0, sp, #12
 8003fd4:	4621      	mov	r1, r4
 8003fd6:	f000 f837 	bl	8004048 <__kernel_rem_pio2f>
 8003fda:	2e00      	cmp	r6, #0
 8003fdc:	f6bf af2f 	bge.w	8003e3e <__ieee754_rem_pio2f+0x66>
 8003fe0:	edd4 7a00 	vldr	s15, [r4]
 8003fe4:	eef1 7a67 	vneg.f32	s15, s15
 8003fe8:	edc4 7a00 	vstr	s15, [r4]
 8003fec:	edd4 7a01 	vldr	s15, [r4, #4]
 8003ff0:	eef1 7a67 	vneg.f32	s15, s15
 8003ff4:	edc4 7a01 	vstr	s15, [r4, #4]
 8003ff8:	e782      	b.n	8003f00 <__ieee754_rem_pio2f+0x128>
 8003ffa:	2303      	movs	r3, #3
 8003ffc:	e7e5      	b.n	8003fca <__ieee754_rem_pio2f+0x1f2>
 8003ffe:	bf00      	nop
 8004000:	3f490fd8 	.word	0x3f490fd8
 8004004:	4016cbe3 	.word	0x4016cbe3
 8004008:	3fc90f80 	.word	0x3fc90f80
 800400c:	3fc90fd0 	.word	0x3fc90fd0
 8004010:	37354400 	.word	0x37354400
 8004014:	37354443 	.word	0x37354443
 8004018:	2e85a308 	.word	0x2e85a308
 800401c:	43490f80 	.word	0x43490f80
 8004020:	3f22f984 	.word	0x3f22f984
 8004024:	080046a4 	.word	0x080046a4
 8004028:	2e85a300 	.word	0x2e85a300
 800402c:	248d3132 	.word	0x248d3132
 8004030:	43800000 	.word	0x43800000
 8004034:	08004724 	.word	0x08004724

08004038 <fabsf>:
 8004038:	ee10 3a10 	vmov	r3, s0
 800403c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8004040:	ee00 3a10 	vmov	s0, r3
 8004044:	4770      	bx	lr
	...

08004048 <__kernel_rem_pio2f>:
 8004048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800404c:	ed2d 8b04 	vpush	{d8-d9}
 8004050:	b0d9      	sub	sp, #356	@ 0x164
 8004052:	4690      	mov	r8, r2
 8004054:	9001      	str	r0, [sp, #4]
 8004056:	4ab6      	ldr	r2, [pc, #728]	@ (8004330 <__kernel_rem_pio2f+0x2e8>)
 8004058:	9866      	ldr	r0, [sp, #408]	@ 0x198
 800405a:	f118 0f04 	cmn.w	r8, #4
 800405e:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8004062:	460f      	mov	r7, r1
 8004064:	f103 3bff 	add.w	fp, r3, #4294967295
 8004068:	db26      	blt.n	80040b8 <__kernel_rem_pio2f+0x70>
 800406a:	f1b8 0203 	subs.w	r2, r8, #3
 800406e:	bf48      	it	mi
 8004070:	f108 0204 	addmi.w	r2, r8, #4
 8004074:	10d2      	asrs	r2, r2, #3
 8004076:	1c55      	adds	r5, r2, #1
 8004078:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 800407a:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8004340 <__kernel_rem_pio2f+0x2f8>
 800407e:	00e8      	lsls	r0, r5, #3
 8004080:	eba2 060b 	sub.w	r6, r2, fp
 8004084:	9002      	str	r0, [sp, #8]
 8004086:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 800408a:	eb0a 0c0b 	add.w	ip, sl, fp
 800408e:	ac1c      	add	r4, sp, #112	@ 0x70
 8004090:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8004094:	2000      	movs	r0, #0
 8004096:	4560      	cmp	r0, ip
 8004098:	dd10      	ble.n	80040bc <__kernel_rem_pio2f+0x74>
 800409a:	a91c      	add	r1, sp, #112	@ 0x70
 800409c:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80040a0:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 80040a4:	2600      	movs	r6, #0
 80040a6:	4556      	cmp	r6, sl
 80040a8:	dc24      	bgt.n	80040f4 <__kernel_rem_pio2f+0xac>
 80040aa:	f8dd e004 	ldr.w	lr, [sp, #4]
 80040ae:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8004340 <__kernel_rem_pio2f+0x2f8>
 80040b2:	4684      	mov	ip, r0
 80040b4:	2400      	movs	r4, #0
 80040b6:	e016      	b.n	80040e6 <__kernel_rem_pio2f+0x9e>
 80040b8:	2200      	movs	r2, #0
 80040ba:	e7dc      	b.n	8004076 <__kernel_rem_pio2f+0x2e>
 80040bc:	42c6      	cmn	r6, r0
 80040be:	bf5d      	ittte	pl
 80040c0:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80040c4:	ee07 1a90 	vmovpl	s15, r1
 80040c8:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80040cc:	eef0 7a47 	vmovmi.f32	s15, s14
 80040d0:	ece4 7a01 	vstmia	r4!, {s15}
 80040d4:	3001      	adds	r0, #1
 80040d6:	e7de      	b.n	8004096 <__kernel_rem_pio2f+0x4e>
 80040d8:	ecfe 6a01 	vldmia	lr!, {s13}
 80040dc:	ed3c 7a01 	vldmdb	ip!, {s14}
 80040e0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80040e4:	3401      	adds	r4, #1
 80040e6:	455c      	cmp	r4, fp
 80040e8:	ddf6      	ble.n	80040d8 <__kernel_rem_pio2f+0x90>
 80040ea:	ece9 7a01 	vstmia	r9!, {s15}
 80040ee:	3601      	adds	r6, #1
 80040f0:	3004      	adds	r0, #4
 80040f2:	e7d8      	b.n	80040a6 <__kernel_rem_pio2f+0x5e>
 80040f4:	a908      	add	r1, sp, #32
 80040f6:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80040fa:	9104      	str	r1, [sp, #16]
 80040fc:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80040fe:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 800433c <__kernel_rem_pio2f+0x2f4>
 8004102:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8004338 <__kernel_rem_pio2f+0x2f0>
 8004106:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 800410a:	9203      	str	r2, [sp, #12]
 800410c:	4654      	mov	r4, sl
 800410e:	00a2      	lsls	r2, r4, #2
 8004110:	9205      	str	r2, [sp, #20]
 8004112:	aa58      	add	r2, sp, #352	@ 0x160
 8004114:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8004118:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 800411c:	a944      	add	r1, sp, #272	@ 0x110
 800411e:	aa08      	add	r2, sp, #32
 8004120:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8004124:	4694      	mov	ip, r2
 8004126:	4626      	mov	r6, r4
 8004128:	2e00      	cmp	r6, #0
 800412a:	dc4c      	bgt.n	80041c6 <__kernel_rem_pio2f+0x17e>
 800412c:	4628      	mov	r0, r5
 800412e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004132:	f000 f9f1 	bl	8004518 <scalbnf>
 8004136:	eeb0 8a40 	vmov.f32	s16, s0
 800413a:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 800413e:	ee28 0a00 	vmul.f32	s0, s16, s0
 8004142:	f000 fa4f 	bl	80045e4 <floorf>
 8004146:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 800414a:	eea0 8a67 	vfms.f32	s16, s0, s15
 800414e:	2d00      	cmp	r5, #0
 8004150:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004154:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8004158:	ee17 9a90 	vmov	r9, s15
 800415c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004160:	ee38 8a67 	vsub.f32	s16, s16, s15
 8004164:	dd41      	ble.n	80041ea <__kernel_rem_pio2f+0x1a2>
 8004166:	f104 3cff 	add.w	ip, r4, #4294967295
 800416a:	a908      	add	r1, sp, #32
 800416c:	f1c5 0e08 	rsb	lr, r5, #8
 8004170:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8004174:	fa46 f00e 	asr.w	r0, r6, lr
 8004178:	4481      	add	r9, r0
 800417a:	fa00 f00e 	lsl.w	r0, r0, lr
 800417e:	1a36      	subs	r6, r6, r0
 8004180:	f1c5 0007 	rsb	r0, r5, #7
 8004184:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8004188:	4106      	asrs	r6, r0
 800418a:	2e00      	cmp	r6, #0
 800418c:	dd3c      	ble.n	8004208 <__kernel_rem_pio2f+0x1c0>
 800418e:	f04f 0e00 	mov.w	lr, #0
 8004192:	f109 0901 	add.w	r9, r9, #1
 8004196:	4670      	mov	r0, lr
 8004198:	4574      	cmp	r4, lr
 800419a:	dc68      	bgt.n	800426e <__kernel_rem_pio2f+0x226>
 800419c:	2d00      	cmp	r5, #0
 800419e:	dd03      	ble.n	80041a8 <__kernel_rem_pio2f+0x160>
 80041a0:	2d01      	cmp	r5, #1
 80041a2:	d074      	beq.n	800428e <__kernel_rem_pio2f+0x246>
 80041a4:	2d02      	cmp	r5, #2
 80041a6:	d07d      	beq.n	80042a4 <__kernel_rem_pio2f+0x25c>
 80041a8:	2e02      	cmp	r6, #2
 80041aa:	d12d      	bne.n	8004208 <__kernel_rem_pio2f+0x1c0>
 80041ac:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80041b0:	ee30 8a48 	vsub.f32	s16, s0, s16
 80041b4:	b340      	cbz	r0, 8004208 <__kernel_rem_pio2f+0x1c0>
 80041b6:	4628      	mov	r0, r5
 80041b8:	9306      	str	r3, [sp, #24]
 80041ba:	f000 f9ad 	bl	8004518 <scalbnf>
 80041be:	9b06      	ldr	r3, [sp, #24]
 80041c0:	ee38 8a40 	vsub.f32	s16, s16, s0
 80041c4:	e020      	b.n	8004208 <__kernel_rem_pio2f+0x1c0>
 80041c6:	ee60 7a28 	vmul.f32	s15, s0, s17
 80041ca:	3e01      	subs	r6, #1
 80041cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80041d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80041d4:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80041d8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80041dc:	ecac 0a01 	vstmia	ip!, {s0}
 80041e0:	ed30 0a01 	vldmdb	r0!, {s0}
 80041e4:	ee37 0a80 	vadd.f32	s0, s15, s0
 80041e8:	e79e      	b.n	8004128 <__kernel_rem_pio2f+0xe0>
 80041ea:	d105      	bne.n	80041f8 <__kernel_rem_pio2f+0x1b0>
 80041ec:	1e60      	subs	r0, r4, #1
 80041ee:	a908      	add	r1, sp, #32
 80041f0:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80041f4:	11f6      	asrs	r6, r6, #7
 80041f6:	e7c8      	b.n	800418a <__kernel_rem_pio2f+0x142>
 80041f8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80041fc:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8004200:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004204:	da31      	bge.n	800426a <__kernel_rem_pio2f+0x222>
 8004206:	2600      	movs	r6, #0
 8004208:	eeb5 8a40 	vcmp.f32	s16, #0.0
 800420c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004210:	f040 8098 	bne.w	8004344 <__kernel_rem_pio2f+0x2fc>
 8004214:	1e60      	subs	r0, r4, #1
 8004216:	2200      	movs	r2, #0
 8004218:	4550      	cmp	r0, sl
 800421a:	da4b      	bge.n	80042b4 <__kernel_rem_pio2f+0x26c>
 800421c:	2a00      	cmp	r2, #0
 800421e:	d065      	beq.n	80042ec <__kernel_rem_pio2f+0x2a4>
 8004220:	3c01      	subs	r4, #1
 8004222:	ab08      	add	r3, sp, #32
 8004224:	3d08      	subs	r5, #8
 8004226:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800422a:	2b00      	cmp	r3, #0
 800422c:	d0f8      	beq.n	8004220 <__kernel_rem_pio2f+0x1d8>
 800422e:	4628      	mov	r0, r5
 8004230:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8004234:	f000 f970 	bl	8004518 <scalbnf>
 8004238:	1c63      	adds	r3, r4, #1
 800423a:	aa44      	add	r2, sp, #272	@ 0x110
 800423c:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 800433c <__kernel_rem_pio2f+0x2f4>
 8004240:	0099      	lsls	r1, r3, #2
 8004242:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8004246:	4623      	mov	r3, r4
 8004248:	2b00      	cmp	r3, #0
 800424a:	f280 80a9 	bge.w	80043a0 <__kernel_rem_pio2f+0x358>
 800424e:	4623      	mov	r3, r4
 8004250:	2b00      	cmp	r3, #0
 8004252:	f2c0 80c7 	blt.w	80043e4 <__kernel_rem_pio2f+0x39c>
 8004256:	aa44      	add	r2, sp, #272	@ 0x110
 8004258:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 800425c:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8004334 <__kernel_rem_pio2f+0x2ec>
 8004260:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8004340 <__kernel_rem_pio2f+0x2f8>
 8004264:	2000      	movs	r0, #0
 8004266:	1ae2      	subs	r2, r4, r3
 8004268:	e0b1      	b.n	80043ce <__kernel_rem_pio2f+0x386>
 800426a:	2602      	movs	r6, #2
 800426c:	e78f      	b.n	800418e <__kernel_rem_pio2f+0x146>
 800426e:	f852 1b04 	ldr.w	r1, [r2], #4
 8004272:	b948      	cbnz	r0, 8004288 <__kernel_rem_pio2f+0x240>
 8004274:	b121      	cbz	r1, 8004280 <__kernel_rem_pio2f+0x238>
 8004276:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 800427a:	f842 1c04 	str.w	r1, [r2, #-4]
 800427e:	2101      	movs	r1, #1
 8004280:	f10e 0e01 	add.w	lr, lr, #1
 8004284:	4608      	mov	r0, r1
 8004286:	e787      	b.n	8004198 <__kernel_rem_pio2f+0x150>
 8004288:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 800428c:	e7f5      	b.n	800427a <__kernel_rem_pio2f+0x232>
 800428e:	f104 3cff 	add.w	ip, r4, #4294967295
 8004292:	aa08      	add	r2, sp, #32
 8004294:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8004298:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800429c:	a908      	add	r1, sp, #32
 800429e:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80042a2:	e781      	b.n	80041a8 <__kernel_rem_pio2f+0x160>
 80042a4:	f104 3cff 	add.w	ip, r4, #4294967295
 80042a8:	aa08      	add	r2, sp, #32
 80042aa:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80042ae:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80042b2:	e7f3      	b.n	800429c <__kernel_rem_pio2f+0x254>
 80042b4:	a908      	add	r1, sp, #32
 80042b6:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80042ba:	3801      	subs	r0, #1
 80042bc:	430a      	orrs	r2, r1
 80042be:	e7ab      	b.n	8004218 <__kernel_rem_pio2f+0x1d0>
 80042c0:	3201      	adds	r2, #1
 80042c2:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80042c6:	2e00      	cmp	r6, #0
 80042c8:	d0fa      	beq.n	80042c0 <__kernel_rem_pio2f+0x278>
 80042ca:	9905      	ldr	r1, [sp, #20]
 80042cc:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80042d0:	eb0d 0001 	add.w	r0, sp, r1
 80042d4:	18e6      	adds	r6, r4, r3
 80042d6:	a91c      	add	r1, sp, #112	@ 0x70
 80042d8:	f104 0c01 	add.w	ip, r4, #1
 80042dc:	384c      	subs	r0, #76	@ 0x4c
 80042de:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80042e2:	4422      	add	r2, r4
 80042e4:	4562      	cmp	r2, ip
 80042e6:	da04      	bge.n	80042f2 <__kernel_rem_pio2f+0x2aa>
 80042e8:	4614      	mov	r4, r2
 80042ea:	e710      	b.n	800410e <__kernel_rem_pio2f+0xc6>
 80042ec:	9804      	ldr	r0, [sp, #16]
 80042ee:	2201      	movs	r2, #1
 80042f0:	e7e7      	b.n	80042c2 <__kernel_rem_pio2f+0x27a>
 80042f2:	9903      	ldr	r1, [sp, #12]
 80042f4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80042f8:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 80042fc:	9105      	str	r1, [sp, #20]
 80042fe:	ee07 1a90 	vmov	s15, r1
 8004302:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004306:	2400      	movs	r4, #0
 8004308:	ece6 7a01 	vstmia	r6!, {s15}
 800430c:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8004340 <__kernel_rem_pio2f+0x2f8>
 8004310:	46b1      	mov	r9, r6
 8004312:	455c      	cmp	r4, fp
 8004314:	dd04      	ble.n	8004320 <__kernel_rem_pio2f+0x2d8>
 8004316:	ece0 7a01 	vstmia	r0!, {s15}
 800431a:	f10c 0c01 	add.w	ip, ip, #1
 800431e:	e7e1      	b.n	80042e4 <__kernel_rem_pio2f+0x29c>
 8004320:	ecfe 6a01 	vldmia	lr!, {s13}
 8004324:	ed39 7a01 	vldmdb	r9!, {s14}
 8004328:	3401      	adds	r4, #1
 800432a:	eee6 7a87 	vfma.f32	s15, s13, s14
 800432e:	e7f0      	b.n	8004312 <__kernel_rem_pio2f+0x2ca>
 8004330:	08004a68 	.word	0x08004a68
 8004334:	08004a3c 	.word	0x08004a3c
 8004338:	43800000 	.word	0x43800000
 800433c:	3b800000 	.word	0x3b800000
 8004340:	00000000 	.word	0x00000000
 8004344:	9b02      	ldr	r3, [sp, #8]
 8004346:	eeb0 0a48 	vmov.f32	s0, s16
 800434a:	eba3 0008 	sub.w	r0, r3, r8
 800434e:	f000 f8e3 	bl	8004518 <scalbnf>
 8004352:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8004338 <__kernel_rem_pio2f+0x2f0>
 8004356:	eeb4 0ac7 	vcmpe.f32	s0, s14
 800435a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800435e:	db19      	blt.n	8004394 <__kernel_rem_pio2f+0x34c>
 8004360:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 800433c <__kernel_rem_pio2f+0x2f4>
 8004364:	ee60 7a27 	vmul.f32	s15, s0, s15
 8004368:	aa08      	add	r2, sp, #32
 800436a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800436e:	3508      	adds	r5, #8
 8004370:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004374:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8004378:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800437c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8004380:	ee10 3a10 	vmov	r3, s0
 8004384:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8004388:	ee17 3a90 	vmov	r3, s15
 800438c:	3401      	adds	r4, #1
 800438e:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8004392:	e74c      	b.n	800422e <__kernel_rem_pio2f+0x1e6>
 8004394:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8004398:	aa08      	add	r2, sp, #32
 800439a:	ee10 3a10 	vmov	r3, s0
 800439e:	e7f6      	b.n	800438e <__kernel_rem_pio2f+0x346>
 80043a0:	a808      	add	r0, sp, #32
 80043a2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80043a6:	9001      	str	r0, [sp, #4]
 80043a8:	ee07 0a90 	vmov	s15, r0
 80043ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80043b0:	3b01      	subs	r3, #1
 80043b2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80043b6:	ee20 0a07 	vmul.f32	s0, s0, s14
 80043ba:	ed62 7a01 	vstmdb	r2!, {s15}
 80043be:	e743      	b.n	8004248 <__kernel_rem_pio2f+0x200>
 80043c0:	ecfc 6a01 	vldmia	ip!, {s13}
 80043c4:	ecb5 7a01 	vldmia	r5!, {s14}
 80043c8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80043cc:	3001      	adds	r0, #1
 80043ce:	4550      	cmp	r0, sl
 80043d0:	dc01      	bgt.n	80043d6 <__kernel_rem_pio2f+0x38e>
 80043d2:	4290      	cmp	r0, r2
 80043d4:	ddf4      	ble.n	80043c0 <__kernel_rem_pio2f+0x378>
 80043d6:	a858      	add	r0, sp, #352	@ 0x160
 80043d8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80043dc:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80043e0:	3b01      	subs	r3, #1
 80043e2:	e735      	b.n	8004250 <__kernel_rem_pio2f+0x208>
 80043e4:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80043e6:	2b02      	cmp	r3, #2
 80043e8:	dc09      	bgt.n	80043fe <__kernel_rem_pio2f+0x3b6>
 80043ea:	2b00      	cmp	r3, #0
 80043ec:	dc27      	bgt.n	800443e <__kernel_rem_pio2f+0x3f6>
 80043ee:	d040      	beq.n	8004472 <__kernel_rem_pio2f+0x42a>
 80043f0:	f009 0007 	and.w	r0, r9, #7
 80043f4:	b059      	add	sp, #356	@ 0x164
 80043f6:	ecbd 8b04 	vpop	{d8-d9}
 80043fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043fe:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8004400:	2b03      	cmp	r3, #3
 8004402:	d1f5      	bne.n	80043f0 <__kernel_rem_pio2f+0x3a8>
 8004404:	aa30      	add	r2, sp, #192	@ 0xc0
 8004406:	1f0b      	subs	r3, r1, #4
 8004408:	4413      	add	r3, r2
 800440a:	461a      	mov	r2, r3
 800440c:	4620      	mov	r0, r4
 800440e:	2800      	cmp	r0, #0
 8004410:	dc50      	bgt.n	80044b4 <__kernel_rem_pio2f+0x46c>
 8004412:	4622      	mov	r2, r4
 8004414:	2a01      	cmp	r2, #1
 8004416:	dc5d      	bgt.n	80044d4 <__kernel_rem_pio2f+0x48c>
 8004418:	ab30      	add	r3, sp, #192	@ 0xc0
 800441a:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8004340 <__kernel_rem_pio2f+0x2f8>
 800441e:	440b      	add	r3, r1
 8004420:	2c01      	cmp	r4, #1
 8004422:	dc67      	bgt.n	80044f4 <__kernel_rem_pio2f+0x4ac>
 8004424:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8004428:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 800442c:	2e00      	cmp	r6, #0
 800442e:	d167      	bne.n	8004500 <__kernel_rem_pio2f+0x4b8>
 8004430:	edc7 6a00 	vstr	s13, [r7]
 8004434:	ed87 7a01 	vstr	s14, [r7, #4]
 8004438:	edc7 7a02 	vstr	s15, [r7, #8]
 800443c:	e7d8      	b.n	80043f0 <__kernel_rem_pio2f+0x3a8>
 800443e:	ab30      	add	r3, sp, #192	@ 0xc0
 8004440:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8004340 <__kernel_rem_pio2f+0x2f8>
 8004444:	440b      	add	r3, r1
 8004446:	4622      	mov	r2, r4
 8004448:	2a00      	cmp	r2, #0
 800444a:	da24      	bge.n	8004496 <__kernel_rem_pio2f+0x44e>
 800444c:	b34e      	cbz	r6, 80044a2 <__kernel_rem_pio2f+0x45a>
 800444e:	eef1 7a47 	vneg.f32	s15, s14
 8004452:	edc7 7a00 	vstr	s15, [r7]
 8004456:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 800445a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800445e:	aa31      	add	r2, sp, #196	@ 0xc4
 8004460:	2301      	movs	r3, #1
 8004462:	429c      	cmp	r4, r3
 8004464:	da20      	bge.n	80044a8 <__kernel_rem_pio2f+0x460>
 8004466:	b10e      	cbz	r6, 800446c <__kernel_rem_pio2f+0x424>
 8004468:	eef1 7a67 	vneg.f32	s15, s15
 800446c:	edc7 7a01 	vstr	s15, [r7, #4]
 8004470:	e7be      	b.n	80043f0 <__kernel_rem_pio2f+0x3a8>
 8004472:	ab30      	add	r3, sp, #192	@ 0xc0
 8004474:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8004340 <__kernel_rem_pio2f+0x2f8>
 8004478:	440b      	add	r3, r1
 800447a:	2c00      	cmp	r4, #0
 800447c:	da05      	bge.n	800448a <__kernel_rem_pio2f+0x442>
 800447e:	b10e      	cbz	r6, 8004484 <__kernel_rem_pio2f+0x43c>
 8004480:	eef1 7a67 	vneg.f32	s15, s15
 8004484:	edc7 7a00 	vstr	s15, [r7]
 8004488:	e7b2      	b.n	80043f0 <__kernel_rem_pio2f+0x3a8>
 800448a:	ed33 7a01 	vldmdb	r3!, {s14}
 800448e:	3c01      	subs	r4, #1
 8004490:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004494:	e7f1      	b.n	800447a <__kernel_rem_pio2f+0x432>
 8004496:	ed73 7a01 	vldmdb	r3!, {s15}
 800449a:	3a01      	subs	r2, #1
 800449c:	ee37 7a27 	vadd.f32	s14, s14, s15
 80044a0:	e7d2      	b.n	8004448 <__kernel_rem_pio2f+0x400>
 80044a2:	eef0 7a47 	vmov.f32	s15, s14
 80044a6:	e7d4      	b.n	8004452 <__kernel_rem_pio2f+0x40a>
 80044a8:	ecb2 7a01 	vldmia	r2!, {s14}
 80044ac:	3301      	adds	r3, #1
 80044ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044b2:	e7d6      	b.n	8004462 <__kernel_rem_pio2f+0x41a>
 80044b4:	ed72 7a01 	vldmdb	r2!, {s15}
 80044b8:	edd2 6a01 	vldr	s13, [r2, #4]
 80044bc:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80044c0:	3801      	subs	r0, #1
 80044c2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80044c6:	ed82 7a00 	vstr	s14, [r2]
 80044ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80044ce:	edc2 7a01 	vstr	s15, [r2, #4]
 80044d2:	e79c      	b.n	800440e <__kernel_rem_pio2f+0x3c6>
 80044d4:	ed73 7a01 	vldmdb	r3!, {s15}
 80044d8:	edd3 6a01 	vldr	s13, [r3, #4]
 80044dc:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80044e0:	3a01      	subs	r2, #1
 80044e2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80044e6:	ed83 7a00 	vstr	s14, [r3]
 80044ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80044ee:	edc3 7a01 	vstr	s15, [r3, #4]
 80044f2:	e78f      	b.n	8004414 <__kernel_rem_pio2f+0x3cc>
 80044f4:	ed33 7a01 	vldmdb	r3!, {s14}
 80044f8:	3c01      	subs	r4, #1
 80044fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044fe:	e78f      	b.n	8004420 <__kernel_rem_pio2f+0x3d8>
 8004500:	eef1 6a66 	vneg.f32	s13, s13
 8004504:	eeb1 7a47 	vneg.f32	s14, s14
 8004508:	edc7 6a00 	vstr	s13, [r7]
 800450c:	ed87 7a01 	vstr	s14, [r7, #4]
 8004510:	eef1 7a67 	vneg.f32	s15, s15
 8004514:	e790      	b.n	8004438 <__kernel_rem_pio2f+0x3f0>
 8004516:	bf00      	nop

08004518 <scalbnf>:
 8004518:	ee10 3a10 	vmov	r3, s0
 800451c:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8004520:	d02b      	beq.n	800457a <scalbnf+0x62>
 8004522:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8004526:	d302      	bcc.n	800452e <scalbnf+0x16>
 8004528:	ee30 0a00 	vadd.f32	s0, s0, s0
 800452c:	4770      	bx	lr
 800452e:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8004532:	d123      	bne.n	800457c <scalbnf+0x64>
 8004534:	4b24      	ldr	r3, [pc, #144]	@ (80045c8 <scalbnf+0xb0>)
 8004536:	eddf 7a25 	vldr	s15, [pc, #148]	@ 80045cc <scalbnf+0xb4>
 800453a:	4298      	cmp	r0, r3
 800453c:	ee20 0a27 	vmul.f32	s0, s0, s15
 8004540:	db17      	blt.n	8004572 <scalbnf+0x5a>
 8004542:	ee10 3a10 	vmov	r3, s0
 8004546:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 800454a:	3a19      	subs	r2, #25
 800454c:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8004550:	4288      	cmp	r0, r1
 8004552:	dd15      	ble.n	8004580 <scalbnf+0x68>
 8004554:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 80045d0 <scalbnf+0xb8>
 8004558:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80045d4 <scalbnf+0xbc>
 800455c:	ee10 3a10 	vmov	r3, s0
 8004560:	eeb0 7a67 	vmov.f32	s14, s15
 8004564:	2b00      	cmp	r3, #0
 8004566:	bfb8      	it	lt
 8004568:	eef0 7a66 	vmovlt.f32	s15, s13
 800456c:	ee27 0a87 	vmul.f32	s0, s15, s14
 8004570:	4770      	bx	lr
 8004572:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80045d8 <scalbnf+0xc0>
 8004576:	ee27 0a80 	vmul.f32	s0, s15, s0
 800457a:	4770      	bx	lr
 800457c:	0dd2      	lsrs	r2, r2, #23
 800457e:	e7e5      	b.n	800454c <scalbnf+0x34>
 8004580:	4410      	add	r0, r2
 8004582:	28fe      	cmp	r0, #254	@ 0xfe
 8004584:	dce6      	bgt.n	8004554 <scalbnf+0x3c>
 8004586:	2800      	cmp	r0, #0
 8004588:	dd06      	ble.n	8004598 <scalbnf+0x80>
 800458a:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 800458e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8004592:	ee00 3a10 	vmov	s0, r3
 8004596:	4770      	bx	lr
 8004598:	f110 0f16 	cmn.w	r0, #22
 800459c:	da09      	bge.n	80045b2 <scalbnf+0x9a>
 800459e:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 80045d8 <scalbnf+0xc0>
 80045a2:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 80045dc <scalbnf+0xc4>
 80045a6:	ee10 3a10 	vmov	r3, s0
 80045aa:	eeb0 7a67 	vmov.f32	s14, s15
 80045ae:	2b00      	cmp	r3, #0
 80045b0:	e7d9      	b.n	8004566 <scalbnf+0x4e>
 80045b2:	3019      	adds	r0, #25
 80045b4:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80045b8:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80045bc:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 80045e0 <scalbnf+0xc8>
 80045c0:	ee07 3a90 	vmov	s15, r3
 80045c4:	e7d7      	b.n	8004576 <scalbnf+0x5e>
 80045c6:	bf00      	nop
 80045c8:	ffff3cb0 	.word	0xffff3cb0
 80045cc:	4c000000 	.word	0x4c000000
 80045d0:	7149f2ca 	.word	0x7149f2ca
 80045d4:	f149f2ca 	.word	0xf149f2ca
 80045d8:	0da24260 	.word	0x0da24260
 80045dc:	8da24260 	.word	0x8da24260
 80045e0:	33000000 	.word	0x33000000

080045e4 <floorf>:
 80045e4:	ee10 3a10 	vmov	r3, s0
 80045e8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80045ec:	3a7f      	subs	r2, #127	@ 0x7f
 80045ee:	2a16      	cmp	r2, #22
 80045f0:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 80045f4:	dc2b      	bgt.n	800464e <floorf+0x6a>
 80045f6:	2a00      	cmp	r2, #0
 80045f8:	da12      	bge.n	8004620 <floorf+0x3c>
 80045fa:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8004660 <floorf+0x7c>
 80045fe:	ee30 0a27 	vadd.f32	s0, s0, s15
 8004602:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8004606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800460a:	dd06      	ble.n	800461a <floorf+0x36>
 800460c:	2b00      	cmp	r3, #0
 800460e:	da24      	bge.n	800465a <floorf+0x76>
 8004610:	2900      	cmp	r1, #0
 8004612:	4b14      	ldr	r3, [pc, #80]	@ (8004664 <floorf+0x80>)
 8004614:	bf08      	it	eq
 8004616:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 800461a:	ee00 3a10 	vmov	s0, r3
 800461e:	4770      	bx	lr
 8004620:	4911      	ldr	r1, [pc, #68]	@ (8004668 <floorf+0x84>)
 8004622:	4111      	asrs	r1, r2
 8004624:	420b      	tst	r3, r1
 8004626:	d0fa      	beq.n	800461e <floorf+0x3a>
 8004628:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8004660 <floorf+0x7c>
 800462c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8004630:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8004634:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004638:	ddef      	ble.n	800461a <floorf+0x36>
 800463a:	2b00      	cmp	r3, #0
 800463c:	bfbe      	ittt	lt
 800463e:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8004642:	fa40 f202 	asrlt.w	r2, r0, r2
 8004646:	189b      	addlt	r3, r3, r2
 8004648:	ea23 0301 	bic.w	r3, r3, r1
 800464c:	e7e5      	b.n	800461a <floorf+0x36>
 800464e:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8004652:	d3e4      	bcc.n	800461e <floorf+0x3a>
 8004654:	ee30 0a00 	vadd.f32	s0, s0, s0
 8004658:	4770      	bx	lr
 800465a:	2300      	movs	r3, #0
 800465c:	e7dd      	b.n	800461a <floorf+0x36>
 800465e:	bf00      	nop
 8004660:	7149f2ca 	.word	0x7149f2ca
 8004664:	bf800000 	.word	0xbf800000
 8004668:	007fffff 	.word	0x007fffff

0800466c <_init>:
 800466c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800466e:	bf00      	nop
 8004670:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004672:	bc08      	pop	{r3}
 8004674:	469e      	mov	lr, r3
 8004676:	4770      	bx	lr

08004678 <_fini>:
 8004678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800467a:	bf00      	nop
 800467c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800467e:	bc08      	pop	{r3}
 8004680:	469e      	mov	lr, r3
 8004682:	4770      	bx	lr
